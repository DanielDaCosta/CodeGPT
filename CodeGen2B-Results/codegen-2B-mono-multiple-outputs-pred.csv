task_id,text,test_list,input,true_label,prediction
11,Write a python function to remove first and last occurrence of a given character from the string.,"['assert remove_Occ(""hello"",""l"") == ""heo""', 'assert remove_Occ(""abcda"",""a"") == ""bcd""', 'assert remove_Occ(""PHP"",""P"") == ""H""']","Write a python function to remove first and last occurrence of a given character from the string.
>>> Example: remove_Occ(""hello"",""l"") == ""heo""","def remove_Occ(s,ch): 
    for i in range(len(s)): 
        if (s[i] == ch): 
            s = s[0 : i] + s[i + 1:] 
            break
    for i in range(len(s) - 1,-1,-1):  
        if (s[i] == ch): 
            s = s[0 : i] + s[i + 1:] 
            break
    return s ","['Write a python function to remove first and last occurrence of a given character from the string.\n>>> Example: remove_Occ(""hello"",""l"") == ""heo""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example', 'Write a python function to remove first and last occurrence of a given character from the string.\n>>> Example: remove_Occ(""hello"",""l"") == ""heo""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example', 'Write a python function to remove first and last occurrence of a given character from the string.\n>>> Example: remove_Occ(""hello"",""l"") == ""heo""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example', 'Write a python function to remove first and last occurrence of a given character from the string.\n>>> Example: remove_Occ(""hello"",""l"") == ""heo""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n""""""\n', 'Write a python function to remove first and last occurrence of a given character from the string.\n>>> Example: remove_Occ(""hello"",""l"") == ""heo""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> ']"
11,Write a python function to remove first and last occurrence of a given character from the string.,"['assert remove_Occ(""hello"",""l"") == ""heo""', 'assert remove_Occ(""abcda"",""a"") == ""bcd""', 'assert remove_Occ(""PHP"",""P"") == ""H""']","Write a python function to remove first and last occurrence of a given character from the string.
>>> Example: remove_Occ(""hello"",""l"") == ""heo""","def remove_Occ(s,ch): 
    for i in range(len(s)): 
        if (s[i] == ch): 
            s = s[0 : i] + s[i + 1:] 
            break
    for i in range(len(s) - 1,-1,-1):  
        if (s[i] == ch): 
            s = s[0 : i] + s[i + 1:] 
            break
    return s ","['Write a python function to remove first and last occurrence of a given character from the string.\n>>> Example: remove_Occ(""hello"",""l"") == ""heo""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""', 'Write a python function to remove first and last occurrence of a given character from the string.\n>>> Example: remove_Occ(""hello"",""l"") == ""heo""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""', 'Write a python function to remove first and last occurrence of a given character from the string.\n>>> Example: remove_Occ(""hello"",""l"") == ""heo""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""', 'Write a python function to remove first and last occurrence of a given character from the string.\n>>> Example: remove_Occ(""hello"",""l"") == ""heo""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n""""""\n\ndef remove_Occ', 'Write a python function to remove first and last occurrence of a given character from the string.\n>>> Example: remove_Occ(""hello"",""l"") == ""heo""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> Example: remove_Occ(""hello"",""l"") == ""hello""\n>>> Example: remove_Occ(""hello"",""o"") == ""hello""\n>>> Example: remove_Occ(""hello"",""h"") == ""hello""\n>>> Example: remove_Occ(""hello"",""e"") == ""hello""\n>>> \n>>> \n>>>']"
12,Write a function to sort a given matrix in ascending order according to the sum of its rows.,"['assert sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]', 'assert sort_matrix([[1, 2, 3], [-2, 4, -5], [1, -1, 1]])==[[-2, 4, -5], [1, -1, 1], [1, 2, 3]]', 'assert sort_matrix([[5,8,9],[6,4,3],[2,1,4]])==[[2, 1, 4], [6, 4, 3], [5, 8, 9]]']","Write a function to sort a given matrix in ascending order according to the sum of its rows.
>>> Example: sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]","def sort_matrix(M):
    result = sorted(M, key=sum)
    return result","['Write a function to sort a given matrix in ascending order according to the sum of its rows.\n>>> Example: sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\n""""""\n\n', 'Write a function to sort a given matrix in ascending order according to the sum of its rows.\n>>> Example: sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\n""""""\n\n\n', 'Write a function to sort a given matrix in ascending order according to the sum of its rows.\n>>> Example: sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\n\n""""""\n', 'Write a function to sort a given matrix in ascending order according to the sum of its rows.\n>>> Example: sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\n""""""\ndef', 'Write a function to sort a given matrix in ascending order according to the sum of its rows.\n>>> Example: sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]\n\n""""""\n\n']"
13,Write a function to count the most common words in a dictionary.,"['assert count_common([\'red\',\'green\',\'black\',\'pink\',\'black\',\'white\',\'black\',\'eyes\',\'white\',\'black\',\'orange\',\'pink\',\'pink\',\'red\',\'red\',\'white\',\'orange\',\'white\',""black"",\'pink\',\'green\',\'green\',\'pink\',\'green\',\'pink\',\'white\',\'orange\',""orange"",\'red\']) == [(\'pink\', 6), (\'black\', 5), (\'white\', 5), (\'red\', 4)]', ""assert count_common(['one', 'two', 'three', 'four', 'five', 'one', 'two', 'one', 'three', 'one']) == [('one', 4), ('two', 2), ('three', 2), ('four', 1)]"", ""assert count_common(['Facebook', 'Apple', 'Amazon', 'Netflix', 'Google', 'Apple', 'Netflix', 'Amazon']) == [('Apple', 2), ('Amazon', 2), ('Netflix', 2), ('Facebook', 1)]""]","Write a function to count the most common words in a dictionary.
>>> Example: count_common(['red','green','black','pink','black','white','black','eyes','white','black','orange','pink','pink','red','red','white','orange','white',""black"",'pink','green','green','pink','green','pink','white','orange',""orange"",'red']) == [('pink', 6), ('black', 5), ('white', 5), ('red', 4)]","from collections import Counter
def count_common(words):
  word_counts = Counter(words)
  top_four = word_counts.most_common(4)
  return (top_four)
","['Write a function to count the most common words in a dictionary.\n>>> Example: count_common([\'red\',\'green\',\'black\',\'pink\',\'black\',\'white\',\'black\',\'eyes\',\'white\',\'black\',\'orange\',\'pink\',\'pink\',\'red\',\'red\',\'white\',\'orange\',\'white\',""black"",\'pink\',\'green\',\'green\',\'pink\',\'green\',\'pink\',\'white\',\'orange\',""orange"",\'red\']) == [(\'pink\', 6), (\'black\', 5), (\'white\', 5), (\'red\', 4)]\n>>> count_common([\'red\',\'green\',\'black\',\'pink\',\'black\',\'white\',\'black\',\'eyes\',\'white\',\'black\',\'orange\',\'pink\',\'pink\',\'red\',\'red\',\'white\',\'orange\',\'white\',""', 'Write a function to count the most common words in a dictionary.\n>>> Example: count_common([\'red\',\'green\',\'black\',\'pink\',\'black\',\'white\',\'black\',\'eyes\',\'white\',\'black\',\'orange\',\'pink\',\'pink\',\'red\',\'red\',\'white\',\'orange\',\'white\',""black"",\'pink\',\'green\',\'green\',\'pink\',\'green\',\'pink\',\'white\',\'orange\',""orange"",\'red\']) == [(\'pink\', 6), (\'black\', 5), (\'white\', 5), (\'red\', 4)]\n>>> count_common([\'red\',\'green\',\'black\',\'pink\',\'black\',\'white\',\'black\',\'eyes\',\'white\',\'black\',\'orange\',\'pink\',\'pink\',\'red\',\'red\',\'white\',\'orange\',\'white\',', 'Write a function to count the most common words in a dictionary.\n>>> Example: count_common([\'red\',\'green\',\'black\',\'pink\',\'black\',\'white\',\'black\',\'eyes\',\'white\',\'black\',\'orange\',\'pink\',\'pink\',\'red\',\'red\',\'white\',\'orange\',\'white\',""black"",\'pink\',\'green\',\'green\',\'pink\',\'green\',\'pink\',\'white\',\'orange\',""orange"",\'red\']) == [(\'pink\', 6), (\'black\', 5), (\'white\', 5), (\'red\', 4)]\n>>> count_common([\'red\',\'green\',\'black\',\'pink\',\'black\',\'white\',\'black\',\'eyes\',\'white\',\'black\',\'orange\',\'pink\',\'pink\',\'red\',\'red\',\'white\',\'orange\',\'white"",""', 'Write a function to count the most common words in a dictionary.\n>>> Example: count_common([\'red\',\'green\',\'black\',\'pink\',\'black\',\'white\',\'black\',\'eyes\',\'white\',\'black\',\'orange\',\'pink\',\'pink\',\'red\',\'red\',\'white\',\'orange\',\'white\',""black"",\'pink\',\'green\',\'green\',\'pink\',\'green\',\'pink\',\'white\',\'orange\',""orange"",\'red\']) == [(\'pink\', 6), (\'black\', 5), (\'white\', 5), (\'red\', 4)]\n>>> count_common([\'red\',\'green\',\'black\',\'black\',\'white\',\'black\',\'white\',\'black\',\'eyes\',\'white\',\'black\',\'orange\',\'pink\',\'pink\',\'red\',\'red\',\'white\',\'orange\',\'white', 'Write a function to count the most common words in a dictionary.\n>>> Example: count_common([\'red\',\'green\',\'black\',\'pink\',\'black\',\'white\',\'black\',\'eyes\',\'white\',\'black\',\'orange\',\'pink\',\'pink\',\'red\',\'red\',\'white\',\'orange\',\'white\',""black"",\'pink\',\'green\',\'green\',\'pink\',\'green\',\'pink\',\'white\',\'orange\',""orange"",\'red\']) == [(\'pink\', 6), (\'black\', 5), (\'white\', 5), (\'red\', 4)]\n>>> count_common([\'red\',\'green\',\'black\',\'black\',\'black\',\'white\',\'black\',\'eyes\',\'white\',\'black\',\'orange\',\'pink\',\'pink\',\'red\',\'red\',\'white\',\'orange\',\'white\',""black']"
14,Write a python function to find the volume of a triangular prism.,"['assert find_Volume(10,8,6) == 240', 'assert find_Volume(3,2,2) == 6', 'assert find_Volume(1,2,1) == 1']","Write a python function to find the volume of a triangular prism.
>>> Example: find_Volume(10,8,6) == 240","def find_Volume(l,b,h) : 
    return ((l * b * h) / 2) ","['Write a python function to find the volume of a triangular prism.\n>>> Example: find_Volume(10,8,6) == 240\n""""""\n\ndef find_Volume(a,b,c):\n    """"""\n    >>> find_Volume(10,8,6) ==', 'Write a python function to find the volume of a triangular prism.\n>>> Example: find_Volume(10,8,6) == 240\n""""""\n\n\ndef find_Volume(a, b, c):\n    """"""\n    >>> find_Volume(10,8,6) ==', 'Write a python function to find the volume of a triangular prism.\n>>> Example: find_Volume(10,8,6) == 240\n""""""\n\n\ndef find_Volume(a, b, c):\n    """"""\n    >>> find_Volume(10, 8, 6) ==', 'Write a python function to find the volume of a triangular prism.\n>>> Example: find_Volume(10,8,6) == 240\n""""""\n\n\ndef find_Volume(a, b, c):\n    """"""\n    >>> find_Volume(10, 8, 6)\n', 'Write a python function to find the volume of a triangular prism.\n>>> Example: find_Volume(10,8,6) == 240\n""""""\n\ndef find_Volume(a,b,c):\n    return (a*b*c)/3\n\nprint(find_']"
15,Write a function to split a string at lowercase letters.,"['assert split_lowerstring(""AbCd"")==[\'bC\',\'d\']', 'assert split_lowerstring(""Python"")==[\'y\', \'t\', \'h\', \'o\', \'n\']', 'assert split_lowerstring(""Programming"")==[\'r\', \'o\', \'g\', \'r\', \'a\', \'m\', \'m\', \'i\', \'n\', \'g\']']","Write a function to split a string at lowercase letters.
>>> Example: split_lowerstring(""AbCd"")==['bC','d']","import re
def split_lowerstring(text):
 return (re.findall('[a-z][^a-z]*', text))","['Write a function to split a string at lowercase letters.\n>>> Example: split_lowerstring(""AbCd"")==[\'bC\',\'d\']\n>>> Example: split_lowerstring(""abcd"")==[\'ab\',\'cd\']\n>>> Example: split_lowerstring(""ABCD"")==[\'ABC\',\'D\']\n>>> Example: split_lowerstring(""abcd"")==[\'ab\',\'cd\']\n>>>', 'Write a function to split a string at lowercase letters.\n>>> Example: split_lowerstring(""AbCd"")==[\'bC\',\'d\']\n>>> Example: split_lowerstring(""abcd"")==[\'ab\',\'cd\']\n>>> Example: split_lowerstring(""ABCD"")==[\'ABC\',\'D\']\n>>> Example: split_lowerstring(""abcde"")==[\'abc\',\'de\']\n>>>', 'Write a function to split a string at lowercase letters.\n>>> Example: split_lowerstring(""AbCd"")==[\'bC\',\'d\']\n>>> Example: split_lowerstring(""abcd"")==[\'ab\',\'cd\']\n>>> Example: split_lowerstring(""ABCD"")==[\'ABC\',\'D\']\n>>> Example: split_lowerstring(""abcdef"")==[\'abc\',\'def\']\n>>>', 'Write a function to split a string at lowercase letters.\n>>> Example: split_lowerstring(""AbCd"")==[\'bC\',\'d\']\n>>> Example: split_lowerstring(""abcd"")==[\'ab\',\'cd\']\n>>> Example: split_lowerstring(""ABCD"")==[\'ABC\',\'D\']\n>>> Example: split_lowerstring(""abcde"")==[\'ab\',\'cd\',\'e\']', 'Write a function to split a string at lowercase letters.\n>>> Example: split_lowerstring(""AbCd"")==[\'bC\',\'d\']\n>>> Example: split_lowerstring(""abcd"")==[\'ab\',\'cd\']\n>>> Example: split_lowerstring(""ABCD"")==[\'ABC\',\'D\']\n>>> Example: split_lowerstring(""abcd"")==[\'ab\',\'cd\']\n""""""']"
16,Write a function to find sequences of lowercase letters joined with an underscore.,"['assert text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')', 'assert text_lowercase_underscore(""aab_Abbbc"")==(\'Not matched!\')', 'assert text_lowercase_underscore(""Aaab_abbbc"")==(\'Not matched!\')']","Write a function to find sequences of lowercase letters joined with an underscore.
>>> Example: text_lowercase_underscore(""aab_cbbbc"")==('Found a match!')","import re
def text_lowercase_underscore(text):
        patterns = '^[a-z]+_[a-z]+$'
        if re.search(patterns,  text):
                return 'Found a match!'
        else:
                return('Not matched!')","['Write a function to find sequences of lowercase letters joined with an underscore.\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example', 'Write a function to find sequences of lowercase letters joined with an underscore.\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n""""""\n', 'Write a function to find sequences of lowercase letters joined with an underscore.\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n\'\'\'', 'Write a function to find sequences of lowercase letters joined with an underscore.\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\nTrue\n', 'Write a function to find sequences of lowercase letters joined with an underscore.\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n>>> Example: text_lowercase_underscore(""aab_cbbbc"")==(\'Found a match!\')\n\n\'\'']"
17,Write a function to find the perimeter of a square.,"['assert square_perimeter(10)==40', 'assert square_perimeter(5)==20', 'assert square_perimeter(4)==16']","Write a function to find the perimeter of a square.
>>> Example: square_perimeter(10)==40","def square_perimeter(a):
  perimeter=4*a
  return perimeter","['Write a function to find the perimeter of a square.\n>>> Example: square_perimeter(10)==40\n""""""\n\n\ndef square_perimeter(side):\n    return 4 * side\n\n\nprint(square_perimeter(10))\n', 'Write a function to find the perimeter of a square.\n>>> Example: square_perimeter(10)==40\n""""""\n\n\ndef square_perimeter(side):\n    return 4*side\n\n\nprint(square_perimeter(10))\n', 'Write a function to find the perimeter of a square.\n>>> Example: square_perimeter(10)==40\n""""""\n\n\ndef square_perimeter(side):\n    return 4 * side\n\n\nprint(square_perimeter(10))\nprint(square_perimeter(20))\nprint(', 'Write a function to find the perimeter of a square.\n>>> Example: square_perimeter(10)==40\n""""""\n\n\ndef square_perimeter(side):\n    return 4 * side\n\n\nprint(square_perimeter(10))\nprint(square_perimeter(100))\nprint(', 'Write a function to find the perimeter of a square.\n>>> Example: square_perimeter(10)==40\n""""""\n\n\ndef square_perimeter(side):\n    return 4 * side\n\n\nprint(square_perimeter(10))\nprint(square_perimeter(20))\n']"
18,Write a function to remove characters from the first string which are present in the second string.,"['assert remove_dirty_chars(""probasscurve"", ""pros"") == \'bacuve\'', 'assert remove_dirty_chars(""digitalindia"", ""talent"") == \'digiidi\'', 'assert remove_dirty_chars(""exoticmiles"", ""toxic"") == \'emles\' ']","Write a function to remove characters from the first string which are present in the second string.
>>> Example: remove_dirty_chars(""probasscurve"", ""pros"") == 'bacuve'","NO_OF_CHARS = 256
def str_to_list(string): 
	temp = [] 
	for x in string: 
		temp.append(x) 
	return temp 
def lst_to_string(List): 
	return ''.join(List) 
def get_char_count_array(string): 
	count = [0] * NO_OF_CHARS 
	for i in string: 
		count[ord(i)] += 1
	return count 
def remove_dirty_chars(string, second_string): 
	count = get_char_count_array(second_string) 
	ip_ind = 0
	res_ind = 0
	temp = '' 
	str_list = str_to_list(string) 
	while ip_ind != len(str_list): 
		temp = str_list[ip_ind] 
		if count[ord(temp)] == 0: 
			str_list[res_ind] = str_list[ip_ind] 
			res_ind += 1
		ip_ind+=1
	return lst_to_string(str_list[0:res_ind]) ","['Write a function to remove characters from the first string which are present in the second string.\n>>> Example: remove_dirty_chars(""probasscurve"", ""pros"") == \'bacuve\'\n\'\'\'\n\ndef remove_dirty_chars(str1, str2):\n    return \'\'.join(c for c in str1 if c not in str2)\n\nprint(remove_dirty_chars(""probasscurve"", ""pros""))\n', 'Write a function to remove characters from the first string which are present in the second string.\n>>> Example: remove_dirty_chars(""probasscurve"", ""pros"") == \'bacuve\'\n\n\'\'\'\n\ndef remove_dirty_chars(str1, str2):\n    return \'\'.join(c for c in str1 if c not in str2)\n\nprint(remove_dirty_chars(""probasscurve"", ""pros""))\n', 'Write a function to remove characters from the first string which are present in the second string.\n>>> Example: remove_dirty_chars(""probasscurve"", ""pros"") == \'bacuve\'\n\n\'\'\'\n\ndef remove_dirty_chars(string1, string2):\n    return \'\'.join(c for c in string1 if c not in string2)\n\nprint(remove_dirty_chars(""probasscurve"", ""pros""))\n', 'Write a function to remove characters from the first string which are present in the second string.\n>>> Example: remove_dirty_chars(""probasscurve"", ""pros"") == \'bacuve\'\n\n\'\'\'\n\ndef remove_dirty_chars(string1, string2):\n    return \'\'.join(char for char in string1 if char not in string2)\n\nprint(remove_dirty_chars(""probasscurve"", ""pros""))\n', 'Write a function to remove characters from the first string which are present in the second string.\n>>> Example: remove_dirty_chars(""probasscurve"", ""pros"") == \'bacuve\'\n\n\'\'\'\n\ndef remove_dirty_chars(str1, str2):\n    return \'\'.join(ch for ch in str1 if ch not in str2)\n\nprint(remove_dirty_chars(""probasscurve"", ""pros""))\n']"
19,Write a function to find whether a given array of integers contains any duplicate element.,"['assert test_duplicate(([1,2,3,4,5]))==False', 'assert test_duplicate(([1,2,3,4, 4]))==True', 'assert test_duplicate([1,1,2,2,3,3,4,4,5])==True']","Write a function to find whether a given array of integers contains any duplicate element.
>>> Example: test_duplicate(([1,2,3,4,5]))==False","def test_duplicate(arraynums):
    nums_set = set(arraynums)    
    return len(arraynums) != len(nums_set)     ","['Write a function to find whether a given array of integers contains any duplicate element.\n>>> Example: test_duplicate(([1,2,3,4,5]))==False\n>>> Example: test_duplicate(([1,2,3,4,5,1]))==True\n>>> Example: test_duplicate(([1,2,3,4,5,1,2]))==True\n>>> Example: test_duplicate(([1,2,3,4,5,1,2,', 'Write a function to find whether a given array of integers contains any duplicate element.\n>>> Example: test_duplicate(([1,2,3,4,5]))==False\n>>> Example: test_duplicate(([1,2,3,4,5,1]))==True\n>>> Example: test_duplicate(([1,2,3,4,5,2]))==True\n>>> Example: test_duplicate(([1,2,3,4,5,3]))==True\n', 'Write a function to find whether a given array of integers contains any duplicate element.\n>>> Example: test_duplicate(([1,2,3,4,5]))==False\n>>> Example: test_duplicate(([1,2,3,4,5,5]))==True\n>>> Example: test_duplicate(([1,2,3,4,5,6]))==True\n>>> Example: test_duplicate(([1,2,3,4,5,6,6]))==', 'Write a function to find whether a given array of integers contains any duplicate element.\n>>> Example: test_duplicate(([1,2,3,4,5]))==False\n>>> Example: test_duplicate(([1,2,3,4,5,1]))==True\n>>> Example: test_duplicate(([1,2,3,4,5,2]))==True\n>>> Example: test_duplicate(([1,2,3,4,5,2,3]))==', 'Write a function to find whether a given array of integers contains any duplicate element.\n>>> Example: test_duplicate(([1,2,3,4,5]))==False\n>>> Example: test_duplicate(([1,2,3,4,5,1]))==True\n>>> Example: test_duplicate(([1,2,3,4,5,2]))==True\n>>> Example: test_duplicate(([1,2,3,4,5,6]))==True\n']"
20,Write a function to check if the given number is woodball or not.,"['assert is_woodall(383) == True', 'assert is_woodall(254) == False', 'assert is_woodall(200) == False']","Write a function to check if the given number is woodball or not.
>>> Example: is_woodall(383) == True","def is_woodall(x): 
	if (x % 2 == 0): 
		return False
	if (x == 1): 
		return True
	x = x + 1 
	p = 0
	while (x % 2 == 0): 
		x = x/2
		p = p + 1
		if (p == x): 
			return True
	return False","['Write a function to check if the given number is woodball or not.\n>>> Example: is_woodall(383) == True\n""""""\n\ndef is_woodall(num):\n    if num % 7 == 0:\n        return True\n    else:\n        return False\n\nprint(is_woodall(383))\nprint(is_woodall(7))\nprint(is_woodall(8))\nprint(is_woodall(9))\nprint(is_woodall(10))\nprint(is_woodall(11))\nprint(is_woodall(12))\nprint(is_woodall(13))\nprint(is_woodall(14))\nprint(is_woodall(15))\nprint(is_woodall(16))\nprint(is_woodall(17))\n', 'Write a function to check if the given number is woodball or not.\n>>> Example: is_woodall(383) == True\n""""""\n\ndef is_woodall(num):\n    if num % 7 == 0:\n        return True\n    else:\n        return False\n\nprint(is_woodall(383))\nprint(is_woodall(7))\nprint(is_woodall(8))\nprint(is_woodall(9))\nprint(is_woodall(10))\nprint(is_woodall(11))\nprint(is_woodall(12))\nprint(is_woodall(13))\nprint(is_woodall(14))\nprint(is_woodall(15))\nprint(is_woodall(16))\nprint(is_woodall(17))', 'Write a function to check if the given number is woodball or not.\n>>> Example: is_woodall(383) == True\n""""""\n\ndef is_woodall(num):\n    if num % 7 == 0:\n        return True\n    else:\n        return False\n\nprint(is_woodall(383))', 'Write a function to check if the given number is woodball or not.\n>>> Example: is_woodall(383) == True\n""""""\n\ndef is_woodall(num):\n    if num % 7 == 0 and num % 5 == 0:\n        return True\n    else:\n        return False\n\nprint(is_woodall(383))\n', 'Write a function to check if the given number is woodball or not.\n>>> Example: is_woodall(383) == True\n""""""\n\ndef is_woodall(num):\n    if num % 7 == 0 and num % 5 == 0:\n        return True\n    else:\n        return False\n\nprint(is_woodall(383))']"
21,Write a function to find m number of multiples of n.,"['assert multiples_of_num(4,3)== [3,6,9,12]', 'assert multiples_of_num(2,5)== [5,10]', 'assert multiples_of_num(9,2)== [2,4,6,8,10,12,14,16,18]']","Write a function to find m number of multiples of n.
>>> Example: multiples_of_num(4,3)== [3,6,9,12]","def multiples_of_num(m,n): 
    multiples_of_num= list(range(n,(m+1)*n, n)) 
    return list(multiples_of_num)","['Write a function to find m number of multiples of n.\n>>> Example: multiples_of_num(4,3)== [3,6,9,12]\n>>> multiples_of_num(4,3)\n[3, 6, 9, 12]\n""""""\n\n\ndef multiples_of_num(n, m):\n    """"""\n    Write a function to find m number of multiples of n.\n    >>> multiples_of_num(4,3)== [3,6,9,', 'Write a function to find m number of multiples of n.\n>>> Example: multiples_of_num(4,3)== [3,6,9,12]\n>>> multiples_of_num(4,3)\n[3, 6, 9, 12]\n""""""\n\n\ndef multiples_of_num(n, m):\n    """"""\n    Write a function to find m number of multiples of n\n    >>> multiples_of_num(4,3)== [3,6,9,12', 'Write a function to find m number of multiples of n.\n>>> Example: multiples_of_num(4,3)== [3,6,9,12]\n>>> multiples_of_num(4,3)\n[3, 6, 9, 12]\n""""""\n\n\ndef multiples_of_num(n, m):\n    """"""\n    >>> multiples_of_num(4,3)\n    [3, 6, 9, 12]\n    >>> multiples_of_num(4,', 'Write a function to find m number of multiples of n.\n>>> Example: multiples_of_num(4,3)== [3,6,9,12]\n>>> multiples_of_num(4,3)\n[3, 6, 9, 12]\n""""""\n\n\ndef multiples_of_num(n, m):\n    """"""\n    >>> multiples_of_num(4,3)\n    [3, 6, 9, 12]\n    >>> multiples_of_num(5,', 'Write a function to find m number of multiples of n.\n>>> Example: multiples_of_num(4,3)== [3,6,9,12]\n>>> multiples_of_num(4,3)\n[3, 6, 9, 12]\n""""""\n\n\ndef multiples_of_num(n, m):\n    """"""\n    >>> multiples_of_num(4,3)\n    [3, 6, 9, 12]\n    >>> multiples_of_num(10,']"
22,Write a function to find the first duplicate element in a given array of integers.,"['assert find_first_duplicate(([1, 2, 3, 4, 4, 5]))==4', 'assert find_first_duplicate([1, 2, 3, 4])==-1', 'assert find_first_duplicate([1, 1, 2, 3, 3, 2, 2])==1']","Write a function to find the first duplicate element in a given array of integers.
>>> Example: find_first_duplicate(([1, 2, 3, 4, 4, 5]))==4","def find_first_duplicate(nums):
    num_set = set()
    no_duplicate = -1

    for i in range(len(nums)):

        if nums[i] in num_set:
            return nums[i]
        else:
            num_set.add(nums[i])

    return no_duplicate","['Write a function to find the first duplicate element in a given array of integers.\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 4, 5]))==4\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 5]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8, 9]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))==-1\n>>> Example: find_first_duplicate(([1', 'Write a function to find the first duplicate element in a given array of integers.\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 4, 5]))==4\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 5]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8, 9]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8, 9, 9]))==-1\n>>> Example: find_first_duplicate(([1', 'Write a function to find the first duplicate element in a given array of integers.\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 4, 5]))==4\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 5]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8, 9]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))==-1\n>>> Example: find_first_duplicate(([2', 'Write a function to find the first duplicate element in a given array of integers.\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 4, 5]))==4\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 5]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8, 9]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))==-1\n""""""\n\n\ndef find_first_duplicate(arr', 'Write a function to find the first duplicate element in a given array of integers.\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 4, 5]))==4\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 5]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8, 9]))==-1\n>>> Example: find_first_duplicate(([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))==-1\n>>> Example: find_first_duplicate(([0']"
23,Write a python function to find the maximum sum of elements of list in a list of lists.,"['assert maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33', 'assert maximum_Sum([[0,1,1],[1,1,2],[3,2,1]]) == 6', 'assert maximum_Sum([[0,1,3],[1,2,1],[9,8,2],[0,1,0],[6,4,8]]) == 19']","Write a python function to find the maximum sum of elements of list in a list of lists.
>>> Example: maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33","def maximum_Sum(list1): 
    maxi = -100000
    for x in list1: 
        sum = 0 
        for y in x: 
            sum+= y      
        maxi = max(sum,maxi)     
    return maxi ","['Write a python function to find the maximum sum of elements of list in a list of lists.\n>>> Example: maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33', 'Write a python function to find the maximum sum of elements of list in a list of lists.\n>>> Example: maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12]]) == 33\n>>> maximum_Sum([[1,2,3', 'Write a python function to find the maximum sum of elements of list in a list of lists.\n>>> Example: maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12]]) == 33\n>>> maximum_Sum([', 'Write a python function to find the maximum sum of elements of list in a list of lists.\n>>> Example: maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14', 'Write a python function to find the maximum sum of elements of list in a list of lists.\n>>> Example: maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 33\n>>> maximum_Sum([[1,2,3],[4,5,6],[10,11,12],[7,8,9]]) == 34']"
24,Write a function to convert the given binary number to its decimal equivalent.,"['assert binary_to_decimal(100) == 4', 'assert binary_to_decimal(1011) == 11', 'assert binary_to_decimal(1101101) == 109']","Write a function to convert the given binary number to its decimal equivalent.
>>> Example: binary_to_decimal(100) == 4","def binary_to_decimal(binary): 
    binary1 = binary 
    decimal, i, n = 0, 0, 0
    while(binary != 0): 
        dec = binary % 10
        decimal = decimal + dec * pow(2, i) 
        binary = binary//10
        i += 1
    return (decimal)","['Write a function to convert the given binary number to its decimal equivalent.\n>>> Example: binary_to_decimal(100) == 4\n""""""\n\ndef binary_to_decimal(binary_number):\n    binary_number = str(binary_number)\n    decimal_number = 0\n    for i in range(len(binary_number)):\n        decimal_number += int(binary_number[i]) * 2 ** (len(binary_number) - i - 1)\n    return decimal_number\n\nprint(binary_to_decimal(100))\n', 'Write a function to convert the given binary number to its decimal equivalent.\n>>> Example: binary_to_decimal(100) == 4\n""""""\n\ndef binary_to_decimal(binary_number):\n    binary_number = str(binary_number)\n    decimal_number = 0\n    for i in range(len(binary_number)):\n        decimal_number += int(binary_number[i]) * 2 ** (len(binary_number) - i - 1)\n    return decimal_number\n\nprint(binary_to_decimal(100))', 'Write a function to convert the given binary number to its decimal equivalent.\n>>> Example: binary_to_decimal(100) == 4\n""""""\n\ndef binary_to_decimal(binary_number):\n    binary_number = str(binary_number)\n    decimal_number = 0\n    for i in range(len(binary_number)):\n        decimal_number += int(binary_number[i]) * (2 ** (len(binary_number) - i - 1))\n    return decimal_number\n\nprint(binary_to_decimal(100))\n', 'Write a function to convert the given binary number to its decimal equivalent.\n>>> Example: binary_to_decimal(100) == 4\n""""""\n\ndef binary_to_decimal(binary_number):\n    binary_number = str(binary_number)\n    decimal_number = 0\n    for i in range(len(binary_number)):\n        decimal_number += int(binary_number[i]) * (2 ** (len(binary_number) - i - 1))\n    return decimal_number\n\nprint(binary_to_decimal(100))', 'Write a function to convert the given binary number to its decimal equivalent.\n>>> Example: binary_to_decimal(100) == 4\n""""""\n\ndef binary_to_decimal(binary_number):\n    binary_number = str(binary_number)\n    decimal_number = 0\n    for i in range(len(binary_number)):\n        if binary_number[i] == \'1\':\n            decimal_number += 2**(len(binary_number)-i-1)\n    return decimal_number\n\nprint(binary_to_decimal(100))']"
25,Write a python function to find the product of non-repeated elements in a given array.,"['assert find_Product([1,1,2,3],4) == 6', 'assert find_Product([1,2,3,1,1],5) == 6', 'assert find_Product([1,1,4,5,6],5) == 120']","Write a python function to find the product of non-repeated elements in a given array.
>>> Example: find_Product([1,1,2,3],4) == 6","def find_Product(arr,n): 
    arr.sort() 
    prod = 1
    for i in range(0,n,1): 
        if (arr[i - 1] != arr[i]): 
            prod = prod * arr[i] 
    return prod; ","['Write a python function to find the product of non-repeated elements in a given array.\n>>> Example: find_Product([1,1,2,3],4) == 6\nTrue\n>>> Example: find_Product([1,1,2,2],4) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],5) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],6) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],7) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],8) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],9) == 2\nTrue\n>>> Example: find_Product([', 'Write a python function to find the product of non-repeated elements in a given array.\n>>> Example: find_Product([1,1,2,3],4) == 6\nTrue\n>>> Example: find_Product([1,1,2,2],4) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],1) == 1\nTrue\n>>> Example: find_Product([1,1,2,2],2) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],3) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],4) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],5) == 2\nTrue\n>>> Example: find_Product([', 'Write a python function to find the product of non-repeated elements in a given array.\n>>> Example: find_Product([1,1,2,3],4) == 6\nTrue\n>>> Example: find_Product([1,1,2,2],4) == 4\nTrue\n>>> Example: find_Product([1,1,2,2],1) == 1\nTrue\n>>> Example: find_Product([1,1,2,2],2) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],3) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],4) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],5) == 2\nTrue\n>>> Example: find_Product([', 'Write a python function to find the product of non-repeated elements in a given array.\n>>> Example: find_Product([1,1,2,3],4) == 6\nTrue\n>>> Example: find_Product([1,1,2,2],4) == 4\nTrue\n>>> Example: find_Product([1,1,2,2],1) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],2) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],3) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],4) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],5) == 2\nTrue\n>>> Example: find_Product([', 'Write a python function to find the product of non-repeated elements in a given array.\n>>> Example: find_Product([1,1,2,3],4) == 6\nTrue\n>>> Example: find_Product([1,1,2,2],4) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],5) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],6) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],7) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],8) == 2\nTrue\n>>> Example: find_Product([1,1,2,2],9) == 3\nTrue\n>>> Example: find_Product([']"
26,Write a function to check if the given tuple list has all k elements.,"['assert check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 4) == True', 'assert check_k_elements([(7, 7, 7), (7, 7)], 7) == True', 'assert check_k_elements([(9, 9), (9, 9, 9, 9)], 7) == False']","Write a function to check if the given tuple list has all k elements.
>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 4) == True","def check_k_elements(test_list, K):
  res = True
  for tup in test_list:
    for ele in tup:
      if ele != K:
        res = False
  return (res) ","['Write a function to check if the given tuple list has all k elements.\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 4) == True\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 5) == False\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 6) == False\n>>> Example: check', 'Write a function to check if the given tuple list has all k elements.\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 4) == True\nTrue\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 5) == False\nFalse\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 6) == False\n', 'Write a function to check if the given tuple list has all k elements.\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 4) == True\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 5) == False\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 3) == False\n>>> Example: check', 'Write a function to check if the given tuple list has all k elements.\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 4) == True\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 5) == False\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 6) == False\n""""""\n\n\ndef', 'Write a function to check if the given tuple list has all k elements.\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 4) == True\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 5) == False\n>>> Example: check_k_elements([(4, 4), (4, 4, 4), (4, 4), (4, 4, 4, 4), (4, )], 6) == False\n""""""\n\ndef']"
27,Write a python function to remove all digits from a list of strings.,"[""assert remove(['4words', '3letters', '4digits']) == ['words', 'letters', 'digits']"", ""assert remove(['28Jan','12Jan','11Jan']) == ['Jan','Jan','Jan']"", ""assert remove(['wonder1','wonder2','wonder3']) == ['wonder','wonder','wonder']""]","Write a python function to remove all digits from a list of strings.
>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', 'digits']","import re  
def remove(list): 
    pattern = '[0-9]'
    list = [re.sub(pattern, '', i) for i in list] 
    return list","[""Write a python function to remove all digits from a list of strings.\n>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', 'digits']\n>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', 'digits']\n>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', 'digits']\n>>> Example: remove(['4words', '3letters', '4digits']) =="", ""Write a python function to remove all digits from a list of strings.\n>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', 'digits']\n>>> Example: remove(['4words', '3letters', '4digits']) == ['4words', '3letters', '4digits']\n>>> Example: remove(['4words', '3letters', '4digits']) == ['4words', '3letters', '4digits']\n>>> Example: remove(['4words', '3letters', '"", ""Write a python function to remove all digits from a list of strings.\n>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', 'digits']\n>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', 'digits']\n>>> Example: remove(['4words', '3letters', '4digits']) == ['4words', '3letters', '4digits']\n>>> Example: remove(['4words', '3letters', '4digits"", ""Write a python function to remove all digits from a list of strings.\n>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', 'digits']\n>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', '4digits']\n>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', '4digits']\n>>> Example: remove(['4words', '3letters', '4digits'"", ""Write a python function to remove all digits from a list of strings.\n>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', 'digits']\n>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', 'digits']\n>>> Example: remove(['4words', '3letters', '4digits']) == ['words', 'letters', 'digits']\n>>> Example: remove(['4words', '3letters', '4digits'])\n""]"
28,Write a python function to find binomial co-efficient.,"['assert binomial_Coeff(5,2) == 10', 'assert binomial_Coeff(4,3) == 4', 'assert binomial_Coeff(3,2) == 3']","Write a python function to find binomial co-efficient.
>>> Example: binomial_Coeff(5,2) == 10","def binomial_Coeff(n,k): 
    if k > n : 
       return 0
    if k==0 or k ==n : 
        return 1 
    return binomial_Coeff(n-1,k-1) + binomial_Coeff(n-1,k) ","['Write a python function to find binomial co-efficient.\n>>> Example: binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_', 'Write a python function to find binomial co-efficient.\n>>> Example: binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n""""""\n\ndef', 'Write a python function to find binomial co-efficient.\n>>> Example: binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> \n', 'Write a python function to find binomial co-efficient.\n>>> Example: binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> \n>>>', 'Write a python function to find binomial co-efficient.\n>>> Example: binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n>>> binomial_Coeff(5,2) == 10\n""""""\ndef bin']"
29,Write a python function to find the element occurring odd number of times.,"['assert get_Odd_Occurrence([1,2,3,1,2,3,1],7) == 1', 'assert get_Odd_Occurrence([1,2,3,2,3,1,3],7) == 3', 'assert get_Odd_Occurrence([2,3,5,4,5,2,4,3,5,2,4,4,2],13) == 5']","Write a python function to find the element occurring odd number of times.
>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],7) == 1","def get_Odd_Occurrence(arr,arr_size):   
    for i in range(0,arr_size): 
        count = 0
        for j in range(0,arr_size): 
            if arr[i] == arr[j]: 
                count+=1     
        if (count % 2 != 0): 
            return arr[i]     
    return -1","['Write a python function to find the element occurring odd number of times.\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],7) == 1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],3) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],1) == 1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],0) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],5) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],6) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],7) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],8) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,', 'Write a python function to find the element occurring odd number of times.\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],7) == 1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],3) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],1) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],0) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],5) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],6) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],7) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],8) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1', 'Write a python function to find the element occurring odd number of times.\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],7) == 1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],3) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],1) == 1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],0) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],5) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],6) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],7) == 1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],8) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2', 'Write a python function to find the element occurring odd number of times.\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],7) == 1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],3) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],1) == 1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],0) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],5) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],6) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],7) == 1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],8) == 1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,', 'Write a python function to find the element occurring odd number of times.\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],7) == 1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],3) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],1) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],0) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],5) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],6) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],7) == 1\n>>> Example: get_Odd_Occurrence([1,2,3,1,2,3,1],8) == -1\n>>> Example: get_Odd_Occurrence([1,2,3,1,']"
30,Write a python function to count all the substrings starting and ending with same characters.,"['assert count_Substring_With_Equal_Ends(""abc"") == 3', 'assert count_Substring_With_Equal_Ends(""abcda"") == 6', 'assert count_Substring_With_Equal_Ends(""ab"") == 2']","Write a python function to count all the substrings starting and ending with same characters.
>>> Example: count_Substring_With_Equal_Ends(""abc"") == 3","def check_Equality(s): 
    return (ord(s[0]) == ord(s[len(s) - 1])); 
def count_Substring_With_Equal_Ends(s): 
    result = 0; 
    n = len(s); 
    for i in range(n): 
        for j in range(1,n-i+1):  
            if (check_Equality(s[i:i+j])): 
                result+=1; 
    return result; ","['Write a python function to count all the substrings starting and ending with same characters.\n>>> Example: count_Substring_With_Equal_Ends(""abc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""', 'Write a python function to count all the substrings starting and ending with same characters.\n>>> Example: count_Substring_With_Equal_Ends(""abc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_', 'Write a python function to count all the substrings starting and ending with same characters.\n>>> Example: count_Substring_With_Equal_Ends(""abc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring', 'Write a python function to count all the substrings starting and ending with same characters.\n>>> Example: count_Substring_With_Equal_Ends(""abc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_', 'Write a python function to count all the substrings starting and ending with same characters.\n>>> Example: count_Substring_With_Equal_Ends(""abc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Substring_With_Equal_Ends(""abcabcabcabcabcabcabcabcabcabcabc"") == 3\n>>> Example: count_Sub']"
33,Write a python function to convert a decimal number to binary number.,"['assert decimal_To_Binary(10) == 1010', 'assert decimal_To_Binary(1) == 1', 'assert decimal_To_Binary(20) == 10100']","Write a python function to convert a decimal number to binary number.
>>> Example: decimal_To_Binary(10) == 1010","def decimal_To_Binary(N): 
    B_Number = 0
    cnt = 0
    while (N != 0): 
        rem = N % 2
        c = pow(10,cnt)  
        B_Number += rem*c  
        N //= 2 
        cnt += 1
    return B_Number  ","['Write a python function to convert a decimal number to binary number.\n>>> Example: decimal_To_Binary(10) == 1010\n""""""\n\ndef decimal_To_Binary(decimal_number):\n    binary_number = []\n    while decimal_number > 0:\n        remainder = decimal_number % 2\n        binary_number.append(remainder)\n        decimal_number = decimal_number // 2\n    binary_number.reverse()\n    return binary_number\n\nprint(decimal_To_Binary(10))\n', 'Write a python function to convert a decimal number to binary number.\n>>> Example: decimal_To_Binary(10) == 1010\n""""""\n\ndef decimal_To_Binary(decimal_number):\n    binary_number = []\n    while decimal_number > 0:\n        remainder = decimal_number % 2\n        binary_number.append(remainder)\n        decimal_number = decimal_number // 2\n    binary_number.reverse()\n    return binary_number\n\nprint(decimal_To_Binary(10))', 'Write a python function to convert a decimal number to binary number.\n>>> Example: decimal_To_Binary(10) == 1010\n""""""\n\ndef decimal_To_Binary(decimal_number):\n    binary_number = []\n    while decimal_number > 0:\n        remainder = decimal_number % 2\n        binary_number.append(remainder)\n        decimal_number = decimal_number // 2\n    binary_number.reverse()\n    print(binary_number)\n\ndecimal_To_Binary(10)\n', 'Write a python function to convert a decimal number to binary number.\n>>> Example: decimal_To_Binary(10) == 1010\n""""""\n\ndef decimal_To_Binary(decimal_number):\n    binary_number = []\n    while decimal_number > 0:\n        remainder = decimal_number % 2\n        binary_number.append(remainder)\n        decimal_number = decimal_number // 2\n    binary_number.reverse()\n    return binary_number\n\nprint(decimal_To_Binary(10))\nprint(decimal_To_Binary(11))\nprint(decimal_To_Binary(12))\nprint(decimal_To_Binary(13))\nprint(decimal_To_Binary(14))\n', 'Write a python function to convert a decimal number to binary number.\n>>> Example: decimal_To_Binary(10) == 1010\n""""""\n\ndef decimal_To_Binary(decimal_number):\n    binary_number = []\n    while decimal_number > 0:\n        remainder = decimal_number % 2\n        binary_number.append(remainder)\n        decimal_number = decimal_number // 2\n    binary_number.reverse()\n    return binary_number\n\nprint(decimal_To_Binary(10))\nprint(decimal_To_Binary(11))\nprint(decimal_To_Binary(12))\nprint(decimal_To_Binary(13))\nprint(decimal_To_Binary(14))']"
34,Write a python function to find the missing number in a sorted array.,"['assert find_missing([1,2,3,5],4) == 4', 'assert find_missing([1,3,4,5],4) == 2', 'assert find_missing([1,2,3,5,6,7],5) == 4']","Write a python function to find the missing number in a sorted array.
>>> Example: find_missing([1,2,3,5],4) == 4","def find_missing(ar,N): 
    l = 0
    r = N - 1
    while (l <= r):  
        mid = (l + r) / 2
        mid= int (mid) 
        if (ar[mid] != mid + 1 and ar[mid - 1] == mid): 
            return (mid + 1)  
        elif (ar[mid] != mid + 1): 
            r = mid - 1 
        else: 
            l = mid + 1
    return (-1) ","['Write a python function to find the missing number in a sorted array.\n>>> Example: find_missing([1,2,3,5],4) == 4\n>>> Example: find_missing([1,2,3,5],6) == 4\n>>> Example: find_missing([1,2,3,5],7) == 4\n>>> Example: find_missing([1,2,3,5],8) == 4\n>>> Example: find_missing([1,2,3,5],9) == 4\n>>> Example: find_missing([1,2,3,5],10) == 4\n>>> Example: find_missing([1,2,3,5],11) == 4\n>>> Example: find_missing([1,2,3,5],12) == 4\n>>> Example: find_missing([1,2,3,5],13) == 4\n>>> Example: find_missing([1,2,3,5],14) == 4\n>>> Example: find_missing([1,2,3,5],15) == 4\n>>> Example: find_missing([1,2,3,5],16) == 4\n>>> Example: find_missing([1,2,3,5],17) == 4\n>>> Example: find_missing([1,2,3,5],18) == 4\n>>> Example: find_missing([1,2,3,5],19) == 4\n>>> Example: find_missing([1,2,3,5],20) == 4\n>>> Example: find_missing([', 'Write a python function to find the missing number in a sorted array.\n>>> Example: find_missing([1,2,3,5],4) == 4\n>>> Example: find_missing([1,2,3,5],5) == 4\n>>> Example: find_missing([1,2,3,5],6) == 4\n>>> Example: find_missing([1,2,3,5],7) == 4\n>>> Example: find_missing([1,2,3,5],8) == 4\n>>> Example: find_missing([1,2,3,5],9) == 4\n>>> Example: find_missing([1,2,3,5],10) == 4\n>>> Example: find_missing([1,2,3,5],11) == 4\n>>> Example: find_missing([1,2,3,5],12) == 4\n>>> Example: find_missing([1,2,3,5],13) == 4\n>>> Example: find_missing([1,2,3,5],14) == 4\n>>> Example: find_missing([1,2,3,5],15) == 4\n>>> Example: find_missing([1,2,3,5],16) == 4\n>>> Example: find_missing([1,2,3,5],17) == 4\n>>> Example: find_missing([1,2,3,5],18) == 4\n>>> Example: find_missing([1,2,3,5],19) == 4\n>>> Example: find_missing([', 'Write a python function to find the missing number in a sorted array.\n>>> Example: find_missing([1,2,3,5],4) == 4\nTrue\n>>> Example: find_missing([1,2,3,5],6) == 5\nTrue\n>>> Example: find_missing([1,2,3,5],7) == 6\nTrue\n>>> Example: find_missing([1,2,3,5],8) == 7\nTrue\n>>> Example: find_missing([1,2,3,5],9) == 8\nTrue\n>>> Example: find_missing([1,2,3,5],10) == 9\nTrue\n>>> Example: find_missing([1,2,3,5],11) == 10\nTrue\n>>> Example: find_missing([1,2,3,5],12) == 11\nTrue\n>>> Example: find_missing([1,2,3,5],13) == 12\nTrue\n>>> Example: find_missing([1,2,3,5],14) == 13\nTrue\n>>> Example: find_missing([1,2,3,5],15) == 14\nTrue\n>>> Example: find_missing([1,2,3,5],16) == 15\nTrue\n>>> Example: find_missing([1,2,3,5],17) == 16\nTrue\n>>> Example: find_missing([1,2,3,5],18) == 17\nTrue\n>>> Example: find_missing([1,2,3,5],19) == 18', 'Write a python function to find the missing number in a sorted array.\n>>> Example: find_missing([1,2,3,5],4) == 4\n>>> Example: find_missing([1,2,3,5],6) == 4\n>>> Example: find_missing([1,2,3,5],7) == 4\n>>> Example: find_missing([1,2,3,5],8) == 4\n>>> Example: find_missing([1,2,3,5],9) == 4\n>>> Example: find_missing([1,2,3,5],10) == 4\n>>> Example: find_missing([1,2,3,5],11) == 4\n>>> Example: find_missing([1,2,3,5],12) == 4\n>>> Example: find_missing([1,2,3,5],13) == 4\n>>> Example: find_missing([1,2,3,5],14) == 4\n>>> Example: find_missing([1,2,3,5],15) == 4\n>>> Example: find_missing([1,2,3,5],16) == 4\n>>> Example: find_missing([1,2,3,5],17) == 4\n>>> Example: find_missing([1,2,3,5],18) == 4\n>>> Example: find_missing([1,2,3,5],19) == 4\n>>> Example: find_missing([1,2,3,5],20) == 4\n""""""\n\ndef find_missing', ""Write a python function to find the missing number in a sorted array.\n>>> Example: find_missing([1,2,3,5],4) == 4\n>>> Example: find_missing([1,2,3,5],6) == 4\n>>> Example: find_missing([1,2,3,5],7) == 4\n>>> Example: find_missing([1,2,3,5],8) == 4\n>>> Example: find_missing([1,2,3,5],9) == 4\n>>> Example: find_missing([1,2,3,5],10) == 4\n>>> Example: find_missing([1,2,3,5],11) == 4\n>>> Example: find_missing([1,2,3,5],12) == 4\n>>> Example: find_missing([1,2,3,5],13) == 4\n>>> Example: find_missing([1,2,3,5],14) == 4\n>>> Example: find_missing([1,2,3,5],15) == 4\n>>> Example: find_missing([1,2,3,5],16) == 4\n>>> Example: find_missing([1,2,3,5],17) == 4\n>>> Example: find_missing([1,2,3,5],18) == 4\n>>> Example: find_missing([1,2,3,5],19) == 4\n>>> Example: find_missing([1,2,3,5],20) == 4\n\n'''\n\ndef find""]"
35,Write a function to find the n-th rectangular number.,"['assert find_rect_num(4) == 20', 'assert find_rect_num(5) == 30', 'assert find_rect_num(6) == 42']","Write a function to find the n-th rectangular number.
>>> Example: find_rect_num(4) == 20","def find_rect_num(n):
  return n*(n + 1) ","['Write a function to find the n-th rectangular number.\n>>> Example: find_rect_num(4) == 20\n""""""\n\n\ndef find_rect_num(n):\n    if n == 1:\n', 'Write a function to find the n-th rectangular number.\n>>> Example: find_rect_num(4) == 20\n""""""\n\n\ndef find_rect_num(n):\n    """"""\n    >>> find_', 'Write a function to find the n-th rectangular number.\n>>> Example: find_rect_num(4) == 20\n""""""\n\n\ndef find_rect_num(n):\n    if n == 0:\n', 'Write a function to find the n-th rectangular number.\n>>> Example: find_rect_num(4) == 20\n""""""\n\n\ndef find_rect_num(n):\n    return int(n * (', 'Write a function to find the n-th rectangular number.\n>>> Example: find_rect_num(4) == 20\n""""""\n\n\ndef find_rect_num(n):\n    """"""\n    Find the n']"
36,Write a python function to find the nth digit in the proper fraction of two given numbers.,"['assert find_Nth_Digit(1,2,1) == 5', 'assert find_Nth_Digit(3,5,1) == 6', 'assert find_Nth_Digit(5,6,5) == 3']","Write a python function to find the nth digit in the proper fraction of two given numbers.
>>> Example: find_Nth_Digit(1,2,1) == 5","def find_Nth_Digit(p,q,N) :  
    while (N > 0) : 
        N -= 1;  
        p *= 10;  
        res = p // q;  
        p %= q;  
    return res;  ","['Write a python function to find the nth digit in the proper fraction of two given numbers.\n>>> Example: find_Nth_Digit(1,2,1) == 5\n>>> Example: find_Nth_Digit(1,2,2) == 0\n>>> Example: find_Nth_Digit(1,2,3) == 0\n>>> Example: find_Nth_Digit(1,2,4) == 0\n>>> Example: find_Nth_Digit(1,2,5) == 0\n>>> Example: find_Nth_Digit(1,2,6) == 0\n>>> Example: find_Nth_Digit(1,2,7) ==', 'Write a python function to find the nth digit in the proper fraction of two given numbers.\n>>> Example: find_Nth_Digit(1,2,1) == 5\n>>> Example: find_Nth_Digit(1,2,2) == 1\n>>> Example: find_Nth_Digit(1,2,3) == 1\n>>> Example: find_Nth_Digit(1,2,4) == 1\n>>> Example: find_Nth_Digit(1,2,5) == 1\n>>> Example: find_Nth_Digit(1,2,6) == 1\n>>> Example: find_Nth_Digit(1,2,7) ==', 'Write a python function to find the nth digit in the proper fraction of two given numbers.\n>>> Example: find_Nth_Digit(1,2,1) == 5\n>>> Example: find_Nth_Digit(1,2,2) == 1\n>>> Example: find_Nth_Digit(1,2,3) == 1\n>>> Example: find_Nth_Digit(1,2,4) == 0\n>>> Example: find_Nth_Digit(1,2,5) == 0\n>>> Example: find_Nth_Digit(1,2,6) == 0\n>>> Example: find_Nth_Digit(1,2,7) ==', 'Write a python function to find the nth digit in the proper fraction of two given numbers.\n>>> Example: find_Nth_Digit(1,2,1) == 5\n>>> Example: find_Nth_Digit(1,2,2) == 0\n>>> Example: find_Nth_Digit(1,2,3) == 0\n>>> Example: find_Nth_Digit(1,2,4) == 0\n>>> Example: find_Nth_Digit(1,2,5) == 1\n>>> Example: find_Nth_Digit(1,2,6) == 0\n>>> Example: find_Nth_Digit(1,2,7) ==', 'Write a python function to find the nth digit in the proper fraction of two given numbers.\n>>> Example: find_Nth_Digit(1,2,1) == 5\n>>> Example: find_Nth_Digit(1,2,2) == 0\n>>> Example: find_Nth_Digit(1,2,3) == 0\n>>> Example: find_Nth_Digit(1,2,4) == 0\n>>> Example: find_Nth_Digit(1,2,5) == 0\n>>> Example: find_Nth_Digit(1,2,6) == 1\n>>> Example: find_Nth_Digit(1,2,7) ==']"
37,Write a function to sort a given mixed list of integers and strings.,"[""assert sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green', 'red', 'white']"", ""assert sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green', 'red', 'white']"", ""assert sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green', 'red', 'white']""]","Write a function to sort a given mixed list of integers and strings.
>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green', 'red', 'white']","def sort_mixed_list(mixed_list):
    int_part = sorted([i for i in mixed_list if type(i) is int])
    str_part = sorted([i for i in mixed_list if type(i) is str])
    return int_part + str_part","[""Write a function to sort a given mixed list of integers and strings.\n>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green','red', 'white']\nTrue\n>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green','red', 'white']\nTrue\n>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green','red', 'white']\nTrue\n>>> Example: sort_mixed_list([19,'red',12,'green','"", ""Write a function to sort a given mixed list of integers and strings.\n>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green','red', 'white']\nTrue\n>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green','red', 'white']\nTrue\n>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green','red', 'white']\nTrue\n>>> Example: sort_mixed_list([])==[]\nTrue\n>>> Example"", ""Write a function to sort a given mixed list of integers and strings.\n>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green','red', 'white']\nTrue\n>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green','red', 'white']\nTrue\n>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green','red', 'white']\nTrue\n>>> Example: sort_mixed_list([1,2,3,4,"", 'Write a function to sort a given mixed list of integers and strings.\n>>> Example: sort_mixed_list([19,\'red\',12,\'green\',\'blue\', 10,\'white\',\'green\',1])==[1, 10, 12, 19, \'blue\', \'green\', \'green\',\'red\', \'white\']\nTrue\n>>> Example: sort_mixed_list([19,\'red\',12,\'green\',\'blue\', 10,\'white\',\'green\',1])==[1, 10, 12, 19, \'blue\', \'green\', \'green\',\'red\', \'white\']\nTrue\n>>> Example: sort_mixed_list([19,\'red\',12,\'green\',\'blue\', 10,\'white\',\'green\',1])==[1, 10, 12, 19, \'blue\', \'green\', \'green\',\'red\', \'white\']\nTrue\n>>> Example: sort_mixed_list([])==[]\nTrue\n""""""\n', ""Write a function to sort a given mixed list of integers and strings.\n>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green','red', 'white']\nTrue\n>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green','red', 'white']\nTrue\n>>> Example: sort_mixed_list([19,'red',12,'green','blue', 10,'white','green',1])==[1, 10, 12, 19, 'blue', 'green', 'green','red', 'white']\nTrue\n>>> Example: sort_mixed_list([19,'red',12,'green',""]"
38,Write a function to find the division of first even and odd number of a given list.,"['assert div_even_odd([1,3,5,7,4,1,6,8])==4', 'assert div_even_odd([1,2,3,4,5,6,7,8,9,10])==2', 'assert div_even_odd([1,5,7,9,10])==10']","Write a function to find the division of first even and odd number of a given list.
>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==4","def div_even_odd(list1):
    first_even = next((el for el in list1 if el%2==0),-1)
    first_odd = next((el for el in list1 if el%2!=0),-1)
    return (first_even/first_odd)","['Write a function to find the division of first even and odd number of a given list.\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==4\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==3\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==2\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==1\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==0\n>>> Example: div_even_odd([1,3,5,7,4,1,6', 'Write a function to find the division of first even and odd number of a given list.\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==4\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==3\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==2\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==1\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==0\n>>> Example: div_even_odd([1,2,3,4,5,6,7', 'Write a function to find the division of first even and odd number of a given list.\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==4\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==3\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==2\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==1\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==0\n>>> Example: div_even_odd([1,3,5,7,4,1])==', 'Write a function to find the division of first even and odd number of a given list.\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==4\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==3\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==2\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==1\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==0\n""""""\n\n\ndef div_even_odd(lst):\n    even = 0\n    odd =', 'Write a function to find the division of first even and odd number of a given list.\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==4\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==3\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==2\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==1\n>>> Example: div_even_odd([1,3,5,7,4,1,6,8])==0\n>>> Example: div_even_odd([1,2,3,4,5,6])==']"
40,Write a function to find frequency of the elements in a given list of lists using collections module.,"['assert freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])==({2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1, 9: 1})', 'assert freq_element([[1,2,3,4],[5,6,7,8],[9,10,11,12]])==({1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1})', 'assert freq_element([[15,20,30,40],[80,90,100,110],[30,30,80,90]])==({30: 3, 80: 2, 90: 2, 15: 1, 20: 1, 40: 1, 100: 1, 110: 1})']","Write a function to find frequency of the elements in a given list of lists using collections module.
>>> Example: freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])==({2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1, 9: 1})","from collections import Counter
from itertools import chain
def freq_element(nums):
  result = Counter(chain.from_iterable(nums))
  return result","['Write a function to find frequency of the elements in a given list of lists using collections module.\n>>> Example: freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])==({2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1, 9: 1})\n>>> freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])\n{2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1', 'Write a function to find frequency of the elements in a given list of lists using collections module.\n>>> Example: freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])==({2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1, 9: 1})\n>>> freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])==({2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1', 'Write a function to find frequency of the elements in a given list of lists using collections module.\n>>> Example: freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])==({2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1, 9: 1})\n>>> freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]]) == {2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1', 'Write a function to find frequency of the elements in a given list of lists using collections module.\n>>> Example: freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])==({2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1, 9: 1})\n>>> freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])=={2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1', 'Write a function to find frequency of the elements in a given list of lists using collections module.\n>>> Example: freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])==({2: 3, 1: 2, 5: 2, 3: 1, 4: 1, 6: 1, 7: 1, 9: 1})\n>>> freq_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]])\n{1: 2, 2: 3, 3: 2, 4: 1, 5: 2, 6: 1, 7: 1']"
41,Write a function to filter even numbers using lambda function.,"['assert filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[2, 4, 6, 8, 10]', 'assert filter_evennumbers([10,20,45,67,84,93])==[10,20,84]', 'assert filter_evennumbers([5,7,9,8,6,4,3])==[8,6,4]']","Write a function to filter even numbers using lambda function.
>>> Example: filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[2, 4, 6, 8, 10]","def filter_evennumbers(nums):
 even_nums = list(filter(lambda x: x%2 == 0, nums))
 return even_nums","['Write a function to filter even numbers using lambda function.\n>>> Example: filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[2, 4, 6, 8, 10]\n>>> Example: filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9])==[2, 4, 6, 8, 10]\n>>> Example: filter_evennumbers([1, 2', 'Write a function to filter even numbers using lambda function.\n>>> Example: filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[2, 4, 6, 8, 10]\n>>> filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[2, 4, 6, 8, 10]\n>>> filter_evennumbers([1, 2, 3', 'Write a function to filter even numbers using lambda function.\n>>> Example: filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[2, 4, 6, 8, 10]\n>>> filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n[2, 4, 6, 8, 10]\n>>> filter_evennumbers([1, 2, 3', 'Write a function to filter even numbers using lambda function.\n>>> Example: filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[2, 4, 6, 8, 10]\n>>> Example: filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9])==[2, 4, 6, 8, 10]\n>>> Example: filter_evennumbers([1, 3', 'Write a function to filter even numbers using lambda function.\n>>> Example: filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[2, 4, 6, 8, 10]\n>>> filter_evennumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[2, 4, 6, 8, 10]\n>>> filter_evennumbers([1, 3, 5']"
42,Write a python function to find the sum of repeated elements in a given array.,"['assert find_Sum([1,2,3,1,1,4,5,6],8) == 3', 'assert find_Sum([1,2,3,1,1],5) == 3', 'assert find_Sum([1,1,2],3) == 2']","Write a python function to find the sum of repeated elements in a given array.
>>> Example: find_Sum([1,2,3,1,1,4,5,6],8) == 3","def find_Sum(arr,n): 
    return sum([x for x in arr if arr.count(x) > 1])","['Write a python function to find the sum of repeated elements in a given array.\n>>> Example: find_Sum([1,2,3,1,1,4,5,6],8) == 3\n>>> find_Sum([1,2,3,1,1,4,5,6],8) == 3\n>>> find_Sum([1,2,', 'Write a python function to find the sum of repeated elements in a given array.\n>>> Example: find_Sum([1,2,3,1,1,4,5,6],8) == 3\n>>> find_Sum([1,2,3,1,1,4,5,6],8) == 6\n>>> find_Sum([1,2,', 'Write a python function to find the sum of repeated elements in a given array.\n>>> Example: find_Sum([1,2,3,1,1,4,5,6],8) == 3\n>>> Example: find_Sum([1,2,3,1,1,4,5,6],7) == 0\n>>> Example: find_Sum([', 'Write a python function to find the sum of repeated elements in a given array.\n>>> Example: find_Sum([1,2,3,1,1,4,5,6],8) == 3\n>>> find_Sum([1,2,3,1,1,4,5,6],8) == 5\n>>> find_Sum([1,2,', 'Write a python function to find the sum of repeated elements in a given array.\n>>> Example: find_Sum([1,2,3,1,1,4,5,6],8) == 3\n>>> find_Sum([1,2,3,1,1,4,5,6],8) == 0\n>>> find_Sum([1,2,']"
43,Write a function to find sequences of lowercase letters joined with an underscore using regex.,"['assert text_match(""aab_cbbbc"") == \'Found a match!\'', 'assert text_match(""aab_Abbbc"") == \'Not matched!\'', 'assert text_match(""Aaab_abbbc"") == \'Not matched!\'']","Write a function to find sequences of lowercase letters joined with an underscore using regex.
>>> Example: text_match(""aab_cbbbc"") == 'Found a match!'","import re
def text_match(text):
  patterns = '^[a-z]+_[a-z]+$'
  if re.search(patterns,  text):
    return ('Found a match!')
  else:
    return ('Not matched!')","['Write a function to find sequences of lowercase letters joined with an underscore using regex.\n>>> Example: text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n', 'Write a function to find sequences of lowercase letters joined with an underscore using regex.\n>>> Example: text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n', 'Write a function to find sequences of lowercase letters joined with an underscore using regex.\n>>> Example: text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n>>> Example: text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n>>> Example: text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n>>> Example: text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n', 'Write a function to find sequences of lowercase letters joined with an underscore using regex.\n>>> Example: text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n>>> Example: text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n>>> Example: text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n>>> Example: text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") ==', 'Write a function to find sequences of lowercase letters joined with an underscore using regex.\n>>> Example: text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"") == \'Found a match!\'\n>>> text_match(""aab_cbbbc"")\n\'Found a match!\'\n']"
44,Write a function that matches a word at the beginning of a string.,"['assert text_match_string("" python"")==(\'Not matched!\')', 'assert text_match_string(""python"")==(\'Found a match!\')', 'assert text_match_string(""  lang"")==(\'Not matched!\')']","Write a function that matches a word at the beginning of a string.
>>> Example: text_match_string("" python"")==('Not matched!')","import re
def text_match_string(text):
        patterns = '^\w+'
        if re.search(patterns,  text):
                return 'Found a match!'
        else:
                return 'Not matched!'","['Write a function that matches a word at the beginning of a string.\n>>> Example: text_match_string("" python"")==(\'Not matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")', 'Write a function that matches a word at the beginning of a string.\n>>> Example: text_match_string("" python"")==(\'Not matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")', 'Write a function that matches a word at the beginning of a string.\n>>> Example: text_match_string("" python"")==(\'Not matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")', 'Write a function that matches a word at the beginning of a string.\n>>> Example: text_match_string("" python"")==(\'Not matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string', 'Write a function that matches a word at the beginning of a string.\n>>> Example: text_match_string("" python"")==(\'Not matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""Python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""PYTHON"")==(\'matched!\')\n>>> Example: text_match_string(""python"")==(\'matched!\')\n>>> Example: text_match_string(""PY']"
45,Write a function to find the gcd of the given array elements.,"['assert get_gcd([2, 4, 6, 8, 16]) == 2', 'assert get_gcd([1, 2, 3]) == 1', 'assert get_gcd([2, 4, 6, 8]) == 2 ']","Write a function to find the gcd of the given array elements.
>>> Example: get_gcd([2, 4, 6, 8, 16]) == 2","def find_gcd(x, y): 
	while(y): 
		x, y = y, x % y 
	return x 
def get_gcd(l):
  num1 = l[0]
  num2 = l[1]
  gcd = find_gcd(num1, num2)
  for i in range(2, len(l)):
    gcd = find_gcd(gcd, l[i])
  return gcd","['Write a function to find the gcd of the given array elements.\n>>> Example: get_gcd([2, 4, 6, 8, 16]) == 2\n""""""\n\n\ndef get_gcd(arr):\n    if len(arr) == 1:\n        return arr[0]\n    else:\n        return get_gcd(arr[1:]) if arr[0] > arr[1] else get_gcd(arr[1:])\n\n\nprint(get_gcd([2, 4, 6, 8, 16]))\n', 'Write a function to find the gcd of the given array elements.\n>>> Example: get_gcd([2, 4, 6, 8, 16]) == 2\n""""""\n\n\ndef get_gcd(arr):\n    if len(arr) == 1:\n        return arr[0]\n    else:\n        return get_gcd(arr[1:])\n\n\nprint(get_gcd([2, 4, 6, 8, 16]))\n', 'Write a function to find the gcd of the given array elements.\n>>> Example: get_gcd([2, 4, 6, 8, 16]) == 2\n""""""\n\n\ndef get_gcd(arr):\n    if len(arr) == 1:\n        return arr[0]\n    return get_gcd(arr[1:]) if arr[0] > arr[1] else get_gcd(arr[1:])\n\n\nprint(get_gcd([2, 4, 6, 8, 16]))\n', 'Write a function to find the gcd of the given array elements.\n>>> Example: get_gcd([2, 4, 6, 8, 16]) == 2\n""""""\n\n\ndef get_gcd(arr):\n    if len(arr) == 1:\n        return arr[0]\n    return get_gcd(arr[1:]) if arr[0] > arr[1] else get_gcd(arr[:-1])\n\n\nprint(get_gcd([2, 4, 6, 8, 16]))\n', 'Write a function to find the gcd of the given array elements.\n>>> Example: get_gcd([2, 4, 6, 8, 16]) == 2\n""""""\n\n\ndef get_gcd(arr):\n    if len(arr) == 1:\n        return arr[0]\n    else:\n        return get_gcd(arr[1:]) if arr[0] > arr[1] else get_gcd(arr[1:])\n\n\nprint(get_gcd([2, 4, 6, 8, 16]))']"
46,Write a python function to determine whether all the numbers are different from each other are not.,"['assert test_distinct([1,5,7,9]) == True', 'assert test_distinct([2,4,5,5,7,9]) == False', 'assert test_distinct([1,2,3]) == True']","Write a python function to determine whether all the numbers are different from each other are not.
>>> Example: test_distinct([1,5,7,9]) == True","def test_distinct(data):
  if len(data) == len(set(data)):
    return True
  else:
    return False;","['Write a python function to determine whether all the numbers are different from each other are not.\n>>> Example: test_distinct([1,5,7,9]) == True\n>>> Example: test_distinct([1,5,7,9]) == False\n>>> Example: test_distinct([1,5,7,9]) == False\n>>> Example: test_distinct([1,5,7,9]) == False\n>>> Example: test_distinct([1,5,7,', 'Write a python function to determine whether all the numbers are different from each other are not.\n>>> Example: test_distinct([1,5,7,9]) == True\n>>> Example: test_distinct([1,5,7,9]) == False\n>>> Example: test_distinct([1,5,7,9]) == True\n>>> Example: test_distinct([1,5,7,9]) == False\n>>> Example: test_distinct([1,5,7,', 'Write a python function to determine whether all the numbers are different from each other are not.\n>>> Example: test_distinct([1,5,7,9]) == True\n>>> Example: test_distinct([1,5,7,9]) == False\n>>> Example: test_distinct([1,5,7,9]) == True\n>>> Example: test_distinct([1,5,7,9]) == True\n>>> Example: test_distinct([1,5,7,', 'Write a python function to determine whether all the numbers are different from each other are not.\n>>> Example: test_distinct([1,5,7,9]) == True\n>>> Example: test_distinct([1,5,7,9]) == False\n>>> Example: test_distinct([1,5,7,9]) == False\n>>> Example: test_distinct([1,5,7,9]) == True\n>>> Example: test_distinct([1,5,7,', 'Write a python function to determine whether all the numbers are different from each other are not.\n>>> Example: test_distinct([1,5,7,9]) == True\nTrue\n>>> Example: test_distinct([1,5,7,9]) == False\nFalse\n>>> Example: test_distinct([1,5,7,9]) == True\nTrue\n>>> Example: test_distinct([1,5,7,9]) == False\nFalse\n>>> Example: test_dist']"
47,Write a python function to find the last digit when factorial of a divides factorial of b.,"['assert compute_Last_Digit(2,4) == 2', 'assert compute_Last_Digit(6,8) == 6', 'assert compute_Last_Digit(1,2) == 2']","Write a python function to find the last digit when factorial of a divides factorial of b.
>>> Example: compute_Last_Digit(2,4) == 2","def compute_Last_Digit(A,B): 
    variable = 1
    if (A == B): 
        return 1
    elif ((B - A) >= 5):  
        return 0
    else:   
        for i in range(A + 1,B + 1): 
            variable = (variable * (i % 10)) % 10
        return variable % 10","['Write a python function to find the last digit when factorial of a divides factorial of b.\n>>> Example: compute_Last_Digit(2,4) == 2\n>>> Example: compute_Last_Digit(3,4) == 3\n>>> Example: compute_Last_Digit(4,4) == 4\n>>> Example: compute_Last_Digit(5,4) == 5\n>>> Example: compute_Last_Digit(6,4) == 6\n>>> Example: compute_Last_Digit(7,4) == 7\n>>> Example: compute_Last_Digit(8,4) == 8\n>>> Example: compute_Last_Digit(9,4) == 9\n>>> Example: compute_Last_Digit(10,4) == 0\n>>> Example: compute_Last_Digit(11,4) == 0\n>>> Example: compute_Last_Digit(12,4) == 0\n>>> Example: compute_Last_Digit(13,4) == 0\n>>> Example: compute_Last_Digit(14,4) == 0\n>>> Example: compute_Last_Digit(15,4) == 0\n>>> Example: compute_Last_Digit(', 'Write a python function to find the last digit when factorial of a divides factorial of b.\n>>> Example: compute_Last_Digit(2,4) == 2\n>>> Example: compute_Last_Digit(3,4) == 3\n>>> Example: compute_Last_Digit(4,4) == 4\n>>> Example: compute_Last_Digit(5,4) == 4\n>>> Example: compute_Last_Digit(6,4) == 4\n>>> Example: compute_Last_Digit(7,4) == 4\n>>> Example: compute_Last_Digit(8,4) == 4\n>>> Example: compute_Last_Digit(9,4) == 4\n>>> Example: compute_Last_Digit(10,4) == 4\n>>> Example: compute_Last_Digit(11,4) == 4\n>>> Example: compute_Last_Digit(12,4) == 4\n>>> Example: compute_Last_Digit(13,4) == 4\n>>> Example: compute_Last_Digit(14,4) == 4\n>>> Example: compute_Last_Digit(15,4) == 4\n>>> Example: compute_Last_Digit(', 'Write a python function to find the last digit when factorial of a divides factorial of b.\n>>> Example: compute_Last_Digit(2,4) == 2\n>>> Example: compute_Last_Digit(3,4) == 3\n>>> Example: compute_Last_Digit(4,4) == 4\n>>> Example: compute_Last_Digit(5,4) == 5\n>>> Example: compute_Last_Digit(6,4) == 6\n>>> Example: compute_Last_Digit(7,4) == 7\n>>> Example: compute_Last_Digit(8,4) == 8\n>>> Example: compute_Last_Digit(9,4) == 9\n>>> Example: compute_Last_Digit(10,4) == 0\n>>> Example: compute_Last_Digit(11,4) == 1\n>>> Example: compute_Last_Digit(12,4) == 2\n>>> Example: compute_Last_Digit(13,4) == 3\n>>> Example: compute_Last_Digit(14,4) == 4\n>>> Example: compute_Last_Digit(15,4) == 5\n>>> Example: compute_Last_Digit(', 'Write a python function to find the last digit when factorial of a divides factorial of b.\n>>> Example: compute_Last_Digit(2,4) == 2\n>>> Example: compute_Last_Digit(3,4) == 3\n>>> Example: compute_Last_Digit(4,4) == 4\n>>> Example: compute_Last_Digit(5,4) == 5\n>>> Example: compute_Last_Digit(6,4) == 6\n>>> Example: compute_Last_Digit(7,4) == 7\n>>> Example: compute_Last_Digit(8,4) == 8\n>>> Example: compute_Last_Digit(9,4) == 9\n>>> Example: compute_Last_Digit(10,4) == 0\n>>> Example: compute_Last_Digit(11,4) == 1\n>>> Example: compute_Last_Digit(12,4) == 0\n>>> Example: compute_Last_Digit(13,4) == 1\n>>> Example: compute_Last_Digit(14,4) == 0\n>>> Example: compute_Last_Digit(15,4) == 1\n>>> Example: compute_Last_Digit(', 'Write a python function to find the last digit when factorial of a divides factorial of b.\n>>> Example: compute_Last_Digit(2,4) == 2\n>>> Example: compute_Last_Digit(3,4) == 3\n>>> Example: compute_Last_Digit(4,4) == 4\n>>> Example: compute_Last_Digit(5,4) == 5\n>>> Example: compute_Last_Digit(6,4) == 6\n>>> Example: compute_Last_Digit(7,4) == 7\n>>> Example: compute_Last_Digit(8,4) == 8\n>>> Example: compute_Last_Digit(9,4) == 9\n>>> Example: compute_Last_Digit(10,4) == 1\n>>> Example: compute_Last_Digit(11,4) == 1\n>>> Example: compute_Last_Digit(12,4) == 1\n>>> Example: compute_Last_Digit(13,4) == 1\n>>> Example: compute_Last_Digit(14,4) == 1\n>>> Example: compute_Last_Digit(15,4) == 1\n>>> Example: compute_Last_Digit(']"
48,Write a python function to set all odd bits of a given number.,"['assert odd_bit_set_number(10) == 15', 'assert odd_bit_set_number(20) == 21', 'assert odd_bit_set_number(30) == 31']","Write a python function to set all odd bits of a given number.
>>> Example: odd_bit_set_number(10) == 15","def odd_bit_set_number(n):
    count = 0;res = 0;temp = n
    while temp > 0:
        if count % 2 == 0:
            res |= (1 << count)
        count += 1
        temp >>= 1
    return (n | res)","['Write a python function to set all odd bits of a given number.\n>>> Example: odd_bit_set_number(10) == 15\n>>> Example: odd_bit_set_number(11) == 11\n>>> Example: odd_bit_set_number(12) == 11\n>>> Example: odd_bit_set_number(13) == 11\n>>> Example: odd_bit_set_number(14) == 11\n>>> Example: odd_bit_set_number(15) == 11\n>>> Example: odd_bit_set_number(16) == 11\n>>> Example: odd_bit_set_number(17) == 11\n>>> Example: odd_bit_set_number(18) == 11\n>>> Example: odd_bit_set_number(19) == 11\n>>> Example: odd_bit_set_number(20) == 11\n>>> Example: odd_bit_set_number(21) == 11\n', 'Write a python function to set all odd bits of a given number.\n>>> Example: odd_bit_set_number(10) == 15\n>>> Example: odd_bit_set_number(11) == 11\n>>> Example: odd_bit_set_number(12) == 11\n>>> Example: odd_bit_set_number(13) == 11\n>>> Example: odd_bit_set_number(14) == 11\n>>> Example: odd_bit_set_number(15) == 15\n>>> Example: odd_bit_set_number(16) == 15\n>>> Example: odd_bit_set_number(17) == 15\n>>> Example: odd_bit_set_number(18) == 15\n>>> Example: odd_bit_set_number(19) == 15\n>>> Example: odd_bit_set_number(20) == 15\n>>> Example: odd_bit_set_number(21) == 15\n', 'Write a python function to set all odd bits of a given number.\n>>> Example: odd_bit_set_number(10) == 15\n>>> Example: odd_bit_set_number(11) == 11\n>>> Example: odd_bit_set_number(12) == 11\n>>> Example: odd_bit_set_number(13) == 11\n>>> Example: odd_bit_set_number(14) == 11\n>>> Example: odd_bit_set_number(15) == 15\n>>> Example: odd_bit_set_number(16) == 15\n>>> Example: odd_bit_set_number(17) == 17\n>>> Example: odd_bit_set_number(18) == 17\n>>> Example: odd_bit_set_number(19) == 17\n>>> Example: odd_bit_set_number(20) == 17\n>>> Example: odd_bit_set_number(21) == 17\n', 'Write a python function to set all odd bits of a given number.\n>>> Example: odd_bit_set_number(10) == 15\n>>> Example: odd_bit_set_number(11) == 11\n>>> Example: odd_bit_set_number(12) == 11\n>>> Example: odd_bit_set_number(13) == 11\n>>> Example: odd_bit_set_number(14) == 11\n>>> Example: odd_bit_set_number(15) == 15\n>>> Example: odd_bit_set_number(16) == 15\n>>> Example: odd_bit_set_number(17) == 17\n>>> Example: odd_bit_set_number(18) == 17\n>>> Example: odd_bit_set_number(19) == 17\n>>> Example: odd_bit_set_number(20) == 17\n>>> Example: odd_bit_set_number(21) == 21\n', 'Write a python function to set all odd bits of a given number.\n>>> Example: odd_bit_set_number(10) == 15\n>>> Example: odd_bit_set_number(11) == 11\n>>> Example: odd_bit_set_number(12) == 11\n>>> Example: odd_bit_set_number(13) == 11\n>>> Example: odd_bit_set_number(14) == 11\n>>> Example: odd_bit_set_number(15) == 11\n>>> Example: odd_bit_set_number(16) == 11\n>>> Example: odd_bit_set_number(17) == 11\n>>> Example: odd_bit_set_number(18) == 11\n>>> Example: odd_bit_set_number(19) == 11\n>>> Example: odd_bit_set_number(20) == 11\n>>> Example: odd_bit_set_number(22) == 11\n']"
49,Write a function to extract every first or specified element from a given two-dimensional list.,"['assert specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]],0)==[1, 4, 7]', 'assert specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]],2)==[3, 6, 9]', 'assert specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]],1)==[2,5,1]']","Write a function to extract every first or specified element from a given two-dimensional list.
>>> Example: specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]],0)==[1, 4, 7]","def specified_element(nums, N):
    result = [i[N] for i in nums]
    return result
    ","['Write a function to extract every first or specified element from a given two-dimensional list.\n>>> Example: specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]],0)==[1, 4, 7]\n>>> Example: specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9', 'Write a function to extract every first or specified element from a given two-dimensional list.\n>>> Example: specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]],0)==[1, 4, 7]\nTrue\n>>> Example: specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1', 'Write a function to extract every first or specified element from a given two-dimensional list.\n>>> Example: specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]],0)==[1, 4, 7]\n>>> specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5', 'Write a function to extract every first or specified element from a given two-dimensional list.\n>>> Example: specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]],0)==[1, 4, 7]\n[1, 4, 7]\n>>> Example: specified_element([[1, 2, 3, 2], [4, 5, 6,', 'Write a function to extract every first or specified element from a given two-dimensional list.\n>>> Example: specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9, 5]],0)==[1, 4, 7]\nTrue\n>>> specified_element([[1, 2, 3, 2], [4, 5, 6, 2], [7, 1, 9']"
50,Write a function to find the list with minimum length using lambda function.,"['assert min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(1, [0])', 'assert min_length_list([[1,2,3,4,5],[1,2,3,4],[1,2,3],[1,2],[1]])==(1,[1])', 'assert min_length_list([[3,4,5],[6,7,8,9],[10,11,12],[1,2]])==(2,[1,2])']","Write a function to find the list with minimum length using lambda function.
>>> Example: min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(1, [0])","def min_length_list(input_list):
    min_length = min(len(x) for x in input_list )  
    min_list = min(input_list, key = lambda i: len(i))
    return(min_length, min_list)","['Write a function to find the list with minimum length using lambda function.\n>>> Example: min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(1, [0])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(1, [0])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(1, [0])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(1, [0])', 'Write a function to find the list with minimum length using lambda function.\n>>> Example: min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(1, [0])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [5, 7])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [5, 7])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3', 'Write a function to find the list with minimum length using lambda function.\n>>> Example: min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(1, [0])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [5, 7, 9, 11])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [5, 7, 9, 11])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13,', 'Write a function to find the list with minimum length using lambda function.\n>>> Example: min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(1, [0])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [5, 7])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [9, 11])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3', 'Write a function to find the list with minimum length using lambda function.\n>>> Example: min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(1, [0])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [5, 7, 9])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [5, 7, 9])\n>>> min_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]']"
51,Write a function to print check if the triangle is equilateral or not.,"['assert check_equilateral(6,8,12)==False ', 'assert check_equilateral(6,6,12)==False', 'assert check_equilateral(6,6,6)==True']","Write a function to print check if the triangle is equilateral or not.
>>> Example: check_equilateral(6,8,12)==False ","def check_equilateral(x,y,z):
  if x == y == z:
	   return True
  else:
     return False","['Write a function to print check if the triangle is equilateral or not.\n>>> Example: check_equilateral(6,8,12)==False \n>>> check_equilateral(6,8,12)==True \n>>> check_equilateral(6,8,12)==True \n>>> check_equilateral(6,8,12)==True \n>>> check_equilateral(6,8,12)==True \n', 'Write a function to print check if the triangle is equilateral or not.\n>>> Example: check_equilateral(6,8,12)==False \n>>> check_equilateral(6,8,12)==True\n""""""\n\ndef check_equilateral(a,b,c):\n    if a==b==c:\n        return True\n    else:\n        return False\n\nprint(check_equilateral(6,8,', 'Write a function to print check if the triangle is equilateral or not.\n>>> Example: check_equilateral(6,8,12)==False \n>>> check_equilateral(6,8,12)==True\n""""""\n\ndef check_equilateral(a,b,c):\n    if a==b and b==c and a==c:\n        return True\n    else:\n        return False\n\nprint(check_equ', 'Write a function to print check if the triangle is equilateral or not.\n>>> Example: check_equilateral(6,8,12)==False \n>>> check_equilateral(6,8,12)==True \n>>> check_equilateral(6,8,12)==True \n>>> check_equilateral(6,8,12)==True \n>>> check_equilateral(6,8,12)==False \n', 'Write a function to print check if the triangle is equilateral or not.\n>>> Example: check_equilateral(6,8,12)==False \n>>> check_equilateral(6,8,12)==True \n>>> check_equilateral(6,8,12)==True \n>>> check_equilateral(6,8,12)==False \n>>> check_equilateral(6,8,12)==False \n']"
52,Write a function to caluclate area of a parallelogram.,"['assert parallelogram_area(10,20)==200', 'assert parallelogram_area(15,20)==300', 'assert parallelogram_area(8,9)==72']","Write a function to caluclate area of a parallelogram.
>>> Example: parallelogram_area(10,20)==200","def parallelogram_area(b,h):
  area=b*h
  return area","['Write a function to caluclate area of a parallelogram.\n>>> Example: parallelogram_area(10,20)==200\n""""""\n\ndef parallelogram_area(a,b):\n    return a*b\n\nprint(parallelogram_area', ""Write a function to caluclate area of a parallelogram.\n>>> Example: parallelogram_area(10,20)==200\n'''\n\ndef parallelogram_area(a,b):\n    return a*b\n\nprint(parallelogram_"", 'Write a function to caluclate area of a parallelogram.\n>>> Example: parallelogram_area(10,20)==200\n>>> parallelogram_area(10,20)==200\n>>> parallelogram_area(10,20)==200\n>>>', 'Write a function to caluclate area of a parallelogram.\n>>> Example: parallelogram_area(10,20)==200\n\n""""""\n\ndef parallelogram_area(a,b):\n    return a*b\n\nprint(parallelogram_', 'Write a function to caluclate area of a parallelogram.\n>>> Example: parallelogram_area(10,20)==200\n>>> parallelogram_area(10,20)==200\n>>> parallelogram_area(20,10)==200\n>>>']"
53,Write a python function to check whether the first and last characters of a given string are equal or not.,"['assert check_Equality(""abcda"") == ""Equal""', 'assert check_Equality(""ab"") == ""Not Equal""', 'assert check_Equality(""mad"") == ""Not Equal""']","Write a python function to check whether the first and last characters of a given string are equal or not.
>>> Example: check_Equality(""abcda"") == ""Equal""","def check_Equality(str):
  if (str[0] == str[-1]):  
    return (""Equal"") 
  else:  
    return (""Not Equal"") ","['Write a python function to check whether the first and last characters of a given string are equal or not.\n>>> Example: check_Equality(""abcda"") == ""Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n>>> Example: check_Equality(""abcda"") ==', 'Write a python function to check whether the first and last characters of a given string are equal or not.\n>>> Example: check_Equality(""abcda"") == ""Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n>>> Example: check_Equality(""abcda"") == ""Equal""\n>>> Example: check_Equality(""abcda"") == ""Equal""\n>>> Example: check_Equality(""abcda"") == ""Equal""\n>>> Example: check_Equality(""abcda"") ==', 'Write a python function to check whether the first and last characters of a given string are equal or not.\n>>> Example: check_Equality(""abcda"") == ""Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n>>> Example: check_Equality(""abcda"") == ""Equal""\n>>> Example: check_Equality(""abcda"") == ""Equal""\n>>> Example: check_Equality(""abcda"") ==', 'Write a python function to check whether the first and last characters of a given string are equal or not.\n>>> Example: check_Equality(""abcda"") == ""Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n>>> Example: check_Equality(""abcda"") == ""Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n>>> Example: check_Equality(""abcda"") == ""Equal""\n>>> Example: check_Equality(""abcda"") ==', 'Write a python function to check whether the first and last characters of a given string are equal or not.\n>>> Example: check_Equality(""abcda"") == ""Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n>>> Example: check_Equality(""abcda"") == ""Not Equal""\n""""""\n\ndef check_Equality(string):\n']"
54,Write a function to sort the given array by using counting sort.,"['assert counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]', 'assert counting_sort([12, 9, 28, 33, 69, 45]) == [9, 12, 28, 33, 45, 69]', 'assert counting_sort([8, 4, 14, 3, 2, 1]) == [1, 2, 3, 4, 8, 14]']","Write a function to sort the given array by using counting sort.
>>> Example: counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]","def counting_sort(my_list):
    max_value = 0
    for i in range(len(my_list)):
        if my_list[i] > max_value:
            max_value = my_list[i]
    buckets = [0] * (max_value + 1)
    for i in my_list:
        buckets[i] += 1
    i = 0
    for j in range(max_value + 1):
         for a in range(buckets[j]):
             my_list[i] = j
             i += 1
    return my_list","['Write a function to sort the given array by using counting sort.\n>>> Example: counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]\n""""""\n\n\ndef counting_sort(arr):\n    """"""\n    >>> counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]\n    True\n    >>> counting_sort([]) == []\n    True\n    >>> counting_sort([1]) == [1]\n    True\n    >>> counting_sort([1,2]) == [1, 2]\n    True\n    >>> counting_sort([1,2,3]) == [1, 2, 3]\n    True\n    >>> counting_sort([1,2,3,4]) == [1, 2, 3, 4]\n    True\n    >>> counting_sort([1,2,3,4,5]) == [1, 2, 3, 4, 5]\n    True\n    >>> counting_sort([1,2,3,4,5,6]) == [1, 2, 3, 4, 5, 6]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7]) == [1, 2, 3, 4, 5, 6, 7]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7,8]) == [1, 2, 3, 4, 5, 6, 7, 8]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7,8,9]) == [1, 2, 3, 4, 5, 6, 7', 'Write a function to sort the given array by using counting sort.\n>>> Example: counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]\n""""""\n\ndef counting_sort(arr):\n    """"""\n    >>> counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]\n    True\n    >>> counting_sort([]) == []\n    True\n    >>> counting_sort([1]) == [1]\n    True\n    >>> counting_sort([1,2]) == [1, 2]\n    True\n    >>> counting_sort([1,2,3]) == [1, 2, 3]\n    True\n    >>> counting_sort([1,2,3,4]) == [1, 2, 3, 4]\n    True\n    >>> counting_sort([1,2,3,4,5]) == [1, 2, 3, 4, 5]\n    True\n    >>> counting_sort([1,2,3,4,5,6]) == [1, 2, 3, 4, 5, 6]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7]) == [1, 2, 3, 4, 5, 6, 7]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7,8]) == [1, 2, 3, 4, 5, 6, 7, 8]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7,8,9]) == [1, 2, 3, 4, 5, 6, 7', 'Write a function to sort the given array by using counting sort.\n>>> Example: counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]\n""""""\n\n\ndef counting_sort(arr):\n    """"""\n    >>> counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]\n    True\n    >>> counting_sort([]) == []\n    True\n    >>> counting_sort([1]) == [1]\n    True\n    >>> counting_sort([1,2]) == [1, 2]\n    True\n    >>> counting_sort([1,2,3]) == [1, 2, 3]\n    True\n    >>> counting_sort([1,2,3,4]) == [1, 2, 3, 4]\n    True\n    >>> counting_sort([1,2,3,4,5]) == [1, 2, 3, 4, 5]\n    True\n    >>> counting_sort([1,2,3,4,5,6]) == [1, 2, 3, 4, 5, 6]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7]) == [1, 2, 3, 4, 5, 6, 7]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7,8]) == [1, 2, 3, 4, 5, 6, 7, 8]\n    True\n    >>> counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]\n    True', 'Write a function to sort the given array by using counting sort.\n>>> Example: counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]\n""""""\n\n\ndef counting_sort(arr):\n    """"""\n    >>> counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]\n    True\n    >>> counting_sort([]) == []\n    True\n    >>> counting_sort([1]) == [1]\n    True\n    >>> counting_sort([1,2]) == [1, 2]\n    True\n    >>> counting_sort([1,2,3]) == [1, 2, 3]\n    True\n    >>> counting_sort([1,2,3,4]) == [1, 2, 3, 4]\n    True\n    >>> counting_sort([1,2,3,4,5]) == [1, 2, 3, 4, 5]\n    True\n    >>> counting_sort([1,2,3,4,5,6]) == [1, 2, 3, 4, 5, 6]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7]) == [1, 2, 3, 4, 5, 6, 7]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7,8]) == [1, 2, 3, 4, 5, 6, 7, 8]\n    True\n    >>> counting_sort([9,8,7,6,5,4,3,2,1]) == [1, 2, 3, 4, 5, 6, 7', 'Write a function to sort the given array by using counting sort.\n>>> Example: counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]\n""""""\n\n\ndef counting_sort(arr):\n    """"""\n    >>> counting_sort([1,23,4,5,6,7,8]) == [1, 4, 5, 6, 7, 8, 23]\n    True\n    >>> counting_sort([]) == []\n    True\n    >>> counting_sort([1]) == [1]\n    True\n    >>> counting_sort([1,2]) == [1, 2]\n    True\n    >>> counting_sort([1,2,3]) == [1, 2, 3]\n    True\n    >>> counting_sort([1,2,3,4]) == [1, 2, 3, 4]\n    True\n    >>> counting_sort([1,2,3,4,5]) == [1, 2, 3, 4, 5]\n    True\n    >>> counting_sort([1,2,3,4,5,6]) == [1, 2, 3, 4, 5, 6]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7]) == [1, 2, 3, 4, 5, 6, 7]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7,8]) == [1, 2, 3, 4, 5, 6, 7, 8]\n    True\n    >>> counting_sort([1,2,3,4,5,6,7,8,9,10]) == [1, 2, 3, 4, 5, 6']"
55,Write a function to find t-nth term of geometric series.,"['assert tn_gp(1,5,2)==16', 'assert tn_gp(1,5,4)==256', 'assert tn_gp(2,6,3)==486']","Write a function to find t-nth term of geometric series.
>>> Example: tn_gp(1,5,2)==16","import math
def tn_gp(a,n,r):
  tn = a * (math.pow(r, n - 1))
  return tn","['Write a function to find t-nth term of geometric series.\n>>> Example: tn_gp(1,5,2)==16\n>>> tn_gp(1,5,2)==16\n>>> tn_gp(1,5,2)==16\n>>> tn_gp(1,5,2)==16\n>>> tn_', 'Write a function to find t-nth term of geometric series.\n>>> Example: tn_gp(1,5,2)==16\n>>> tn_gp(1,5,2)==16\n>>> tn_gp(2,5,2)==32\n>>> tn_gp(3,5,2)==64\n>>> tn_', 'Write a function to find t-nth term of geometric series.\n>>> Example: tn_gp(1,5,2)==16\n>>> tn_gp(1,5,2)==16\n>>> tn_gp(2,5,2)==32\n>>> tn_gp(3,5,2)==48\n>>> tn_', 'Write a function to find t-nth term of geometric series.\n>>> Example: tn_gp(1,5,2)==16\n>>> tn_gp(1,5,2)==16\n>>> tn_gp(1,5,2)==16\n>>> tn_gp(1,5,2)==16\n""""""\n\ndef', 'Write a function to find t-nth term of geometric series.\n>>> Example: tn_gp(1,5,2)==16\n>>> tn_gp(1,5,2)==16\n>>> tn_gp(1,5,2)==16\n>>> tn_gp(1,5,2)==16\n>>> \n>>>']"
56,Write a python function to check if a given number is one less than twice its reverse.,"['assert check(70) == False', 'assert check(23) == False', 'assert check(73) == True']","Write a python function to check if a given number is one less than twice its reverse.
>>> Example: check(70) == False","def rev(num):    
    rev_num = 0
    while (num > 0):  
        rev_num = (rev_num * 10 + num % 10) 
        num = num // 10  
    return rev_num  
def check(n):    
    return (2 * rev(n) == n + 1)  ","['Write a python function to check if a given number is one less than twice its reverse.\n>>> Example: check(70) == False\n>>> check(71) == True\n>>> check(72) == False\n>>> check(73) == True\n>>> check(74) == False\n>>> check(75) == True\n>>> check(76) == False\n>>> check(77) == True\n>>> check(78) == False\n>>> check(79) == True\n>>> check(80) == False\n>>> check(81) == True\n>>> check(82) == False\n>>> check(83) == True\n>>> check(84) == False\n>>> check(85) == True\n>>> check(86) == False\n>>> check(87) == True\n>>> check(88) == False\n>>> check(89) == True\n>>> check(90) == False\n>>> check(91) == True\n>>> check(92) == False\n>>> check(93) == True\n', 'Write a python function to check if a given number is one less than twice its reverse.\n>>> Example: check(70) == False\n>>> check(71) == True\n>>> check(72) == True\n>>> check(73) == True\n>>> check(74) == True\n>>> check(75) == True\n>>> check(76) == True\n>>> check(77) == True\n>>> check(78) == True\n>>> check(79) == True\n>>> check(80) == True\n>>> check(81) == True\n>>> check(82) == True\n>>> check(83) == True\n>>> check(84) == True\n>>> check(85) == True\n>>> check(86) == True\n>>> check(87) == True\n>>> check(88) == True\n>>> check(89) == True\n>>> check(90) == True\n>>> check(91) == True\n>>> check(92) == True\n>>> check(93) == True\n', 'Write a python function to check if a given number is one less than twice its reverse.\n>>> Example: check(70) == False\n>>> check(71) == True\n>>> check(72) == True\n>>> check(73) == False\n>>> check(74) == True\n>>> check(75) == False\n>>> check(76) == True\n>>> check(77) == False\n>>> check(78) == True\n>>> check(79) == False\n>>> check(80) == True\n>>> check(81) == False\n>>> check(82) == True\n>>> check(83) == False\n>>> check(84) == True\n>>> check(85) == False\n>>> check(86) == True\n>>> check(87) == False\n>>> check(88) == True\n>>> check(89) == False\n>>> check(90) == True\n>>> check(91) == False\n>>> check(92) == True\n>>> check(93) == False\n', 'Write a python function to check if a given number is one less than twice its reverse.\n>>> Example: check(70) == False\n>>> check(71) == True\n>>> check(72) == True\n>>> check(73) == False\n>>> check(74) == False\n>>> check(75) == True\n>>> check(76) == False\n>>> check(77) == True\n>>> check(78) == False\n>>> check(79) == True\n>>> check(80) == False\n>>> check(81) == True\n>>> check(82) == False\n>>> check(83) == True\n>>> check(84) == False\n>>> check(85) == True\n>>> check(86) == False\n>>> check(87) == True\n>>> check(88) == False\n>>> check(89) == True\n>>> check(90) == False\n>>> check(91) == True\n>>> check(92) == False\n>>> check(93) == True\n', 'Write a python function to check if a given number is one less than twice its reverse.\n>>> Example: check(70) == False\n>>> check(71) == True\n>>> check(72) == False\n>>> check(73) == True\n>>> check(74) == False\n>>> check(75) == True\n>>> check(76) == False\n>>> check(77) == True\n>>> check(78) == False\n>>> check(79) == True\n>>> check(80) == False\n>>> check(81) == True\n>>> check(82) == False\n>>> check(83) == True\n>>> check(84) == False\n>>> check(85) == True\n>>> check(86) == False\n>>> check(87) == True\n>>> check(88) == False\n>>> check(89) == True\n>>> check(90) == False\n>>> check(91) == True\n>>> check(92) == True\n>>> check(93) == False\n']"
57,Write a python function to find the largest number that can be formed with the given digits.,"['assert find_Max_Num([1,2,3],3) == 321', 'assert find_Max_Num([4,5,6,1],4) == 6541', 'assert find_Max_Num([1,2,3,9],4) == 9321']","Write a python function to find the largest number that can be formed with the given digits.
>>> Example: find_Max_Num([1,2,3],3) == 321","def find_Max_Num(arr,n) : 
    arr.sort(reverse = True) 
    num = arr[0] 
    for i in range(1,n) : 
        num = num * 10 + arr[i] 
    return num ","['Write a python function to find the largest number that can be formed with the given digits.\n>>> Example: find_Max_Num([1,2,3],3) == 321\n>>> Example: find_Max_Num([1,2,3],4) == -1\n>>> Example: find_Max_Num([1,2,3],5) == -1\n>>> Example: find_Max_Num([1,2,3],6) == -1\n>>> Example: find_Max_Num([1,2,3],7) == -1\n>>> Example: find_Max_Num([1,2,3],8) == -1\n>>> Example: find_Max_Num([1,2,3],9', 'Write a python function to find the largest number that can be formed with the given digits.\n>>> Example: find_Max_Num([1,2,3],3) == 321\n>>> Example: find_Max_Num([1,2,3],4) == -1\n>>> Example: find_Max_Num([1,2,3],5) == -1\n>>> Example: find_Max_Num([1,2,3],6) == -1\n>>> Example: find_Max_Num([1,2,3],7) == -1\n>>> Example: find_Max_Num([1,2,3],8) == -1\n>>> Example: find_Max_Num([1,2,3,4', 'Write a python function to find the largest number that can be formed with the given digits.\n>>> Example: find_Max_Num([1,2,3],3) == 321\n>>> Example: find_Max_Num([1,2,3],4) == -1\n>>> Example: find_Max_Num([1,2,3],5) == -1\n>>> Example: find_Max_Num([1,2,3],6) == -1\n>>> Example: find_Max_Num([1,2,3],7) == -1\n>>> Example: find_Max_Num([1,2,3],8) == -1\n>>> Example: find_Max_Num([1,2,3],1', 'Write a python function to find the largest number that can be formed with the given digits.\n>>> Example: find_Max_Num([1,2,3],3) == 321\n>>> Example: find_Max_Num([1,2,3],4) == -1\n>>> Example: find_Max_Num([1,2,3],5) == -1\n>>> Example: find_Max_Num([1,2,3],6) == -1\n>>> Example: find_Max_Num([1,2,3],7) == -1\n>>> Example: find_Max_Num([1,2,3],8) == -1\n>>> Example: find_Max_Num([1,2,3],0', 'Write a python function to find the largest number that can be formed with the given digits.\n>>> Example: find_Max_Num([1,2,3],3) == 321\n>>> Example: find_Max_Num([1,2,3],4) == -1\n>>> Example: find_Max_Num([1,2,3],5) == -1\n>>> Example: find_Max_Num([1,2,3],6) == -1\n>>> Example: find_Max_Num([1,2,3],7) == -1\n>>> Example: find_Max_Num([1,2,3],8) == -1\n>>> Example: find_Max_Num([1,2,3],10']"
58,Write a python function to check whether the given two integers have opposite sign or not.,"['assert opposite_Signs(1,-2) == True', 'assert opposite_Signs(3,2) == False', 'assert opposite_Signs(-10,-10) == False']","Write a python function to check whether the given two integers have opposite sign or not.
>>> Example: opposite_Signs(1,-2) == True","def opposite_Signs(x,y): 
    return ((x ^ y) < 0); ","['Write a python function to check whether the given two integers have opposite sign or not.\n>>> Example: opposite_Signs(1,-2) == True\n>>> opposite_Signs(-1,-2) == True\n>>> opposite_Signs(1,2) == False', 'Write a python function to check whether the given two integers have opposite sign or not.\n>>> Example: opposite_Signs(1,-2) == True\n>>> opposite_Signs(-1,-2) == True\n>>> opposite_Signs(-1,2) == False', 'Write a python function to check whether the given two integers have opposite sign or not.\n>>> Example: opposite_Signs(1,-2) == True\n>>> opposite_Signs(1,2) == False\n""""""\n\ndef opposite_Signs(a,b', 'Write a python function to check whether the given two integers have opposite sign or not.\n>>> Example: opposite_Signs(1,-2) == True\n>>> opposite_Signs(1,2) == False\n>>> opposite_Signs(-1,-2) == False', 'Write a python function to check whether the given two integers have opposite sign or not.\n>>> Example: opposite_Signs(1,-2) == True\n>>> opposite_Signs(1,2) == False\n>>> opposite_Signs(-1,-2) == True']"
59,Write a function to find the nth octagonal number.,"['assert is_octagonal(5) == 65', 'assert is_octagonal(10) == 280', 'assert is_octagonal(15) == 645']","Write a function to find the nth octagonal number.
>>> Example: is_octagonal(5) == 65","def is_octagonal(n): 
	return 3 * n * n - 2 * n ","['Write a function to find the nth octagonal number.\n>>> Example: is_octagonal(5) == 65\n""""""\n\n\ndef is_octagonal(n):\n    return int(n * (3 * n - 1) / 2)', 'Write a function to find the nth octagonal number.\n>>> Example: is_octagonal(5) == 65\n""""""\n\n\ndef is_octagonal(n):\n    """"""\n    >>> is_octagonal(5)\n    65\n', 'Write a function to find the nth octagonal number.\n>>> Example: is_octagonal(5) == 65\n""""""\n\n\ndef is_octagonal(n):\n    """"""\n    >>> is_octagonal(1)\n    1\n', 'Write a function to find the nth octagonal number.\n>>> Example: is_octagonal(5) == 65\n""""""\n\n\ndef is_octagonal(n):\n    return n * (3 * n - 1) // 2\n\n\nprint', 'Write a function to find the nth octagonal number.\n>>> Example: is_octagonal(5) == 65\n""""""\n\n\ndef is_octagonal(n):\n    return n * (3 * n - 1) // 2\n\n\nif']"
60,Write a function to find the maximum length of the subsequence with difference between adjacent elements for the given array.,"['assert max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 8) == 5', 'assert max_len_sub([-2, -1, 5, -1, 4, 0, 3], 7) == 4', 'assert max_len_sub([9, 11, 13, 15, 18], 5) == 1']","Write a function to find the maximum length of the subsequence with difference between adjacent elements for the given array.
>>> Example: max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 8) == 5","def max_len_sub( arr, n): 
	mls=[] 
	max = 0
	for i in range(n): 
		mls.append(1) 
	for i in range(n): 
		for j in range(i): 
			if (abs(arr[i] - arr[j]) <= 1 and mls[i] < mls[j] + 1): 
				mls[i] = mls[j] + 1
	for i in range(n): 
		if (max < mls[i]): 
			max = mls[i] 
	return max","['Write a function to find the maximum length of the subsequence with difference between adjacent elements for the given array.\n>>> Example: max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 8) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 7) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 6) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 5) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 4) == 4\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 3) == 3\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 2) == 2\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 1) == 1\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 0) == 0\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5,', 'Write a function to find the maximum length of the subsequence with difference between adjacent elements for the given array.\n>>> Example: max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 8) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 7) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 6) == 4\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 5) == 4\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 4) == 3\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 3) == 2\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 2) == 1\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 1) == 0\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 0) == 0\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5,', 'Write a function to find the maximum length of the subsequence with difference between adjacent elements for the given array.\n>>> Example: max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 8) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 7) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 6) == 4\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 5) == 4\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 4) == 3\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 3) == 3\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 2) == 2\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 1) == 1\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 0) == 0\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5,', 'Write a function to find the maximum length of the subsequence with difference between adjacent elements for the given array.\n>>> Example: max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 8) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 7) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 6) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 5) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 4) == 4\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 3) == 3\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 2) == 2\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 1) == 1\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 0) == 0\n>>> max_len_sub([], 0) == 0\n>>> max_len_sub([],', 'Write a function to find the maximum length of the subsequence with difference between adjacent elements for the given array.\n>>> Example: max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 8) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 7) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 6) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 5) == 5\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 4) == 4\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 3) == 3\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 2) == 2\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 1) == 1\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5, 8], 0) == 0\n>>> max_len_sub([2, 5, 6, 3, 7, 6, 5],']"
61,Write a python function to count number of substrings with the sum of digits equal to their length.,"[""assert count_Substrings('112112',6) == 6"", ""assert count_Substrings('111',3) == 6"", ""assert count_Substrings('1101112',7) == 12""]","Write a python function to count number of substrings with the sum of digits equal to their length.
>>> Example: count_Substrings('112112',6) == 6","from collections import defaultdict
def count_Substrings(s,n):
    count,sum = 0,0
    mp = defaultdict(lambda : 0)
    mp[0] += 1
    for i in range(n):
        sum += ord(s[i]) - ord('0')
        count += mp[sum - (i + 1)]
        mp[sum - (i + 1)] += 1
    return count","[""Write a python function to count number of substrings with the sum of digits equal to their length.\n>>> Example: count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6)"", ""Write a python function to count number of substrings with the sum of digits equal to their length.\n>>> Example: count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112111',6)"", ""Write a python function to count number of substrings with the sum of digits equal to their length.\n>>> Example: count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',5)"", ""Write a python function to count number of substrings with the sum of digits equal to their length.\n>>> Example: count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',4)"", ""Write a python function to count number of substrings with the sum of digits equal to their length.\n>>> Example: count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('112112',6) == 6\n>>> count_Substrings('121212',6""]"
62,Write a python function to find smallest number in a list.,"['assert smallest_num([10, 20, 1, 45, 99]) == 1', 'assert smallest_num([1, 2, 3]) == 1', 'assert smallest_num([45, 46, 50, 60]) == 45']","Write a python function to find smallest number in a list.
>>> Example: smallest_num([10, 20, 1, 45, 99]) == 1","def smallest_num(xs):
  return min(xs)
","['Write a python function to find smallest number in a list.\n>>> Example: smallest_num([10, 20, 1, 45, 99]) == 1\n>>> smallest_num([10, 20, 1,', 'Write a python function to find smallest number in a list.\n>>> Example: smallest_num([10, 20, 1, 45, 99]) == 1\n>>> Example: smallest_num([10, 20,', 'Write a python function to find smallest number in a list.\n>>> Example: smallest_num([10, 20, 1, 45, 99]) == 1\n>>> Example: smallest_num([1, 2,', 'Write a python function to find smallest number in a list.\n>>> Example: smallest_num([10, 20, 1, 45, 99]) == 1\nTrue\n>>> Example: smallest_num([10,', 'Write a python function to find smallest number in a list.\n>>> Example: smallest_num([10, 20, 1, 45, 99]) == 1\n>>> Example: smallest_num([10, 1,']"
63,Write a function to find the maximum difference between available pairs in the given tuple list.,"['assert max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7', 'assert max_difference([(4, 6), (2, 17), (9, 13), (11, 12)]) == 15', 'assert max_difference([(12, 35), (21, 27), (13, 23), (41, 22)]) == 23']","Write a function to find the maximum difference between available pairs in the given tuple list.
>>> Example: max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7","def max_difference(test_list):
  temp = [abs(b - a) for a, b in test_list]
  res = max(temp)
  return (res) ","['Write a function to find the maximum difference between available pairs in the given tuple list.\n>>> Example: max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n>>> max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n>>> max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n>>> max_difference([', 'Write a function to find the maximum difference between available pairs in the given tuple list.\n>>> Example: max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n>>> max_difference([(3, 5), (1, 7), (10, 3), (1, 2)])\n7\n>>> max_difference([(3, 5), (1, 7), (10, 3), (1, 2)])\n7\n>>> max_difference([', 'Write a function to find the maximum difference between available pairs in the given tuple list.\n>>> Example: max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n>>> max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n>>> max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n""""""\n\n\ndef max_', 'Write a function to find the maximum difference between available pairs in the given tuple list.\n>>> Example: max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n>>> max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n>>> max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 0\n>>> max_difference([', 'Write a function to find the maximum difference between available pairs in the given tuple list.\n>>> Example: max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n>>> max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n>>> max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7\n""""""\n\ndef max_']"
64,Write a function to sort a list of tuples using lambda.,"[""assert subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]"", ""assert subject_marks([('Telugu',49),('Hindhi',54),('Social',33)])==([('Social',33),('Telugu',49),('Hindhi',54)])"", ""assert subject_marks([('Physics',96),('Chemistry',97),('Biology',45)])==([('Biology',45),('Physics',96),('Chemistry',97)])""]","Write a function to sort a list of tuples using lambda.
>>> Example: subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]","def subject_marks(subjectmarks):
#subject_marks = [('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])
 subjectmarks.sort(key = lambda x: x[1])
 return subjectmarks","[""Write a function to sort a list of tuples using lambda.\n>>> Example: subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]\nTrue\n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n"", ""Write a function to sort a list of tuples using lambda.\n>>> Example: subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]\nTrue\n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n"", ""Write a function to sort a list of tuples using lambda.\n>>> Example: subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]\nTrue\n>>> \n>>> \n>>> \n>>> \n"", ""Write a function to sort a list of tuples using lambda.\n>>> Example: subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]\nTrue\n>>> \n>>> \n>>> \n>>> \n>>> \n"", ""Write a function to sort a list of tuples using lambda.\n>>> Example: subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]\nTrue\n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> \n>>> ""]"
65,Write a function of recursion list sum.,"['assert recursive_list_sum(([1, 2, [3,4],[5,6]]))==21', 'assert recursive_list_sum(([7, 10, [15,14],[19,41]]))==106', 'assert recursive_list_sum(([10, 20, [30,40],[50,60]]))==210']","Write a function of recursion list sum.
>>> Example: recursive_list_sum(([1, 2, [3,4],[5,6]]))==21","def recursive_list_sum(data_list):
	total = 0
	for element in data_list:
		if type(element) == type([]):
			total = total + recursive_list_sum(element)
		else:
			total = total + element
	return total","['Write a function of recursion list sum.\n>>> Example: recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n', 'Write a function of recursion list sum.\n>>> Example: recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n', 'Write a function of recursion list sum.\n>>> Example: recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n\n', 'Write a function of recursion list sum.\n>>> Example: recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n', 'Write a function of recursion list sum.\n>>> Example: recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))\n21\n>>> recursive_list_sum(([1, 2, [3,4],[5,6]]))==21\n']"
66,Write a python function to count positive numbers in a list.,"['assert pos_count([1,-2,3,-4]) == 2', 'assert pos_count([3,4,5,-1]) == 3', 'assert pos_count([1,2,3,4]) == 4']","Write a python function to count positive numbers in a list.
>>> Example: pos_count([1,-2,3,-4]) == 2","def pos_count(list):
  pos_count= 0
  for num in list: 
    if num >= 0: 
      pos_count += 1
  return pos_count ","['Write a python function to count positive numbers in a list.\n>>> Example: pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4])', 'Write a python function to count positive numbers in a list.\n>>> Example: pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4])\n2\n>>> pos_count([1,-2,3,-4])\n2\n>>> pos_count([1,-2,3,-4])\n2\n>>> pos_count([1,-2,3,-4])\n2\n>>> pos_count([1,-2,3,-4])\n2\n>>> pos_count([1,-2,3,-4])', 'Write a python function to count positive numbers in a list.\n>>> Example: pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([]) == 0\n>>> pos_count', 'Write a python function to count positive numbers in a list.\n>>> Example: pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([]) == 0\n>>> pos_count([]) == 0\n>>> pos_count([]) == 0\n>>> pos', 'Write a python function to count positive numbers in a list.\n>>> Example: pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,-2,3,-4]) == 2\n>>> pos_count([1,2,3,4])']"
67,Write a function to find the number of ways to partition a set of bell numbers.,"['assert bell_number(2)==2', 'assert bell_number(10)==115975', 'assert bell_number(56)==6775685320645824322581483068371419745979053216268760300']","Write a function to find the number of ways to partition a set of bell numbers.
>>> Example: bell_number(2)==2","def bell_number(n):   
    bell = [[0 for i in range(n+1)] for j in range(n+1)] 
    bell[0][0] = 1
    for i in range(1, n+1): 
        bell[i][0] = bell[i-1][i-1]  
        for j in range(1, i+1): 
            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]   
    return bell[n][0] ","['Write a function to find the number of ways to partition a set of bell numbers.\n>>> Example: bell_number(2)==2\n>>> Example: bell_number(3)==2\n>>> Example: bell_number(4)==3\n>>> Example: bell_number(5)==4\n>>> Example: bell_number(6)==5\n>>> Example: bell_number(7)==6\n>>> Example: bell_number(8)==7\n>>> Example: bell_number(9)==8\n>>> Example: bell_number(10)==9\n>>> Example: bell_number(11)==10\n>>> Example: bell_number(12)==11\n>>> Example: bell_number(13)==12\n>>> Example: bell_number(14)==13\n>>> Example: bell_number(15)==14\n>>> Example: bell_number(16)==15\n>>> Example: bell_number(17)==16\n>>> Example: bell_number(18)==17\n>>> Example: bell_number(19)==18\n>>> Example: bell_number(20)==19\n>>> Example: bell_number(21)==20\n>>> Example: bell_number(22)==21\n>>> Example: bell_number(23)==22\n>>> Example: bell_number(24)==', 'Write a function to find the number of ways to partition a set of bell numbers.\n>>> Example: bell_number(2)==2\n>>> Example: bell_number(3)==2\n>>> Example: bell_number(4)==3\n>>> Example: bell_number(5)==4\n>>> Example: bell_number(6)==5\n>>> Example: bell_number(7)==6\n>>> Example: bell_number(8)==7\n>>> Example: bell_number(9)==8\n>>> Example: bell_number(10)==9\n>>> Example: bell_number(11)==10\n>>> Example: bell_number(12)==11\n>>> Example: bell_number(13)==10\n>>> Example: bell_number(14)==11\n>>> Example: bell_number(15)==12\n>>> Example: bell_number(16)==13\n>>> Example: bell_number(17)==14\n>>> Example: bell_number(18)==15\n>>> Example: bell_number(19)==16\n>>> Example: bell_number(20)==17\n>>> Example: bell_number(21)==18\n>>> Example: bell_number(22)==19\n>>> Example: bell_number(23)==20\n>>> Example: bell_number(24)==', 'Write a function to find the number of ways to partition a set of bell numbers.\n>>> Example: bell_number(2)==2\n>>> Example: bell_number(3)==2\n>>> Example: bell_number(4)==3\n>>> Example: bell_number(5)==4\n>>> Example: bell_number(6)==5\n>>> Example: bell_number(7)==6\n>>> Example: bell_number(8)==7\n>>> Example: bell_number(9)==8\n>>> Example: bell_number(10)==9\n>>> Example: bell_number(11)==10\n>>> Example: bell_number(12)==11\n>>> Example: bell_number(13)==11\n>>> Example: bell_number(14)==12\n>>> Example: bell_number(15)==13\n>>> Example: bell_number(16)==14\n>>> Example: bell_number(17)==15\n>>> Example: bell_number(18)==16\n>>> Example: bell_number(19)==17\n>>> Example: bell_number(20)==18\n>>> Example: bell_number(21)==19\n>>> Example: bell_number(22)==20\n>>> Example: bell_number(23)==21\n>>> Example: bell_number(24)==', 'Write a function to find the number of ways to partition a set of bell numbers.\n>>> Example: bell_number(2)==2\n>>> Example: bell_number(3)==2\n>>> Example: bell_number(4)==3\n>>> Example: bell_number(5)==4\n>>> Example: bell_number(6)==5\n>>> Example: bell_number(7)==6\n>>> Example: bell_number(8)==7\n>>> Example: bell_number(9)==8\n>>> Example: bell_number(10)==9\n>>> Example: bell_number(11)==10\n>>> Example: bell_number(12)==11\n>>> Example: bell_number(13)==12\n>>> Example: bell_number(14)==13\n>>> Example: bell_number(15)==14\n>>> Example: bell_number(16)==15\n>>> Example: bell_number(17)==16\n>>> Example: bell_number(18)==17\n>>> Example: bell_number(19)==18\n>>> Example: bell_number(20)==19\n>>> Example: bell_number(21)==20\n>>> Example: bell_number(22)==21\n>>> Example: bell_number(23)==22\n>>> Example: bell_number(25)==', 'Write a function to find the number of ways to partition a set of bell numbers.\n>>> Example: bell_number(2)==2\n>>> Example: bell_number(3)==2\n>>> Example: bell_number(4)==3\n>>> Example: bell_number(5)==4\n>>> Example: bell_number(6)==5\n>>> Example: bell_number(7)==6\n>>> Example: bell_number(8)==7\n>>> Example: bell_number(9)==8\n>>> Example: bell_number(10)==9\n>>> Example: bell_number(11)==10\n>>> Example: bell_number(12)==11\n>>> Example: bell_number(13)==12\n>>> Example: bell_number(14)==13\n>>> Example: bell_number(15)==14\n>>> Example: bell_number(16)==15\n>>> Example: bell_number(17)==16\n>>> Example: bell_number(18)==17\n>>> Example: bell_number(19)==18\n>>> Example: bell_number(20)==19\n>>> Example: bell_number(21)==20\n>>> Example: bell_number(22)==21\n>>> Example: bell_number(23)==22\n""""""\n\ndef bell_number(n):']"
68,Write a python function to check whether the given array is monotonic or not.,"['assert is_Monotonic([6, 5, 4, 4]) == True', 'assert is_Monotonic([1, 2, 2, 3]) == True', 'assert is_Monotonic([1, 3, 2]) == False']","Write a python function to check whether the given array is monotonic or not.
>>> Example: is_Monotonic([6, 5, 4, 4]) == True","def is_Monotonic(A): 
    return (all(A[i] <= A[i + 1] for i in range(len(A) - 1)) or
            all(A[i] >= A[i + 1] for i in range(len(A) - 1))) ","['Write a python function to check whether the given array is monotonic or not.\n>>> Example: is_Monotonic([6, 5, 4, 4]) == True\n>>> Example: is_Monotonic([6, 5, 4, 3]) == False\n>>> Example: is_Monotonic([1, 1, 1]) == True\n>>> Example: is_Monotonic([1, 1, 2]) == True\n>>> Example: is_Monotonic([1, 2, 1]) == True\n>>> Example: is_Monotonic([1, 2, 2]) == True\n>>> Example: is_Monotonic([2, 1, 1]) == True\n>>> Example: is_Monot', 'Write a python function to check whether the given array is monotonic or not.\n>>> Example: is_Monotonic([6, 5, 4, 4]) == True\n>>> Example: is_Monotonic([6, 5, 4, 3]) == False\n>>> Example: is_Monotonic([1, 1, 1]) == True\n>>> Example: is_Monotonic([1, 1, 2]) == True\n>>> Example: is_Monotonic([1, 2, 1]) == True\n>>> Example: is_Monotonic([1, 2, 2]) == True\n>>> Example: is_Monotonic([6, 5, 4, 4]) == True\n>>> Example: is_', 'Write a python function to check whether the given array is monotonic or not.\n>>> Example: is_Monotonic([6, 5, 4, 4]) == True\n>>> Example: is_Monotonic([6, 5, 4, 3]) == False\n>>> Example: is_Monotonic([1, 1, 1]) == True\n>>> Example: is_Monotonic([1, 1, 2]) == True\n>>> Example: is_Monotonic([1, 2, 1]) == True\n>>> Example: is_Monotonic([1, 2, 2]) == True\n>>> Example: is_Monotonic([1, 2, 3]) == True\n>>> Example: is_Monot', 'Write a python function to check whether the given array is monotonic or not.\n>>> Example: is_Monotonic([6, 5, 4, 4]) == True\n>>> Example: is_Monotonic([6, 5, 4, 3]) == False\n>>> Example: is_Monotonic([1, 1, 1]) == True\n>>> Example: is_Monotonic([1, 1, 2]) == True\n>>> Example: is_Monotonic([1, 2, 1]) == True\n>>> Example: is_Monotonic([1, 2, 2]) == True\n>>> Example: is_Monotonic([1, 1, 2, 2]) == True\n>>> Example: is_', 'Write a python function to check whether the given array is monotonic or not.\n>>> Example: is_Monotonic([6, 5, 4, 4]) == True\n>>> Example: is_Monotonic([6, 5, 4, 3]) == False\n>>> Example: is_Monotonic([1, 1, 1]) == True\n>>> Example: is_Monotonic([1, 1, 2]) == True\n>>> Example: is_Monotonic([1, 2, 1]) == True\n>>> Example: is_Monotonic([1, 2, 2]) == True\n>>> Example: is_Monotonic([1, 2, 3]) == False\n>>> Example: is_Monot']"
69,Write a function to check whether a list contains the given sublist or not.,"['assert is_sublist([2,4,3,5,7],[3,7])==False', 'assert is_sublist([2,4,3,5,7],[4,3])==True', 'assert is_sublist([2,4,3,5,7],[1,6])==False']","Write a function to check whether a list contains the given sublist or not.
>>> Example: is_sublist([2,4,3,5,7],[3,7])==False","def is_sublist(l, s):
	sub_set = False
	if s == []:
		sub_set = True
	elif s == l:
		sub_set = True
	elif len(s) > len(l):
		sub_set = False
	else:
		for i in range(len(l)):
			if l[i] == s[0]:
				n = 1
				while (n < len(s)) and (l[i+n] == s[n]):
					n += 1				
				if n == len(s):
					sub_set = True
	return sub_set","['Write a function to check whether a list contains the given sublist or not.\n>>> Example: is_sublist([2,4,3,5,7],[3,7])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9,10])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9,10,11])==True\n>>> Example', 'Write a function to check whether a list contains the given sublist or not.\n>>> Example: is_sublist([2,4,3,5,7],[3,7])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9,10])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9,10,11])==False\n>>> Example', 'Write a function to check whether a list contains the given sublist or not.\n>>> Example: is_sublist([2,4,3,5,7],[3,7])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9,10])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9,10,11])==False\n>>> Example', 'Write a function to check whether a list contains the given sublist or not.\n>>> Example: is_sublist([2,4,3,5,7],[3,7])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9,10])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9,10,11])==False\n>>> Example', 'Write a function to check whether a list contains the given sublist or not.\n>>> Example: is_sublist([2,4,3,5,7],[3,7])==False\n>>> Example: is_sublist([2,4,3,5,7],[2,3])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9,10])==True\n>>> Example: is_sublist([2,4,3,5,7],[2,3,4,5,6,7,8,9,10,11])==False\n>>> Example']"
70,Write a function to find whether all the given tuples have equal length or not.,"[""assert get_equal([(11, 22, 33), (44, 55, 66)], 3) == 'All tuples have same length'"", ""assert get_equal([(1, 2, 3), (4, 5, 6, 7)], 3) == 'All tuples do not have same length'"", ""assert get_equal([(1, 2), (3, 4)], 2) == 'All tuples have same length'""]","Write a function to find whether all the given tuples have equal length or not.
>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 3) == 'All tuples have same length'","def find_equal_tuple(Input, k):
  flag = 1
  for tuple in Input:
    if len(tuple) != k:
      flag = 0
      break
  return flag
def get_equal(Input, k):
  if find_equal_tuple(Input, k) == 1:
    return (""All tuples have same length"")
  else:
    return (""All tuples do not have same length"")","[""Write a function to find whether all the given tuples have equal length or not.\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 3) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 4) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 5) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 6) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 7) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 8) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 9) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 10) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55,"", ""Write a function to find whether all the given tuples have equal length or not.\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 3) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 4) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 5) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 6) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 7) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 8) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 9) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 10) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33, 44), (55,"", ""Write a function to find whether all the given tuples have equal length or not.\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 3) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 4) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 5) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 6) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 7) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 8) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 9) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 10) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33, 44, 55, 66"", ""Write a function to find whether all the given tuples have equal length or not.\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 3) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 4) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 5) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 6) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 7) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 8) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 9) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 10) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33, 55), (44,"", ""Write a function to find whether all the given tuples have equal length or not.\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 3) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 4) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 5) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 6) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 7) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 8) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 9) == 'All tuples have same length'\n>>> Example: get_equal([(11, 22, 33), (44, 55, 66)], 10) == 'All tuples have same length'\n>>> Example: get_equal([(1, 2, 3), (4, 5,""]"
71,Write a function to sort a list of elements using comb sort.,"['assert comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]', 'assert comb_sort([41, 32, 15, 19, 22]) == [15, 19, 22, 32, 41]', 'assert comb_sort([99, 15, 13, 47]) == [13, 15, 47, 99]']","Write a function to sort a list of elements using comb sort.
>>> Example: comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]","def comb_sort(nums):
    shrink_fact = 1.3
    gaps = len(nums)
    swapped = True
    i = 0
    while gaps > 1 or swapped:
        gaps = int(float(gaps) / shrink_fact)
        swapped = False
        i = 0
        while gaps + i < len(nums):
            if nums[i] > nums[i+gaps]:
                nums[i], nums[i+gaps] = nums[i+gaps], nums[i]
                swapped = True
            i += 1
    return nums","['Write a function to sort a list of elements using comb sort.\n>>> Example: comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]\n""""""\n\n\ndef comb_sort(arr):\n    n = len(arr)\n    gap = n\n    swapped = True\n    while gap!= 1 or swapped:\n        gap = int(gap / 1.3)\n        if gap < 1:\n            gap = 1\n        swapped = False\n        for i in range(n - gap):\n            if arr[i] > arr[i + gap]:\n                arr[i], arr[i + gap] = arr[i + gap], arr[i]\n                swapped = True\n    return arr\n\n\nprint(comb_sort([5, 15, 37, 25, 79]))\n', 'Write a function to sort a list of elements using comb sort.\n>>> Example: comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]\n""""""\n\n\ndef comb_sort(arr):\n    n = len(arr)\n    gap = n\n    swapped = True\n    while gap!= 1 or swapped:\n        gap = int(gap / 1.3)\n        if gap < 1:\n            gap = 1\n        swapped = False\n        i = 0\n        while i + gap < n:\n            if arr[i] > arr[i + gap]:\n                arr[i], arr[i + gap] = arr[i + gap], arr[i]\n                swapped = True\n            i += gap\n    return arr\n\n\nprint(comb_sort([5, 15, 37, 25, 79]))\n', 'Write a function to sort a list of elements using comb sort.\n>>> Example: comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]\n""""""\n\n\ndef comb_sort(arr):\n    n = len(arr)\n    gap = n\n    swapped = True\n    while gap!= 1 or swapped:\n        gap = int(gap / 1.3)\n        if gap < 1:\n            gap = 1\n        swapped = False\n        for i in range(0, n - gap):\n            if arr[i] > arr[i + gap]:\n                arr[i], arr[i + gap] = arr[i + gap], arr[i]\n                swapped = True\n    return arr\n\n\nprint(comb_sort([5, 15, 37, 25, 79]))\n', 'Write a function to sort a list of elements using comb sort.\n>>> Example: comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]\n""""""\n\n\ndef comb_sort(arr):\n    n = len(arr)\n    gap = n\n    swapped = True\n    while gap!= 1 or swapped:\n        gap = int(gap / 1.3)\n        if gap < 1:\n            gap = 1\n        swapped = False\n        for i in range(n - gap):\n            if arr[i] > arr[i + gap]:\n                arr[i], arr[i + gap] = arr[i + gap], arr[i]\n                swapped = True\n    return arr\n', 'Write a function to sort a list of elements using comb sort.\n>>> Example: comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]\n""""""\n\n\ndef comb_sort(arr):\n    n = len(arr)\n    gap = n\n    swapped = True\n    while gap!= 1 or swapped:\n        gap = int(gap / 1.3)\n        if gap < 1:\n            gap = 1\n        swapped = False\n        i = 0\n        while i + gap < n:\n            if arr[i] > arr[i + gap]:\n                arr[i], arr[i + gap] = arr[i + gap], arr[i]\n                swapped = True\n            i += gap\n    return arr\n']"
72,Write a python function to check whether the given number can be represented as difference of two squares or not.,"['assert dif_Square(5) == True', 'assert dif_Square(10) == False', 'assert dif_Square(15) == True']","Write a python function to check whether the given number can be represented as difference of two squares or not.
>>> Example: dif_Square(5) == True","def dif_Square(n): 
    if (n % 4 != 2): 
        return True
    return False","['Write a python function to check whether the given number can be represented as difference of two squares or not.\n>>> Example: dif_Square(5) == True\n>>> dif_Square(6) == False\n>>> dif_Square(7) == False\n>>> dif_Square(8) == True\n>>> dif_Square(9) == False\n>>> dif_Square(10', 'Write a python function to check whether the given number can be represented as difference of two squares or not.\n>>> Example: dif_Square(5) == True\n>>> dif_Square(6) == False\n>>> dif_Square(7) == True\n>>> dif_Square(8) == False\n>>> dif_Square(9) == True\n>>> dif_Square(10', 'Write a python function to check whether the given number can be represented as difference of two squares or not.\n>>> Example: dif_Square(5) == True\n>>> dif_Square(6) == False\n>>> dif_Square(7) == True\n>>> dif_Square(8) == False\n>>> dif_Square(9) == False\n>>> dif_Square(10', 'Write a python function to check whether the given number can be represented as difference of two squares or not.\n>>> Example: dif_Square(5) == True\n>>> dif_Square(6) == False\n>>> dif_Square(7) == False\n>>> dif_Square(8) == True\n>>> dif_Square(9) == True\n>>> dif_Square(10', 'Write a python function to check whether the given number can be represented as difference of two squares or not.\n>>> Example: dif_Square(5) == True\n>>> dif_Square(6) == False\n>>> dif_Square(7) == True\n>>> dif_Square(8) == True\n>>> dif_Square(9) == False\n>>> dif_Square(10']"
73,Write a function to split the given string with multiple delimiters by using regex.,"[""assert multiple_split('Forces of the \\ndarkness*are coming into the play.') == ['Forces of the ', 'darkness', 'are coming into the play.']"", ""assert multiple_split('Mi Box runs on the \\n Latest android*which has google assistance and chromecast.') == ['Mi Box runs on the ', ' Latest android', 'which has google assistance and chromecast.']"", ""assert multiple_split('Certain services\\nare subjected to change*over the seperate subscriptions.') == ['Certain services', 'are subjected to change', 'over the seperate subscriptions.']""]","Write a function to split the given string with multiple delimiters by using regex.
>>> Example: multiple_split('Forces of the \ndarkness*are coming into the play.') == ['Forces of the ', 'darkness', 'are coming into the play.']","import re
def multiple_split(text):
  return (re.split('; |, |\*|\n',text))","[""Write a function to split the given string with multiple delimiters by using regex.\n>>> Example: multiple_split('Forces of the \\ndarkness*are coming into the play.') == ['Forces of the ', 'darkness', 'are coming into the play.']\n\n'''\n\nimport re\n\ndef multiple_split(string):\n    return re."", ""Write a function to split the given string with multiple delimiters by using regex.\n>>> Example: multiple_split('Forces of the \\ndarkness*are coming into the play.') == ['Forces of the ', 'darkness', 'are coming into the play.']\n'''\n\nimport re\n\ndef multiple_split(string):\n    return re.split"", 'Write a function to split the given string with multiple delimiters by using regex.\n>>> Example: multiple_split(\'Forces of the \\ndarkness*are coming into the play.\') == [\'Forces of the \', \'darkness\', \'are coming into the play.\']\n""""""\n\nimport re\n\ndef multiple_split(string):\n    return re.split(\'', 'Write a function to split the given string with multiple delimiters by using regex.\n>>> Example: multiple_split(\'Forces of the \\ndarkness*are coming into the play.\') == [\'Forces of the \', \'darkness\', \'are coming into the play.\']\n""""""\n\nimport re\n\ndef multiple_split(string):\n    return re.split(', ""Write a function to split the given string with multiple delimiters by using regex.\n>>> Example: multiple_split('Forces of the \\ndarkness*are coming into the play.') == ['Forces of the ', 'darkness', 'are coming into the play.']\n'''\n\nimport re\ndef multiple_split(string):\n    return re.split('""]"
75,Write a function to find tuples which have all elements divisible by k from the given list of tuples.,"[""assert find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == '[(6, 24, 12)]'"", ""assert find_tuples([(5, 25, 30), (4, 2, 3), (7, 8, 9)], 5) == '[(5, 25, 30)]'"", ""assert find_tuples([(7, 9, 16), (8, 16, 4), (19, 17, 18)], 4) == '[(8, 16, 4)]'""]","Write a function to find tuples which have all elements divisible by k from the given list of tuples.
>>> Example: find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == '[(6, 24, 12)]'","def find_tuples(test_list, K):
  res = [sub for sub in test_list if all(ele % K == 0 for ele in sub)]
  return (str(res)) ","[""Write a function to find tuples which have all elements divisible by k from the given list of tuples.\n>>> Example: find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == '[(6, 24, 12)]'\n>>> Example: find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 7) == '[(7, 9, 6)]'\n>>> Example: find_tuples([(6, 24, 12), (7, 9"", ""Write a function to find tuples which have all elements divisible by k from the given list of tuples.\n>>> Example: find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == '[(6, 24, 12)]'\n>>> Example: find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 7) == '[(7, 9, 6), (12, 18, 21)]'\n>>> Example: find_tuples([(6, 24"", ""Write a function to find tuples which have all elements divisible by k from the given list of tuples.\n>>> Example: find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == '[(6, 24, 12)]'\n>>> Example: find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 5) == '[(6, 24, 12), (7, 9, 6)]'\n>>> Example: find_tuples([(6, 24"", ""Write a function to find tuples which have all elements divisible by k from the given list of tuples.\n>>> Example: find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == '[(6, 24, 12)]'\n>>> Example: find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 8) == '[(6, 24, 12), (7, 9, 6)]'\n>>> Example: find_tuples([(6, 24"", ""Write a function to find tuples which have all elements divisible by k from the given list of tuples.\n>>> Example: find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == '[(6, 24, 12)]'\n>>> Example: find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 8) == '[(6, 24, 12), (7, 9, 6), (12, 18, 21)]'\n>>> Example: find_""]"
77,Write a python function to find the difference between sum of even and odd digits.,"['assert is_Diff (12345) == False', 'assert is_Diff(1212112) == True', 'assert is_Diff(1212) == False']","Write a python function to find the difference between sum of even and odd digits.
>>> Example: is_Diff (12345) == False","def is_Diff(n): 
    return (n % 11 == 0) ","['Write a python function to find the difference between sum of even and odd digits.\n>>> Example: is_Diff (12345) == False\n>>> Example: is_Diff (1234) == True\n>>> Example: is_', 'Write a python function to find the difference between sum of even and odd digits.\n>>> Example: is_Diff (12345) == False\n>>> Example: is_Diff (12345) == True\n>>> Example: is_', 'Write a python function to find the difference between sum of even and odd digits.\n>>> Example: is_Diff (12345) == False\n>>> Example: is_Diff (1234) == False\n>>> Example: is_', 'Write a python function to find the difference between sum of even and odd digits.\n>>> Example: is_Diff (12345) == False\n>>> Example: is_Diff (1234) == True\n""""""\n\ndef is', 'Write a python function to find the difference between sum of even and odd digits.\n>>> Example: is_Diff (12345) == False\n>>> Example: is_Diff (1234) == True\n\n""""""\n\ndef']"
78,Write a python function to find number of integers with odd number of set bits.,"['assert count_With_Odd_SetBits(5) == 3', 'assert count_With_Odd_SetBits(10) == 5', 'assert count_With_Odd_SetBits(15) == 8']","Write a python function to find number of integers with odd number of set bits.
>>> Example: count_With_Odd_SetBits(5) == 3","def count_With_Odd_SetBits(n): 
    if (n % 2 != 0): 
        return (n + 1) / 2
    count = bin(n).count('1') 
    ans = n / 2
    if (count % 2 != 0): 
        ans += 1
    return ans ","['Write a python function to find number of integers with odd number of set bits.\n>>> Example: count_With_Odd_SetBits(5) == 3\n>>> count_With_Odd_SetBits(5) == 2\n>>> count_With_Odd_SetBits(6) == 1\n>>> count_With_Odd_SetBits(7) == 0\n>>> count_With_Odd_SetBits(8) == 1\n>>> count_With_Odd_SetBits(9) == 0\n>>> count_With_Odd_SetBits(10) == 1\n>>> count_With_Odd_SetBits(11) == 0\n>>> count_With_Odd_SetBits(12) == 1\n>>> count_With_Odd_SetBits(13) == 0\n>>> count_With_Odd_Set', 'Write a python function to find number of integers with odd number of set bits.\n>>> Example: count_With_Odd_SetBits(5) == 3\n>>> count_With_Odd_SetBits(5) == 2\n>>> count_With_Odd_SetBits(6) == 1\n>>> count_With_Odd_SetBits(7) == 0\n>>> count_With_Odd_SetBits(8) == 0\n>>> count_With_Odd_SetBits(9) == 1\n>>> count_With_Odd_SetBits(10) == 2\n>>> count_With_Odd_SetBits(11) == 3\n>>> count_With_Odd_SetBits(12) == 4\n>>> count_With_Odd_SetBits(13) == 5\n>>> count_With_Odd_Set', 'Write a python function to find number of integers with odd number of set bits.\n>>> Example: count_With_Odd_SetBits(5) == 3\n>>> count_With_Odd_SetBits(5) == 2\n>>> count_With_Odd_SetBits(6) == 1\n>>> count_With_Odd_SetBits(7) == 0\n>>> count_With_Odd_SetBits(8) == 0\n>>> count_With_Odd_SetBits(9) == 0\n>>> count_With_Odd_SetBits(10) == 1\n>>> count_With_Odd_SetBits(11) == 1\n>>> count_With_Odd_SetBits(12) == 2\n>>> count_With_Odd_SetBits(13) == 2\n>>> count_With_Odd_Set', 'Write a python function to find number of integers with odd number of set bits.\n>>> Example: count_With_Odd_SetBits(5) == 3\n>>> count_With_Odd_SetBits(5) == 2\n>>> count_With_Odd_SetBits(6) == 1\n>>> count_With_Odd_SetBits(7) == 0\n>>> count_With_Odd_SetBits(8) == 0\n>>> count_With_Odd_SetBits(9) == 0\n>>> count_With_Odd_SetBits(10) == 0\n>>> count_With_Odd_SetBits(11) == 1\n>>> count_With_Odd_SetBits(12) == 2\n>>> count_With_Odd_SetBits(13) == 3\n>>> count_With_Odd_Set', 'Write a python function to find number of integers with odd number of set bits.\n>>> Example: count_With_Odd_SetBits(5) == 3\n>>> count_With_Odd_SetBits(5) == 2\n>>> count_With_Odd_SetBits(6) == 1\n>>> count_With_Odd_SetBits(7) == 0\n>>> count_With_Odd_SetBits(8) == 0\n>>> count_With_Odd_SetBits(9) == 0\n>>> count_With_Odd_SetBits(10) == 1\n>>> count_With_Odd_SetBits(11) == 2\n>>> count_With_Odd_SetBits(12) == 3\n>>> count_With_Odd_SetBits(13) == 4\n>>> count_With_Odd_Set']"
79,Write a python function to check whether the length of the word is odd or not.,"['assert word_len(""Hadoop"") == False', 'assert word_len(""great"") == True', 'assert word_len(""structure"") == True']","Write a python function to check whether the length of the word is odd or not.
>>> Example: word_len(""Hadoop"") == False","def word_len(s): 
    s = s.split(' ')   
    for word in s:    
        if len(word)%2!=0: 
            return True  
        else:
          return False","['Write a python function to check whether the length of the word is odd or not.\n>>> Example: word_len(""Hadoop"") == False\n>>> word_len(""Hadoop"") == True\n>>> word_len(""Python"") == False\n>>> word_len(""Python"") == True\n>>> word_len("""") == False\n>>> word_len("" "") == False\n>>> word_len(""h"") == False\n>>> word_len(""h"") == False\n>>> word_len(""H"") == False\n>>> word_len(""H"") == False\n>>> word_len(""a"") == False\n>>> word_len(""a"") == False\n>>> word_len(""A"") == False\n>>> word_len(""A"") == False\n>>> word_', 'Write a python function to check whether the length of the word is odd or not.\n>>> Example: word_len(""Hadoop"") == False\n>>> word_len(""Hadoop"") == True\n>>> word_len(""Python"") == False\n>>> word_len(""Python"") == True\n>>> word_len("""") == False\n>>> word_len("" "") == False\n>>> word_len(""h"") == False\n>>> word_len(""h"") == False\n>>> word_len(""H"") == False\n>>> word_len(""H"") == False\n>>> word_len(""a"") == False\n>>> word_len(""a"") == False\n>>> word_len("""") == False\n>>> word_len("" "") == False\n>>> word_len', 'Write a python function to check whether the length of the word is odd or not.\n>>> Example: word_len(""Hadoop"") == False\n>>> word_len(""Hadoop"") == True\n>>> word_len(""Python"") == False\n>>> word_len(""Python"") == True\n>>> word_len("""") == False\n>>> word_len("" "") == False\n>>> word_len(""h"") == False\n>>> word_len(""h"") == False\n>>> word_len(""H"") == False\n>>> word_len(""H"") == False\n>>> word_len(""a"") == False\n>>> word_len(""a"") == False\n>>> word_len(""A"") == True\n>>> word_len(""A"") == True\n>>> word_', 'Write a python function to check whether the length of the word is odd or not.\n>>> Example: word_len(""Hadoop"") == False\n>>> word_len(""Hadoop"") == True\n>>> word_len(""Python"") == False\n>>> word_len(""Python"") == True\n>>> word_len("""") == False\n>>> word_len("" "") == False\n>>> word_len(""h"") == False\n>>> word_len(""h"") == False\n>>> word_len(""H"") == False\n>>> word_len(""H"") == False\n>>> word_len(""a"") == False\n>>> word_len(""a"") == False\n>>> word_len(""aa"") == False\n>>> word_len(""aa"") == False\n>>> word_', 'Write a python function to check whether the length of the word is odd or not.\n>>> Example: word_len(""Hadoop"") == False\n>>> word_len(""Hadoop"") == True\n>>> word_len(""Python"") == False\n>>> word_len(""Python"") == True\n>>> word_len("""") == False\n>>> word_len("" "") == False\n>>> word_len(""h"") == False\n>>> word_len(""h"") == False\n>>> word_len(""H"") == False\n>>> word_len(""H"") == False\n>>> word_len(""a"") == False\n>>> word_len(""a"") == False\n>>> word_len(""A"") == False\n>>> word_len(""A"") == True\n>>> word_']"
80,Write a function to find the nth tetrahedral number.,"['assert tetrahedral_number(5) == 35.0', 'assert tetrahedral_number(6) == 56.0', 'assert tetrahedral_number(7) == 84.0']","Write a function to find the nth tetrahedral number.
>>> Example: tetrahedral_number(5) == 35.0","def tetrahedral_number(n): 
	return (n * (n + 1) * (n + 2)) / 6","['Write a function to find the nth tetrahedral number.\n>>> Example: tetrahedral_number(5) == 35.0\n""""""\n\n\ndef tetrahedral_number(n):\n    """"""\n    >>> tetrahedral_number(5)\n    35.0\n    >>> tetrahedral_number', 'Write a function to find the nth tetrahedral number.\n>>> Example: tetrahedral_number(5) == 35.0\n""""""\n\n\ndef tetrahedral_number(n):\n    """"""\n    >>> tetrahedral_number(1)\n    1\n    >>> tetrahedral_number(2', 'Write a function to find the nth tetrahedral number.\n>>> Example: tetrahedral_number(5) == 35.0\n""""""\n\n\ndef tetrahedral_number(n):\n    """"""\n    >>> tetrahedral_number(5) == 35.0\n    True\n    """"""\n    return', 'Write a function to find the nth tetrahedral number.\n>>> Example: tetrahedral_number(5) == 35.0\n""""""\n\n\ndef tetrahedral_number(n):\n    """"""\n    >>> tetrahedral_number(1)\n    1\n    >>> tetrahedral_number(5', 'Write a function to find the nth tetrahedral number.\n>>> Example: tetrahedral_number(5) == 35.0\n""""""\n\n\ndef tetrahedral_number(n):\n    """"""\n    >>> tetrahedral_number(5) == 35.0\n    True\n    """"""\n    if']"
81,Write a function to zip the two given tuples.,"['assert zip_tuples((7, 8, 4, 5, 9, 10),(1, 5, 6) ) == [(7, 1), (8, 5), (4, 6), (5, 1), (9, 5), (10, 6)]', 'assert zip_tuples((8, 9, 5, 6, 10, 11),(2, 6, 7) ) == [(8, 2), (9, 6), (5, 7), (6, 2), (10, 6), (11, 7)]', 'assert zip_tuples((9, 10, 6, 7, 11, 12),(3, 7, 8) ) == [(9, 3), (10, 7), (6, 8), (7, 3), (11, 7), (12, 8)]']","Write a function to zip the two given tuples.
>>> Example: zip_tuples((7, 8, 4, 5, 9, 10),(1, 5, 6) ) == [(7, 1), (8, 5), (4, 6), (5, 1), (9, 5), (10, 6)]","def zip_tuples(test_tup1, test_tup2):
  res = []
  for i, j in enumerate(test_tup1):
    res.append((j, test_tup2[i % len(test_tup2)])) 
  return (res) ","['Write a function to zip the two given tuples.\n>>> Example: zip_tuples((7, 8, 4, 5, 9, 10),(1, 5, 6) ) == [(7, 1), (8, 5), (4, 6), (5, 1), (9, 5), (10, 6)]', 'Write a function to zip the two given tuples.\n>>> Example: zip_tuples((7, 8, 4, 5, 9, 10),(1, 5, 6) ) == [(7, 1), (8, 5), (4, 6), (5, 1), (9, 5), (10, 6)]\n>>> zip_tuples((7, 8, 4, 5, 9, 10),(1, 5, 6))\n[(7, 1), (8, 5), (4, 6), (5, 1), (9, 5), (10, 6)]\n""""""\n\ndef zip_tuples(tuple1, tuple2):\n    return list(zip(tuple1, tuple2))\n', ""Write a function to zip the two given tuples.\n>>> Example: zip_tuples((7, 8, 4, 5, 9, 10),(1, 5, 6) ) == [(7, 1), (8, 5), (4, 6), (5, 1), (9, 5), (10, 6)]\n>>> zip_tuples((7, 8, 4, 5, 9, 10),(1, 5, 6))\n[(7, 1), (8, 5), (4, 6), (5, 1), (9, 5), (10, 6)]\n'''\n\ndef zip_tuples(tuple1, tuple2):\n    return list(zip(tuple1, tuple2))"", 'Write a function to zip the two given tuples.\n>>> Example: zip_tuples((7, 8, 4, 5, 9, 10),(1, 5, 6) ) == [(7, 1), (8, 5), (4, 6), (5, 1), (9, 5), (10, 6)]\n>>> zip_tuples((7, 8, 4, 5, 9, 10),(1, 5, 6))\n[(7, 1), (8, 5), (4, 6), (5, 1), (9, 5), (10, 6)]\n\n""""""\n\ndef zip_tuples(tuple1, tuple2):\n    return list(zip(tuple1, tuple2))', 'Write a function to zip the two given tuples.\n>>> Example: zip_tuples((7, 8, 4, 5, 9, 10),(1, 5, 6) ) == [(7, 1), (8, 5), (4, 6), (5, 1), (9, 5), (10, 6)]\n>>> zip_tuples((7, 8, 4, 5, 9, 10),(1, 5, 6))\n[(7, 1), (8, 5), (4, 6), (5, 1), (9, 5), (10, 6)]\n""""""\n\ndef zip_tuples(tuple1, tuple2):\n    return list(zip(tuple1, tuple2))\n\n']"
82,Write a function to find the volume of a sphere.,"['assert volume_sphere(10)==4188.790204786391', 'assert volume_sphere(25)==65449.84694978735', 'assert volume_sphere(20)==33510.32163829113']","Write a function to find the volume of a sphere.
>>> Example: volume_sphere(10)==4188.790204786391","import math
def volume_sphere(r):
  volume=(4/3)*math.pi*r*r*r
  return volume","['Write a function to find the volume of a sphere.\n>>> Example: volume_sphere(10)==4188.790204786391\n""""""\n\nimport math\n\ndef volume_sphere(radius):\n    volume = (4/3)*math.pi*radius**3\n    return volume\n\nprint(volume_sphere(10))\n', 'Write a function to find the volume of a sphere.\n>>> Example: volume_sphere(10)==4188.790204786391\n""""""\n\nimport math\n\ndef volume_sphere(radius):\n    return (4/3)*math.pi*radius**3\n\nprint(volume_sphere(10))\n', 'Write a function to find the volume of a sphere.\n>>> Example: volume_sphere(10)==4188.790204786391\n""""""\n\nimport math\n\ndef volume_sphere(radius):\n    volume = (4/3)*math.pi*radius**3\n    return volume\n\nprint(volume_sphere(10))', 'Write a function to find the volume of a sphere.\n>>> Example: volume_sphere(10)==4188.790204786391\n""""""\n\nimport math\n\ndef volume_sphere(radius):\n    return (4/3) * math.pi * radius**3\n\nprint(volume_sphere(10))\n', 'Write a function to find the volume of a sphere.\n>>> Example: volume_sphere(10)==4188.790204786391\n""""""\n\nimport math\n\ndef volume_sphere(radius):\n    return (4/3)*math.pi*radius**3\n\nprint(volume_sphere(10))']"
84,Write a function to find the n-th number in newman conway sequence.,"['assert sequence(10) == 6', 'assert sequence(2) == 1', 'assert sequence(3) == 2']","Write a function to find the n-th number in newman conway sequence.
>>> Example: sequence(10) == 6","def sequence(n): 
	if n == 1 or n == 2: 
		return 1
	else: 
		return sequence(sequence(n-1)) + sequence(n-sequence(n-1))","['Write a function to find the n-th number in newman conway sequence.\n>>> Example: sequence(10) == 6\n""""""\n\ndef sequence(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return sequence(n-1) + sequence(n-2)\n\nprint(sequence(10))\n', 'Write a function to find the n-th number in newman conway sequence.\n>>> Example: sequence(10) == 6\n""""""\n\ndef sequence(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return sequence(n-1) + sequence(n-2)\n\nprint(sequence(10))\n', 'Write a function to find the n-th number in newman conway sequence.\n>>> Example: sequence(10) == 6\n""""""\n\ndef sequence(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return sequence(n-1) + sequence(n-2)\n\nprint(sequence(10))', 'Write a function to find the n-th number in newman conway sequence.\n>>> Example: sequence(10) == 6\n""""""\n\ndef sequence(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return sequence(n-1) + sequence(n-2)\n\nprint(sequence(10))', 'Write a function to find the n-th number in newman conway sequence.\n>>> Example: sequence(10) == 6\n""""""\n\ndef sequence(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return sequence(n - 1) + sequence(n - 2)\n\nprint(sequence(10))\n']"
85,Write a function to find the surface area of a sphere.,"['assert surfacearea_sphere(10)==1256.6370614359173', 'assert surfacearea_sphere(15)==2827.4333882308138', 'assert surfacearea_sphere(20)==5026.548245743669']","Write a function to find the surface area of a sphere.
>>> Example: surfacearea_sphere(10)==1256.6370614359173","import math
def surfacearea_sphere(r):
  surfacearea=4*math.pi*r*r
  return surfacearea","['Write a function to find the surface area of a sphere.\n>>> Example: surfacearea_sphere(10)==1256.6370614359173\n""""""\n\nimport math\n\ndef surfacearea_sphere(radius):\n    """"""\n    >>> surfacearea_sphere(10)\n    1256.6370614359173\n    """"""\n    return 4 * math.pi * radius ** 2\n\nif __name__', 'Write a function to find the surface area of a sphere.\n>>> Example: surfacearea_sphere(10)==1256.6370614359173\n""""""\n\nimport math\n\ndef surfacearea_sphere(radius):\n    """"""\n    >>> surfacearea_sphere(10)\n    1256.6370614359173\n    """"""\n    return 4 * math.pi * radius**2\n\nif __name__', 'Write a function to find the surface area of a sphere.\n>>> Example: surfacearea_sphere(10)==1256.6370614359173\n""""""\n\nimport math\n\ndef surfacearea_sphere(radius):\n    """"""\n    >>> surfacearea_sphere(10)==1256.6370614359173\n    True\n    """"""\n    return 4*math.pi*radius**2\n\nif __', 'Write a function to find the surface area of a sphere.\n>>> Example: surfacearea_sphere(10)==1256.6370614359173\n""""""\n\nimport math\n\ndef surfacearea_sphere(radius):\n    """"""\n    >>> surfacearea_sphere(10)==1256.6370614359173\n    True\n    """"""\n    return 4 * math.pi * radius ** 2\n\nif __', 'Write a function to find the surface area of a sphere.\n>>> Example: surfacearea_sphere(10)==1256.6370614359173\n""""""\n\nimport math\n\ndef surfacearea_sphere(radius):\n    """"""\n    >>> surfacearea_sphere(10)==1256.6370614359173\n    True\n    """"""\n    return 4 * math.pi * radius**2\n\nif __']"
86,Write a function to find nth centered hexagonal number.,"['assert centered_hexagonal_number(10) == 271', 'assert centered_hexagonal_number(2) == 7', 'assert centered_hexagonal_number(9) == 217']","Write a function to find nth centered hexagonal number.
>>> Example: centered_hexagonal_number(10) == 271","def centered_hexagonal_number(n):
  return 3 * n * (n - 1) + 1","['Write a function to find nth centered hexagonal number.\n>>> Example: centered_hexagonal_number(10) == 271\n""""""\n\n\ndef centered_hexagonal_number(n):\n    """"""\n    >>> centered_hexagonal_number(10)\n    271\n    >>> centered_hexagonal_number', 'Write a function to find nth centered hexagonal number.\n>>> Example: centered_hexagonal_number(10) == 271\n""""""\n\n\ndef centered_hexagonal_number(n):\n    """"""\n    >>> centered_hexagonal_number(10) == 271\n    True\n    >>> centered_hexagonal', 'Write a function to find nth centered hexagonal number.\n>>> Example: centered_hexagonal_number(10) == 271\n""""""\n\n\ndef centered_hexagonal_number(n):\n    """"""\n    >>> centered_hexagonal_number(10) == 271\n    True\n    """"""\n    return int', 'Write a function to find nth centered hexagonal number.\n>>> Example: centered_hexagonal_number(10) == 271\n""""""\n\n\ndef centered_hexagonal_number(n):\n    """"""\n    >>> centered_hexagonal_number(10) == 271\n    True\n    """"""\n    return n', 'Write a function to find nth centered hexagonal number.\n>>> Example: centered_hexagonal_number(10) == 271\n""""""\n\n\ndef centered_hexagonal_number(n):\n    """"""\n    >>> centered_hexagonal_number(10) == 271\n    True\n    """"""\n    return (']"
87,Write a function to merge three dictionaries into a single expression.,"['assert merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White"" },{ ""O"": ""Orange"", ""W"": ""White"", ""B"": ""Black"" })=={\'B\': \'Black\', \'R\': \'Red\', \'P\': \'Pink\', \'G\': \'Green\', \'W\': \'White\', \'O\': \'Orange\'}', 'assert merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White"" },{""L"":""lavender"",""B"":""Blue""})=={\'W\': \'White\', \'P\': \'Pink\', \'B\': \'Black\', \'R\': \'Red\', \'G\': \'Green\', \'L\': \'lavender\'}', 'assert merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" },{""L"":""lavender"",""B"":""Blue""},{ ""G"": ""Green"", ""W"": ""White"" })=={\'B\': \'Black\', \'P\': \'Pink\', \'R\': \'Red\', \'G\': \'Green\', \'L\': \'lavender\', \'W\': \'White\'}']","Write a function to merge three dictionaries into a single expression.
>>> Example: merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White"" },{ ""O"": ""Orange"", ""W"": ""White"", ""B"": ""Black"" })=={'B': 'Black', 'R': 'Red', 'P': 'Pink', 'G': 'Green', 'W': 'White', 'O': 'Orange'}","import collections as ct
def merge_dictionaries_three(dict1,dict2, dict3):
    merged_dict = dict(ct.ChainMap({},dict1,dict2,dict3))
    return merged_dict","['Write a function to merge three dictionaries into a single expression.\n>>> Example: merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White"" },{ ""O"": ""Orange"", ""W"": ""White"", ""B"": ""Black"" })=={\'B\': \'Black\', \'R\': \'Red\', \'P\': \'Pink\', \'G\': \'Green\', \'W\': \'White\', \'O\': \'Orange\'}\n>>> Example: merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White"" },{', 'Write a function to merge three dictionaries into a single expression.\n>>> Example: merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White"" },{ ""O"": ""Orange"", ""W"": ""White"", ""B"": ""Black"" })=={\'B\': \'Black\', \'R\': \'Red\', \'P\': \'Pink\', \'G\': \'Green\', \'W\': \'White\', \'O\': \'Orange\'}\nTrue\n>>> Example: merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White""', 'Write a function to merge three dictionaries into a single expression.\n>>> Example: merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White"" },{ ""O"": ""Orange"", ""W"": ""White"", ""B"": ""Black"" })=={\'B\': \'Black\', \'R\': \'Red\', \'P\': \'Pink\', \'G\': \'Green\', \'W\': \'White\', \'O\': \'Orange\'}\n', 'Write a function to merge three dictionaries into a single expression.\n>>> Example: merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White"" },{ ""O"": ""Orange"", ""W"": ""White"", ""B"": ""Black"" })=={\'B\': \'Black\', \'R\': \'Red\', \'P\': \'Pink\', \'G\': \'Green\', \'W\': \'White\', \'O\': \'Orange\'}\nTrue\n>>> Example: merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White"",', 'Write a function to merge three dictionaries into a single expression.\n>>> Example: merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White"" },{ ""O"": ""Orange"", ""W"": ""White"", ""B"": ""Black"" })=={\'B\': \'Black\', \'R\': \'Red\', \'P\': \'Pink\', \'G\': \'Green\', \'W\': \'White\', \'O\': \'Orange\'}\n>>> Example: merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" },{ ""G"": ""Green"", ""W"": ""White"" },{']"
88,Write a function to get the frequency of the elements in a list.,"['assert freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1}) ', 'assert freq_count([1,2,3,4,3,2,4,1,3,1,4])==({1:3, 2:2,3:3,4:3}) ', 'assert freq_count([5,6,7,4,9,10,4,5,6,7,9,5])==({10:1,5:3,6:2,7:2,4:2,9:2}) ']","Write a function to get the frequency of the elements in a list.
>>> Example: freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1}) ","import collections
def freq_count(list1):
  freq_count= collections.Counter(list1)
  return freq_count","['Write a function to get the frequency of the elements in a list.\n>>> Example: freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1}) ', 'Write a function to get the frequency of the elements in a list.\n>>> Example: freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1}) \n""""""\n\ndef freq_count(lst):\n    freq = {}\n    for i in lst:\n        if i in freq:\n            fre', ""Write a function to get the frequency of the elements in a list.\n>>> Example: freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1}) \n'''\n\ndef freq_count(lst):\n    freq = {}\n    for i in lst:\n        if i in freq:\n            "", 'Write a function to get the frequency of the elements in a list.\n>>> Example: freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1}) \n""""""\ndef freq_count(lst):\n    freq = {}\n    for i in lst:\n        if i in freq:\n            freq', ""Write a function to get the frequency of the elements in a list.\n>>> Example: freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1}) \n\n'''\n\ndef freq_count(lst):\n    freq = {}\n    for i in lst:\n        if i in freq:\n""]"
89,Write a function to find the closest smaller number than n.,"['assert closest_num(11) == 10', 'assert closest_num(7) == 6', 'assert closest_num(12) == 11']","Write a function to find the closest smaller number than n.
>>> Example: closest_num(11) == 10","def closest_num(N):
  return (N - 1)","['Write a function to find the closest smaller number than n.\n>>> Example: closest_num(11) == 10\n>>> closest_num(12) == 11\n>>> closest_num(13)', 'Write a function to find the closest smaller number than n.\n>>> Example: closest_num(11) == 10\n>>> closest_num(10) == 9\n>>> closest_num(20)', 'Write a function to find the closest smaller number than n.\n>>> Example: closest_num(11) == 10\n>>> closest_num(12) == 11\n>>> closest_num(1)', 'Write a function to find the closest smaller number than n.\n>>> Example: closest_num(11) == 10\n>>> closest_num(10) == 9\n>>> closest_num(1)', 'Write a function to find the closest smaller number than n.\n>>> Example: closest_num(11) == 10\n>>> closest_num(12) == 11\n>>> closest_num(20)']"
90,Write a python function to find the length of the longest word.,"['assert len_log([""python"",""PHP"",""bigdata""]) == 7', 'assert len_log([""a"",""ab"",""abc""]) == 3', 'assert len_log([""small"",""big"",""tall""]) == 5']","Write a python function to find the length of the longest word.
>>> Example: len_log([""python"",""PHP"",""bigdata""]) == 7","def len_log(list1):
    max=len(list1[0])
    for i in list1:
        if len(i)>max:
            max=len(i)
    return max","['Write a python function to find the length of the longest word.\n>>> Example: len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""', 'Write a python function to find the length of the longest word.\n>>> Example: len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""Python"",""', 'Write a python function to find the length of the longest word.\n>>> Example: len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([]) == 0', 'Write a python function to find the length of the longest word.\n>>> Example: len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n""""""\n\ndef len_log(', 'Write a python function to find the length of the longest word.\n>>> Example: len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python"",""PHP"",""bigdata""]) == 7\n>>> len_log([""python""]']"
91,Write a function to check if a substring is present in a given list of string values.,"['assert find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""ack"")==True', 'assert find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""abc"")==False', 'assert find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""ange"")==True']","Write a function to check if a substring is present in a given list of string values.
>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""ack"")==True","def find_substring(str1, sub_str):
   if any(sub_str in s for s in str1):
       return True
   return False","['Write a function to check if a substring is present in a given list of string values.\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""ack"")==True\n>>> find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""red"")==True\n>>> find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""black"")==True\n>>> find_substring([""red"", ""black"", ""white"", ""', 'Write a function to check if a substring is present in a given list of string values.\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""ack"")==True\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""red"")==True\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""black"")==True\n>>> Example: find_substring([""red"", ""', 'Write a function to check if a substring is present in a given list of string values.\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""ack"")==True\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""red"")==True\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""blue"")==False\n>>> Example: find_substring([""red"", ""', 'Write a function to check if a substring is present in a given list of string values.\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""ack"")==True\nTrue\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""are"")==True\nTrue\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""c"")==True\nTrue\n>>> Example: find_sub', 'Write a function to check if a substring is present in a given list of string values.\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""ack"")==True\nTrue\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""are"")==True\nTrue\n>>> Example: find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""c"")==False\nTrue\n>>> Example: find_sub']"
92,Write a function to check whether the given number is undulating or not.,"['assert is_undulating(""1212121"") == True', 'assert is_undulating(""1991"") == False', 'assert is_undulating(""121"") == True']","Write a function to check whether the given number is undulating or not.
>>> Example: is_undulating(""1212121"") == True","def is_undulating(n): 
	if (len(n) <= 2): 
		return False
	for i in range(2, len(n)): 
		if (n[i - 2] != n[i]): 
			return False
	return True","['Write a function to check whether the given number is undulating or not.\n>>> Example: is_undulating(""1212121"") == True\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>>', 'Write a function to check whether the given number is undulating or not.\n>>> Example: is_undulating(""1212121"") == True\n>>> Example: is_undulating(""1212122"") == False\n>>> Example: is_undulating(""1212123"") == False\n>>> Example: is_undulating(""1212124"") == False\n>>> Example: is_undulating(""1212125"") == False\n>>> Example: is_undulating(""1212126"") == False\n>>> Example: is_undulating(""1212127"") == False\n>>> Example: is_undulating(""1212128"") == False\n>>> Example: is_undulating(""1212129"") == False\n>>>', 'Write a function to check whether the given number is undulating or not.\n>>> Example: is_undulating(""1212121"") == True\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == True\n>>>', 'Write a function to check whether the given number is undulating or not.\n>>> Example: is_undulating(""1212121"") == True\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n""""""', 'Write a function to check whether the given number is undulating or not.\n>>> Example: is_undulating(""1212121"") == True\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n>>> Example: is_undulating(""1212121"") == False\n\n']"
93,Write a function to calculate the value of 'a' to the power 'b'.,"['assert power(3,4) == 81', 'assert power(2,3) == 8', 'assert power(5,5) == 3125']","Write a function to calculate the value of 'a' to the power 'b'.
>>> Example: power(3,4) == 81","def power(a,b):
	if b==0:
		return 1
	elif a==0:
		return 0
	elif b==1:
		return a
	else:
		return a*power(a,b-1)","[""Write a function to calculate the value of 'a' to the power 'b'.\n>>> Example: power(3,4) == 81\n'''\n\ndef power(a,b):\n    if b==0:\n        return 1\n    else:\n        return a*power(a,b-1)\n\nprint(power(3,4))\n"", ""Write a function to calculate the value of 'a' to the power 'b'.\n>>> Example: power(3,4) == 81\n'''\n\ndef power(a,b):\n    if b == 0:\n        return 1\n    else:\n        return a*power(a,b-1)\n\nprint(power(3,4))\n"", ""Write a function to calculate the value of 'a' to the power 'b'.\n>>> Example: power(3,4) == 81\n'''\n\ndef power(a,b):\n    if b==0:\n        return 1\n    else:\n        return a*power(a,b-1)\n\nprint(power(3,4))"", ""Write a function to calculate the value of 'a' to the power 'b'.\n>>> Example: power(3,4) == 81\n'''\n\ndef power(a,b):\n    if b == 0:\n        return 1\n    else:\n        return a*power(a,b-1)\n\nprint(power(3,4))"", ""Write a function to calculate the value of 'a' to the power 'b'.\n>>> Example: power(3,4) == 81\n'''\n\ndef power(a,b):\n    if b == 0:\n        return 1\n    else:\n        return a * power(a,b-1)\n\nprint(power(3,4))\n""]"
94,Write a function to extract the index minimum value record from the given tuples.,"[""assert index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'"", ""assert index_minimum([('Yash', 185), ('Dawood', 125), ('Sanya', 175)]) == 'Dawood'"", ""assert index_minimum([('Sai', 345), ('Salman', 145), ('Ayesha', 96)]) == 'Ayesha'""]","Write a function to extract the index minimum value record from the given tuples.
>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'","from operator import itemgetter 
def index_minimum(test_list):
  res = min(test_list, key = itemgetter(1))[0]
  return (res) ","[""Write a function to extract the index minimum value record from the given tuples.\n>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'\n>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'\n>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'\n>>> Example: index_minimum([('Rash',"", ""Write a function to extract the index minimum value record from the given tuples.\n>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'\n>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Manjeet'\n>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Manjeet'\n>>> Example: index_minimum([('Rash',"", ""Write a function to extract the index minimum value record from the given tuples.\n>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'\n>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Manjeet'\n>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'\n>>> Example: index_minimum([('Rash',"", ""Write a function to extract the index minimum value record from the given tuples.\n>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'\n>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Manjeet'\n>>> Example: index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Rash'\n>>> Example: index_minimum([('Rash', 143"", 'Write a function to extract the index minimum value record from the given tuples.\n>>> Example: index_minimum([(\'Rash\', 143), (\'Manjeet\', 200), (\'Varsha\', 100)]) == \'Varsha\'\n>>> Example: index_minimum([(\'Rash\', 143), (\'Manjeet\', 200), (\'Varsha\', 100)]) == \'Varsha\'\n>>> Example: index_minimum([(\'Rash\', 143), (\'Manjeet\', 200), (\'Varsha\', 100)]) == \'Varsha\'\n""""""\n\ndef index_minimum(lst):']"
95,Write a python function to find the minimum length of sublist.,"['assert Find_Min_Length([[1],[1,2]]) == 1', 'assert Find_Min_Length([[1,2],[1,2,3],[1,2,3,4]]) == 2', 'assert Find_Min_Length([[3,3,3],[4,4,4,4]]) == 3']","Write a python function to find the minimum length of sublist.
>>> Example: Find_Min_Length([[1],[1,2]]) == 1","def Find_Min_Length(lst):  
    minLength = min(len(x) for x in lst )
    return minLength ","['Write a python function to find the minimum length of sublist.\n>>> Example: Find_Min_Length([[1],[1,2]]) == 1\n>>> Example: Find_Min_Length([[1],[1,2],[1,2,3]]) == 1\n>>> Example: Find_Min_Length([[1],[1,2],[1,2,3],[1,2,3,4]]) == 1\n>>> Example: Find', 'Write a python function to find the minimum length of sublist.\n>>> Example: Find_Min_Length([[1],[1,2]]) == 1\n>>> Example: Find_Min_Length([[1],[1,2],[1,2,3]]) == 1\n>>> Example: Find_Min_Length([[1],[1,2],[1,2,3],[1,2,3,4]]) == 2\n>>> Example: Find', 'Write a python function to find the minimum length of sublist.\n>>> Example: Find_Min_Length([[1],[1,2]]) == 1\n>>> Example: Find_Min_Length([[1],[1,2],[1,2,3]]) == 2\n>>> Example: Find_Min_Length([[1],[1,2],[1,2,3],[1,2,3,4]]) == 3\n>>> Example: Find', 'Write a python function to find the minimum length of sublist.\n>>> Example: Find_Min_Length([[1],[1,2]]) == 1\n>>> Example: Find_Min_Length([[1],[1,2],[1,2,3]]) == 2\n>>> Example: Find_Min_Length([[1],[1,2],[1,2,3],[1,2,3,4]]) == 2\n>>> Example: Find', 'Write a python function to find the minimum length of sublist.\n>>> Example: Find_Min_Length([[1],[1,2]]) == 1\n>>> Example: Find_Min_Length([[1],[1,2],[1,2,3]]) == 2\n>>> Example: Find_Min_Length([[1],[1,2],[1,2,3],[1,2,3,4]]) == 4\n>>> Example: Find']"
96,Write a python function to find the number of divisors of a given integer.,"['assert divisor(15) == 4 ', 'assert divisor(12) == 6', 'assert divisor(9) == 3']","Write a python function to find the number of divisors of a given integer.
>>> Example: divisor(15) == 4 ","def divisor(n):
  for i in range(n):
    x = len([i for i in range(1,n+1) if not n % i])
  return x","['Write a python function to find the number of divisors of a given integer.\n>>> Example: divisor(15) == 4 \n""""""\n\ndef divisor(n):\n    count = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            count += 1\n    return count\n\nif __name__ == \'__main__\':\n    n = int(input())\n    print(divisor(n))', 'Write a python function to find the number of divisors of a given integer.\n>>> Example: divisor(15) == 4 \n""""""\n\ndef divisor(n):\n    count = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            count += 1\n    return count\n\nif __name__ == ""__main__"":\n    n = int(input())\n    print(divisor(n))', 'Write a python function to find the number of divisors of a given integer.\n>>> Example: divisor(15) == 4 \n""""""\n\ndef divisor(n):\n    count = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            count += 1\n    return count\n\nif __name__ == ""__main__"":\n    import doctest\n    doctest.testmod()\n', 'Write a python function to find the number of divisors of a given integer.\n>>> Example: divisor(15) == 4 \n""""""\n\ndef divisor(n):\n    count = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            count += 1\n    return count\n\nif __name__ == ""__main__"":\n    import doctest\n    doctest.testmod(verbose=True', 'Write a python function to find the number of divisors of a given integer.\n>>> Example: divisor(15) == 4 \n""""""\n\ndef divisor(n):\n    count = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            count += 1\n    return count\n\nprint(divisor(15))\n']"
98,Write a function to multiply all the numbers in a list and divide with the length of the list.,"['assert multiply_num((8, 2, 3, -1, 7))==-67.2', 'assert multiply_num((-10,-20,-30))==-2000.0', 'assert multiply_num((19,15,18))==1710.0']","Write a function to multiply all the numbers in a list and divide with the length of the list.
>>> Example: multiply_num((8, 2, 3, -1, 7))==-67.2","def multiply_num(numbers):  
    total = 1
    for x in numbers:
        total *= x  
    return total/len(numbers) ","['Write a function to multiply all the numbers in a list and divide with the length of the list.\n>>> Example: multiply_num((8, 2, 3, -1, 7))==-67.2\n""""""\n\n\ndef multiply_num(nums):\n    result = 1\n    for num in nums:\n        result *= num\n    return result / len(nums)\n\n\nprint(multiply_num((8, 2, 3, -1, 7)))\n', 'Write a function to multiply all the numbers in a list and divide with the length of the list.\n>>> Example: multiply_num((8, 2, 3, -1, 7))==-67.2\n""""""\n\n\ndef multiply_num(numbers):\n    result = 1\n    for number in numbers:\n        result *= number\n    return result / len(numbers)\n\n\nprint(multiply_num((8, 2, 3, -1, 7)))\n', 'Write a function to multiply all the numbers in a list and divide with the length of the list.\n>>> Example: multiply_num((8, 2, 3, -1, 7))==-67.2\n""""""\n\n\ndef multiply_num(numbers):\n    result = 1\n    for num in numbers:\n        result *= num\n    return result / len(numbers)\n\n\nprint(multiply_num((8, 2, 3, -1, 7)))\n', 'Write a function to multiply all the numbers in a list and divide with the length of the list.\n>>> Example: multiply_num((8, 2, 3, -1, 7))==-67.2\n""""""\n\n\ndef multiply_num(nums):\n    result = 1\n    for i in nums:\n        result *= i\n    return result / len(nums)\n\n\nprint(multiply_num((8, 2, 3, -1, 7)))\n', 'Write a function to multiply all the numbers in a list and divide with the length of the list.\n>>> Example: multiply_num((8, 2, 3, -1, 7))==-67.2\n""""""\n\n\ndef multiply_num(nums):\n    result = 1\n    for num in nums:\n        result *= num\n    return result / len(nums)\n\n\nprint(multiply_num([8, 2, 3, -1, 7]))\n']"
99,Write a function to convert the given decimal number to its binary equivalent.,"[""assert decimal_to_binary(8) == '1000'"", ""assert decimal_to_binary(18) == '10010'"", ""assert decimal_to_binary(7) == '111' ""]","Write a function to convert the given decimal number to its binary equivalent.
>>> Example: decimal_to_binary(8) == '1000'","def decimal_to_binary(n): 
    return bin(n).replace(""0b"","""") ","[""Write a function to convert the given decimal number to its binary equivalent.\n>>> Example: decimal_to_binary(8) == '1000'\n>>> Example: decimal_to_binary(10) == '1010'\n>>> Example: decimal_to_binary(15) == '1111'\n>>> Example: decimal"", ""Write a function to convert the given decimal number to its binary equivalent.\n>>> Example: decimal_to_binary(8) == '1000'\n>>> Example: decimal_to_binary(10) == '1010'\n>>> Example: decimal_to_binary(12) == '1100'\n>>> Example: decimal"", ""Write a function to convert the given decimal number to its binary equivalent.\n>>> Example: decimal_to_binary(8) == '1000'\n>>> Example: decimal_to_binary(10) == '1010'\n>>> Example: decimal_to_binary(5) == '101'\n>>> Example: decimal"", 'Write a function to convert the given decimal number to its binary equivalent.\n>>> Example: decimal_to_binary(8) == \'1000\'\n>>> Example: decimal_to_binary(10) == \'1010\'\n>>> Example: decimal_to_binary(15) == \'1111\'\n""""""\n\n\ndef', 'Write a function to convert the given decimal number to its binary equivalent.\n>>> Example: decimal_to_binary(8) == \'1000\'\n>>> Example: decimal_to_binary(10) == \'1010\'\n>>> Example: decimal_to_binary(15) == \'1111\'\n""""""\n\ndef']"
100,Write a function to find the next smallest palindrome of a specified number.,"['assert next_smallest_palindrome(99)==101', 'assert next_smallest_palindrome(1221)==1331', 'assert next_smallest_palindrome(120)==121']","Write a function to find the next smallest palindrome of a specified number.
>>> Example: next_smallest_palindrome(99)==101","import sys
def next_smallest_palindrome(num):
    numstr = str(num)
    for i in range(num+1,sys.maxsize):
        if str(i) == str(i)[::-1]:
            return i","['Write a function to find the next smallest palindrome of a specified number.\n>>> Example: next_smallest_palindrome(99)==101\n\n""""""\n\ndef next_smallest_palindrome(n):\n    n = n + 1\n    while not is_palindrome(n):\n        n = n + 1\n    return n\n\ndef is_palindrome(n):\n    return str(n) == str(n)[::-1]\n\nprint(next_smallest_palindrome(99))\n', 'Write a function to find the next smallest palindrome of a specified number.\n>>> Example: next_smallest_palindrome(99)==101\n\n""""""\n\ndef next_smallest_palindrome(n):\n    n = n + 1\n    while not is_palindrome(n):\n        n = n + 1\n    return n\n\ndef is_palindrome(n):\n    return str(n) == str(n)[::-1]\n\nprint(next_smallest_palindrome(99))', 'Write a function to find the next smallest palindrome of a specified number.\n>>> Example: next_smallest_palindrome(99)==101\n\n""""""\n\ndef next_smallest_palindrome(n):\n    n = n + 1\n    while not is_palindrome(n):\n        n += 1\n    return n\n\ndef is_palindrome(n):\n    return str(n) == str(n)[::-1]\n\nprint(next_smallest_palindrome(99))\n', 'Write a function to find the next smallest palindrome of a specified number.\n>>> Example: next_smallest_palindrome(99)==101\n\n""""""\n\ndef next_smallest_palindrome(n):\n    n = n + 1\n    while not is_palindrome(n):\n        n += 1\n    return n\n\ndef is_palindrome(n):\n    return str(n) == str(n)[::-1]\n\nprint(next_smallest_palindrome(99))', 'Write a function to find the next smallest palindrome of a specified number.\n>>> Example: next_smallest_palindrome(99)==101\n\n""""""\n\ndef next_smallest_palindrome(n):\n    n = n + 1\n    while not is_palindrome(n):\n        n = n + 1\n    return n\n\n\ndef is_palindrome(n):\n    return str(n) == str(n)[::-1]\n\n\nprint(next_smallest_palindrome(99))\n']"
101,Write a function to find the kth element in the given array.,"['assert kth_element([12,3,5,7,19], 5, 2) == 3', 'assert kth_element([17,24,8,23], 4, 3) == 8', 'assert kth_element([16,21,25,36,4], 5, 4) == 36']","Write a function to find the kth element in the given array.
>>> Example: kth_element([12,3,5,7,19], 5, 2) == 3","def kth_element(arr, n, k):
  for i in range(n):
    for j in range(0, n-i-1):
      if arr[j] > arr[j+1]:
        arr[j], arr[j+1] == arr[j+1], arr[j]
  return arr[k-1]","['Write a function to find the kth element in the given array.\n>>> Example: kth_element([12,3,5,7,19], 5, 2) == 3\n>>> kth_element([12,3,5,7,19], 5, 3) == 5\n>>> kth_element([12,3,5,7,19], 5, 4) == 7\n>>> kth_element([12,3,5,7,19], 5, 5) == 19\n>>> kth_element([12,3,5,7,19], 5, 6) == -1\n>>> kth_element([12,3,5,7,19], 5, 7) == -1\n>>> kth_element([12,3,5,7,19], 5, 8) == -', 'Write a function to find the kth element in the given array.\n>>> Example: kth_element([12,3,5,7,19], 5, 2) == 3\n>>> kth_element([12,3,5,7,19], 5, 3) == 5\n>>> kth_element([12,3,5,7,19], 5, 4) == 7\n>>> kth_element([12,3,5,7,19], 5, 5) == 19\n>>> kth_element([12,3,5,7,19], 5, 6) == None\n>>> kth_element([12,3,5,7,19], 5, 7) == None\n>>> kth_element([12,3,5,7,19], 5, 8) == None\n>>>', 'Write a function to find the kth element in the given array.\n>>> Example: kth_element([12,3,5,7,19], 5, 2) == 3\n>>> Example: kth_element([12,3,5,7,19], 5, 3) == 5\n>>> Example: kth_element([12,3,5,7,19], 5, 4) == 7\n>>> Example: kth_element([12,3,5,7,19], 5, 5) == 19\n>>> Example: kth_element([12,3,5,7,19], 5, 6) == -1\n>>> Example: kth_element([12,3,5,7,19], 5, 7) == -1\n>>> Example: kth_element([12,3,', 'Write a function to find the kth element in the given array.\n>>> Example: kth_element([12,3,5,7,19], 5, 2) == 3\n>>> kth_element([12,3,5,7,19], 5, 3) == 5\n>>> kth_element([12,3,5,7,19], 5, 4) == 7\n>>> kth_element([12,3,5,7,19], 5, 5) == 19\n>>> kth_element([12,3,5,7,19], 5, 6) == None\n>>> kth_element([12,3,5,7,19], 5, 7) == None\n>>> kth_element([12,3,5,7,19], 5, 8) == None\n""""""', 'Write a function to find the kth element in the given array.\n>>> Example: kth_element([12,3,5,7,19], 5, 2) == 3\n>>> kth_element([12,3,5,7,19], 5, 3) == 5\n>>> kth_element([12,3,5,7,19], 5, 4) == 7\n>>> kth_element([12,3,5,7,19], 5, 5) == 19\n>>> kth_element([12,3,5,7,19], 5, 6) == None\n>>> kth_element([12,3,5,7,19], 5, 7) == None\n>>> kth_element([12,3,5,7,19], 5, 8) == None\n\n']"
102,Write a function to convert snake case string to camel case string.,"[""assert snake_to_camel('python_program')=='PythonProgram'"", ""assert snake_to_camel('python_language')==('PythonLanguage')"", ""assert snake_to_camel('programming_language')==('ProgrammingLanguage')""]","Write a function to convert snake case string to camel case string.
>>> Example: snake_to_camel('python_program')=='PythonProgram'","def snake_to_camel(word):
        import re
        return ''.join(x.capitalize() or '_' for x in word.split('_'))","[""Write a function to convert snake case string to camel case string.\n>>> Example: snake_to_camel('python_program')=='PythonProgram'\n>>> Example: snake_to_camel('camelCase')=='CamelCase'\n>>> Example: snake_to_camel('camel_case')=='CamelCase'\n>>> Example: snake_to_camel('snake_case')=='SnakeCase'\n>>> Example: snake_to_camel('snake_case_')=='SnakeCase'\n>>>"", ""Write a function to convert snake case string to camel case string.\n>>> Example: snake_to_camel('python_program')=='PythonProgram'\n>>> Example: snake_to_camel('camelCase')=='CamelCase'\n>>> Example: snake_to_camel('camel_case')=='CamelCase'\n>>> Example: snake_to_camel('camel_case_')=='CamelCase'\n>>> Example: snake_to_camel('camel_case__')=='CamelCase"", ""Write a function to convert snake case string to camel case string.\n>>> Example: snake_to_camel('python_program')=='PythonProgram'\n>>> Example: snake_to_camel('camelCase')=='CamelCase'\n>>> Example: snake_to_camel('camel_case')=='CamelCase'\n>>> Example: snake_to_camel('camel_Case')=='CamelCase'\n>>> Example: snake_to_camel('camel_case_')=='CamelCase'"", ""Write a function to convert snake case string to camel case string.\n>>> Example: snake_to_camel('python_program')=='PythonProgram'\n>>> Example: snake_to_camel('snake_case')=='SnakeCase'\n>>> Example: snake_to_camel('snake_case_')=='SnakeCase'\n>>> Example: snake_to_camel('snake_case__')=='SnakeCase'\n>>> Example: snake_to_camel('snake_case__')=='SnakeCase'\n"", ""Write a function to convert snake case string to camel case string.\n>>> Example: snake_to_camel('python_program')=='PythonProgram'\n>>> Example: snake_to_camel('camelCase')=='CamelCase'\n>>> Example: snake_to_camel('camel_case')=='CamelCase'\n>>> Example: snake_to_camel('camel_case_')=='CamelCase'\n>>> Example: snake_to_camel('camel_case_1')=='Camel""]"
103,"Write a function to find eulerian number a(n, m).","['assert eulerian_num(3, 1) == 4', 'assert eulerian_num(4, 1) == 11', 'assert eulerian_num(5, 3) == 26']","Write a function to find eulerian number a(n, m).
>>> Example: eulerian_num(3, 1) == 4","def eulerian_num(n, m): 
	if (m >= n or n == 0): 
		return 0 
	if (m == 0): 
		return 1 
	return ((n - m) * eulerian_num(n - 1, m - 1) +(m + 1) * eulerian_num(n - 1, m))","['Write a function to find eulerian number a(n, m).\n>>> Example: eulerian_num(3, 1) == 4\n""""""\n\n\ndef eulerian_num(n, m):\n    """"""\n    >>> eulerian_num(3, 1) == 4\n    True\n    >>> eulerian_num(3, 2) == 3\n    True\n    >>> eulerian_num(3, 3) == 2\n    True\n    >>> eulerian_num(3, 4) == 1\n    True\n    >>> eulerian_num(3, 5) == 0\n    True\n    >>> eulerian_num(3, 6) == 0\n    True\n    >>> eulerian_num(3, 7) == 0\n    True\n    >>> e', 'Write a function to find eulerian number a(n, m).\n>>> Example: eulerian_num(3, 1) == 4\n""""""\n\n\ndef eulerian_num(n, m):\n    """"""\n    >>> eulerian_num(3, 1) == 4\n    True\n    >>> eulerian_num(3, 2) == 3\n    True\n    >>> eulerian_num(3, 3) == 2\n    True\n    >>> eulerian_num(3, 4) == 1\n    True\n    >>> eulerian_num(3, 5) == 0\n    True\n    >>> eulerian_num(3, 6) == 0\n    True\n    >>> eulerian_num(3, 7) == 0\n    True\n    """"""\n', 'Write a function to find eulerian number a(n, m).\n>>> Example: eulerian_num(3, 1) == 4\n""""""\n\n\ndef eulerian_num(n, m):\n    """"""\n    >>> eulerian_num(3, 1) == 4\n    True\n    >>> eulerian_num(2, 1) == 2\n    True\n    >>> eulerian_num(1, 1) == 1\n    True\n    >>> eulerian_num(0, 1) == 0\n    True\n    >>> eulerian_num(1, 0) == 0\n    True\n    >>> eulerian_num(2, 0) == 0\n    True\n    >>> eulerian_num(3, 0) == 0\n    True\n    >>> e', 'Write a function to find eulerian number a(n, m).\n>>> Example: eulerian_num(3, 1) == 4\n""""""\n\n\ndef eulerian_num(n, m):\n    """"""\n    >>> eulerian_num(3, 1) == 4\n    True\n    >>> eulerian_num(2, 1) == 2\n    True\n    >>> eulerian_num(1, 1) == 1\n    True\n    >>> eulerian_num(0, 1) == 0\n    True\n    >>> eulerian_num(1, 0) == 0\n    True\n    >>> eulerian_num(2, 0) == 0\n    True\n    >>> eulerian_num(3, 0) == 0\n    True\n    """"""\n', 'Write a function to find eulerian number a(n, m).\n>>> Example: eulerian_num(3, 1) == 4\n""""""\n\n\ndef eulerian_num(n, m):\n    """"""\n    >>> eulerian_num(3, 1) == 4\n    True\n    >>> eulerian_num(3, 2) == 3\n    True\n    >>> eulerian_num(3, 3) == 2\n    True\n    >>> eulerian_num(3, 4) == 1\n    True\n    >>> eulerian_num(3, 5) == 0\n    True\n    >>> eulerian_num(3, 6) == 0\n    True\n    >>> eulerian_num(4, 1) == 4\n    True\n    >>> e']"
104,Write a function to sort each sublist of strings in a given list of lists using lambda function.,"['assert sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[[\'green\', \'orange\'], [\'black\', \'white\'], [\'black\', \'orange\', \'white\']]', 'assert sort_sublists((["" red "",""green"" ],[""blue "","" black""],["" orange"",""brown""]))==[[\' red \', \'green\'], [\' black\', \'blue \'], [\' orange\', \'brown\']]', 'assert sort_sublists(([""zilver"",""gold""], [""magnesium"",""aluminium""], [""steel"", ""bronze""]))==[[\'gold\', \'zilver\'],[\'aluminium\', \'magnesium\'], [\'bronze\', \'steel\']]']","Write a function to sort each sublist of strings in a given list of lists using lambda function.
>>> Example: sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]","def sort_sublists(input_list):
    result = [sorted(x, key = lambda x:x[0]) for x in input_list] 
    return result","['Write a function to sort each sublist of strings in a given list of lists using lambda function.\n>>> Example: sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[[\'green\', \'orange\'], [\'black\', \'white\'], [\'black\', \'orange\', \'white\']]\nTrue\n>>> Example: sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[[\'black\', \'white\'], [\'black\', \'', 'Write a function to sort each sublist of strings in a given list of lists using lambda function.\n>>> Example: sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[[\'green\', \'orange\'], [\'black\', \'white\'], [\'black\', \'orange\', \'white\']]\nTrue\n>>> Example: sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[[\'green\', \'orange\'], [\'black\', \'', 'Write a function to sort each sublist of strings in a given list of lists using lambda function.\n>>> Example: sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[[\'green\', \'orange\'], [\'black\', \'white\'], [\'black\', \'orange\', \'white\']]\nTrue\n>>> Example: sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[[\'black\', \'white\', \'orange\'], [\'', 'Write a function to sort each sublist of strings in a given list of lists using lambda function.\n>>> Example: sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[[\'green\', \'orange\'], [\'black\', \'white\'], [\'black\', \'orange\', \'white\']]\nTrue\n>>> Example: sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[[\'white\', \'black\', \'orange\'], [\'', 'Write a function to sort each sublist of strings in a given list of lists using lambda function.\n>>> Example: sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[[\'green\', \'orange\'], [\'black\', \'white\'], [\'black\', \'orange\', \'white\']]\nTrue\n>>> Example: sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[[\'black\', \'orange\', \'white\'], [\'']"
105,Write a python function to count true booleans in the given list.,"['assert count([True,False,True]) == 2', 'assert count([False,False]) == 0', 'assert count([True,True,True]) == 3']","Write a python function to count true booleans in the given list.
>>> Example: count([True,False,True]) == 2","def count(lst):   
    return sum(lst) ","['Write a python function to count true booleans in the given list.\n>>> Example: count([True,False,True]) == 2\n>>> count([True,False,True])\n2\n>>> count([', 'Write a python function to count true booleans in the given list.\n>>> Example: count([True,False,True]) == 2\n>>> count([True,False,True])\n2\n""""""\n\n', 'Write a python function to count true booleans in the given list.\n>>> Example: count([True,False,True]) == 2\n>>> count([True,False,True]) == 2\n>>> count([', 'Write a python function to count true booleans in the given list.\n>>> Example: count([True,False,True]) == 2\n>>> count([True,False,True])\n2\n>>> count(', 'Write a python function to count true booleans in the given list.\n>>> Example: count([True,False,True]) == 2\nTrue\n>>> count([True,False,True,False]) == 2']"
106,Write a function to add the given list to the given tuples.,"['assert add_lists([5, 6, 7], (9, 10)) == (9, 10, 5, 6, 7)', 'assert add_lists([6, 7, 8], (10, 11)) == (10, 11, 6, 7, 8)', 'assert add_lists([7, 8, 9], (11, 12)) == (11, 12, 7, 8, 9)']","Write a function to add the given list to the given tuples.
>>> Example: add_lists([5, 6, 7], (9, 10)) == (9, 10, 5, 6, 7)","def add_lists(test_list, test_tup):
  res = tuple(list(test_tup) + test_list)
  return (res) ","['Write a function to add the given list to the given tuples.\n>>> Example: add_lists([5, 6, 7], (9, 10)) == (9, 10, 5, 6, 7)\n>>> Example: add_lists([1, 2, 3], (4, 5)) == (1, 2, 3, 4, 5)\n>>> Example: add_lists([1, 2, 3], (4, 5, 6)) == (1', 'Write a function to add the given list to the given tuples.\n>>> Example: add_lists([5, 6, 7], (9, 10)) == (9, 10, 5, 6, 7)\n>>> Example: add_lists([1, 2, 3], (4, 5, 6)) == (1, 2, 3, 4, 5, 6)\n>>> Example: add_lists([], (1, 2, 3)) == (1,', 'Write a function to add the given list to the given tuples.\n>>> Example: add_lists([5, 6, 7], (9, 10)) == (9, 10, 5, 6, 7)\n>>> Example: add_lists([1, 2, 3], (4, 5, 6)) == (1, 2, 3, 4, 5, 6)\n>>> Example: add_lists([1, 2, 3], (4, 5, 6', 'Write a function to add the given list to the given tuples.\n>>> Example: add_lists([5, 6, 7], (9, 10)) == (9, 10, 5, 6, 7)\n>>> Example: add_lists([1, 2, 3], (4, 5, 6)) == (1, 2, 3, 4, 5, 6)\n>>> Example: add_lists([], ()) == ()\n>>> Example: add_lists([', 'Write a function to add the given list to the given tuples.\n>>> Example: add_lists([5, 6, 7], (9, 10)) == (9, 10, 5, 6, 7)\n>>> Example: add_lists([1, 2, 3], (4, 5, 6)) == (1, 2, 3, 4, 5, 6)\n>>> Example: add_lists([1, 2, 3], (4, 5)) ==']"
108,Write a function to merge multiple sorted inputs into a single sorted iterator using heap queue algorithm.,"['assert merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])==[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]', 'assert merge_sorted_list([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12])==[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]', 'assert merge_sorted_list([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1],[25, 35, 22, 85, 14, 65, 75, 25, 58],[12, 74, 9, 50, 61, 41])==[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]']","Write a function to merge multiple sorted inputs into a single sorted iterator using heap queue algorithm.
>>> Example: merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])==[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]","import heapq
def merge_sorted_list(num1,num2,num3):
  num1=sorted(num1)
  num2=sorted(num2)
  num3=sorted(num3)
  result = heapq.merge(num1,num2,num3)
  return list(result)","['Write a function to merge multiple sorted inputs into a single sorted iterator using heap queue algorithm.\n>>> Example: merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])==[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]\n[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]\n>>> Example: merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26', 'Write a function to merge multiple sorted inputs into a single sorted iterator using heap queue algorithm.\n>>> Example: merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])==[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]\n[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]\n>>> Example: merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154])==[4', 'Write a function to merge multiple sorted inputs into a single sorted iterator using heap queue algorithm.\n>>> Example: merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])==[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]\n[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]\n>>> Example: merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[])==[', 'Write a function to merge multiple sorted inputs into a single sorted iterator using heap queue algorithm.\n>>> Example: merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])==[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]\n[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]\n>>> Example: merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[25, 26', 'Write a function to merge multiple sorted inputs into a single sorted iterator using heap queue algorithm.\n>>> Example: merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])==[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]\n[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]\n>>> Example: merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[25, 24']"
109,Write a python function to find the count of rotations of a binary string with odd value.,"['assert odd_Equivalent(""011001"",6) == 3', 'assert odd_Equivalent(""11011"",5) == 4', 'assert odd_Equivalent(""1010"",4) == 2']","Write a python function to find the count of rotations of a binary string with odd value.
>>> Example: odd_Equivalent(""011001"",6) == 3","def odd_Equivalent(s,n): 
    count=0
    for i in range(0,n): 
        if (s[i] == '1'): 
            count = count + 1
    return count ","['Write a python function to find the count of rotations of a binary string with odd value.\n>>> Example: odd_Equivalent(""011001"",6) == 3\n>>> Example: odd_Equivalent(""011001"",5) == 2\n>>> Example: odd_Equivalent(""011001"",4) == 1\n>>> Example: odd_Equivalent(""011001"",3) == 0\n>>> Example: odd_Equivalent(""011001"",2) == 0\n>>> Example: odd_Equivalent(""011001"",1) == 0\n>>> Example: odd_Equivalent(""011001"",0) == 0\n>>> Example: odd_Equivalent(""011001"",-1) == 0', 'Write a python function to find the count of rotations of a binary string with odd value.\n>>> Example: odd_Equivalent(""011001"",6) == 3\n>>> Example: odd_Equivalent(""011001"",5) == 2\n>>> Example: odd_Equivalent(""011001"",4) == 1\n>>> Example: odd_Equivalent(""011001"",3) == 0\n>>> Example: odd_Equivalent(""011001"",2) == 0\n>>> Example: odd_Equivalent(""011001"",1) == 0\n>>> Example: odd_Equivalent(""011001"",0) == 0\n>>> Example: odd_Equivalent(""011001"",0) == 0\n', 'Write a python function to find the count of rotations of a binary string with odd value.\n>>> Example: odd_Equivalent(""011001"",6) == 3\n>>> Example: odd_Equivalent(""011001"",5) == 2\n>>> Example: odd_Equivalent(""011001"",4) == 1\n>>> Example: odd_Equivalent(""011001"",3) == 0\n>>> Example: odd_Equivalent(""011001"",2) == 0\n>>> Example: odd_Equivalent(""011001"",1) == 0\n>>> Example: odd_Equivalent(""011001"",0) == 0\n>>> Example: odd_Equivalent(""011001"",7) == 0\n', 'Write a python function to find the count of rotations of a binary string with odd value.\n>>> Example: odd_Equivalent(""011001"",6) == 3\n>>> Example: odd_Equivalent(""011001"",5) == 2\n>>> Example: odd_Equivalent(""011001"",4) == 1\n>>> Example: odd_Equivalent(""011001"",3) == 0\n>>> Example: odd_Equivalent(""011001"",2) == 0\n>>> Example: odd_Equivalent(""011001"",1) == 0\n>>> Example: odd_Equivalent(""011001"",0) == 0\n>>> Example: odd_Equivalent(""011001"",8) == 0\n', 'Write a python function to find the count of rotations of a binary string with odd value.\n>>> Example: odd_Equivalent(""011001"",6) == 3\n>>> Example: odd_Equivalent(""011001"",5) == 2\n>>> Example: odd_Equivalent(""011001"",4) == 1\n>>> Example: odd_Equivalent(""011001"",3) == 0\n>>> Example: odd_Equivalent(""011001"",2) == 0\n>>> Example: odd_Equivalent(""011001"",1) == 0\n>>> Example: odd_Equivalent(""011001"",0) == 0\n>>> Example: odd_Equivalent(""011001"",-1) == -']"
111,Write a function to find common elements in given nested lists. * list item * list item * list item * list item,"['assert common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]])==[18, 12]', 'assert common_in_nested_lists([[12, 5, 23, 25, 45], [7, 11, 5, 23, 28], [1, 5, 8, 18, 23, 16]])==[5,23]', 'assert common_in_nested_lists([[2, 3,4, 1], [4, 5], [6,4, 8],[4, 5], [6, 8,4]])==[4]']","Write a function to find common elements in given nested lists. * list item * list item * list item * list item
>>> Example: common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]])==[18, 12]","def common_in_nested_lists(nestedlist):
    result = list(set.intersection(*map(set, nestedlist)))
    return result","['Write a function to find common elements in given nested lists. * list item * list item * list item * list item\n>>> Example: common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]])==[18, 12]\nTrue\n>>> Example: common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5,', 'Write a function to find common elements in given nested lists. * list item * list item * list item * list item\n>>> Example: common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]])==[18, 12]\n>>> Example: common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8,', 'Write a function to find common elements in given nested lists. * list item * list item * list item * list item\n>>> Example: common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]])==[18, 12]\nTrue\n>>> Example: common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24], [1, 5, 8,', 'Write a function to find common elements in given nested lists. * list item * list item * list item * list item\n>>> Example: common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]])==[18, 12]\n>>> Example: common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8]]', 'Write a function to find common elements in given nested lists. * list item * list item * list item * list item\n>>> Example: common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]])==[18, 12]\nTrue\n>>> Example: common_in_nested_lists([[12, 18, 23, 25, 45], [1, 5, 8, 12, 15, 16, 18], [']"
112,Write a python function to find the perimeter of a cylinder.,"['assert perimeter(2,4) == 12', 'assert perimeter(1,2) == 6', 'assert perimeter(3,1) == 8']","Write a python function to find the perimeter of a cylinder.
>>> Example: perimeter(2,4) == 12","def perimeter(diameter,height) : 
    return 2*(diameter+height)  ","['Write a python function to find the perimeter of a cylinder.\n>>> Example: perimeter(2,4) == 12\n""""""\n\ndef perimeter(r,h):\n    return 2*3.14*r + 2*3.14*h\n\nprint(perimeter(2,4))\n', 'Write a python function to find the perimeter of a cylinder.\n>>> Example: perimeter(2,4) == 12\n""""""\n\ndef perimeter(r,h):\n    return 2*3.14*r+2*3.14*h\n\nprint(perimeter(2,4))\n', 'Write a python function to find the perimeter of a cylinder.\n>>> Example: perimeter(2,4) == 12\n""""""\n\ndef perimeter(r,h):\n    return 2*3.14*r + 2*3.14*h\n\nprint(perimeter(2,4))\n\n""""""\nWrite a python function', 'Write a python function to find the perimeter of a cylinder.\n>>> Example: perimeter(2,4) == 12\n""""""\n\ndef perimeter(r,h):\n    perimeter = 2*3.14*r + 2*3.14*h\n    return perimeter\n\nprint(perimeter(2,4))\n\n', 'Write a python function to find the perimeter of a cylinder.\n>>> Example: perimeter(2,4) == 12\n""""""\n\ndef perimeter(r,h):\n    return 2*3.14*r+2*3.14*h\n\nprint(perimeter(2,4))\n\n""""""\nWrite a python function']"
114,Write a function to assign frequency to each tuple in the given tuple list.,"[""assert assign_freq([(6, 5, 8), (2, 7), (6, 5, 8), (6, 5, 8), (9, ), (2, 7)] ) == '[(6, 5, 8, 3), (2, 7, 2), (9, 1)]'"", ""assert assign_freq([(4, 2, 4), (7, 1), (4, 8), (4, 2, 4), (9, 2), (7, 1)] ) == '[(4, 2, 4, 2), (7, 1, 2), (4, 8, 1), (9, 2, 1)]'"", ""assert assign_freq([(11, 13, 10), (17, 21), (4, 2, 3), (17, 21), (9, 2), (4, 2, 3)] ) == '[(11, 13, 10, 1), (17, 21, 2), (4, 2, 3, 2), (9, 2, 1)]'""]","Write a function to assign frequency to each tuple in the given tuple list.
>>> Example: assign_freq([(6, 5, 8), (2, 7), (6, 5, 8), (6, 5, 8), (9, ), (2, 7)] ) == '[(6, 5, 8, 3), (2, 7, 2), (9, 1)]'","from collections import Counter 
def assign_freq(test_list):
  res = [(*key, val) for key, val in Counter(test_list).items()]
  return (str(res)) ","[""Write a function to assign frequency to each tuple in the given tuple list.\n>>> Example: assign_freq([(6, 5, 8), (2, 7), (6, 5, 8), (6, 5, 8), (9, ), (2, 7)] ) == '[(6, 5, 8, 3), (2, 7, 2), (9, 1)]'\n>>> Example: assign_freq([(6, 5, 8), (2, 7), (6, 5, 8), (6, 5, 8), (9, ), (2, 7)] ) == '[(6, 5, 8, 3), (2, 7, 2), (9, 1)]'\n"", ""Write a function to assign frequency to each tuple in the given tuple list.\n>>> Example: assign_freq([(6, 5, 8), (2, 7), (6, 5, 8), (6, 5, 8), (9, ), (2, 7)] ) == '[(6, 5, 8, 3), (2, 7, 2), (9, 1)]'\n>>> Example: assign_freq([(6, 5, 8), (2, 7), (6, 5, 8), (6, 5, 8), (9, ), (2, 7)]) == '[(6, 5, 8, 3), (2, 7, 2), (9, 1)]'\n"", ""Write a function to assign frequency to each tuple in the given tuple list.\n>>> Example: assign_freq([(6, 5, 8), (2, 7), (6, 5, 8), (6, 5, 8), (9, ), (2, 7)] ) == '[(6, 5, 8, 3), (2, 7, 2), (9, 1)]'\n>>> Example: assign_freq([(6, 5, 8), (2, 7), (6, 5, 8), (6, 5, 8), (9, )]) == '[(6, 5, 8, 3), (2, 7, 2), (9, 1)]'\n>>> Example: assign_"", ""Write a function to assign frequency to each tuple in the given tuple list.\n>>> Example: assign_freq([(6, 5, 8), (2, 7), (6, 5, 8), (6, 5, 8), (9, ), (2, 7)] ) == '[(6, 5, 8, 3), (2, 7, 2), (9, 1)]'\n>>> Example: assign_freq([(6, 5, 8), (2, 7), (6, 5, 8), (6, 5, 8), (9, ), (2, 7)] ) == '[(6, 5, 8, 3), (2, 7, 2), (9, 1), (6"", ""Write a function to assign frequency to each tuple in the given tuple list.\n>>> Example: assign_freq([(6, 5, 8), (2, 7), (6, 5, 8), (6, 5, 8), (9, ), (2, 7)] ) == '[(6, 5, 8, 3), (2, 7, 2), (9, 1)]'\n>>> Example: assign_freq([(6, 5, 8), (2, 7), (6, 5, 8), (6, 5, 8), (9, ), (2, 7)] ) == '[(2, 7, 2), (6, 5, 8, 3), (9, 1)]'\n""]"
115,Write a function to check whether all dictionaries in a list are empty or not.,"['assert empty_dit([{},{},{}])==True', 'assert empty_dit([{1,2},{},{}])==False', 'assert empty_dit({})==True']","Write a function to check whether all dictionaries in a list are empty or not.
>>> Example: empty_dit([{},{},{}])==True","def empty_dit(list1):
 empty_dit=all(not d for d in list1)
 return empty_dit","['Write a function to check whether all dictionaries in a list are empty or not.\n>>> Example: empty_dit([{},{},{}])==True\n>>> Example: empty_dit([{},{},{},{}])==False\n>>> Example: empty_dit([{},{},{},{},{}])==False\n>>> Example: empty_dit([{', ""Write a function to check whether all dictionaries in a list are empty or not.\n>>> Example: empty_dit([{},{},{}])==True\n>>> Example: empty_dit([{'a':1},{'b':2},{'c':3}])==False\n>>> Example: empty_dit([{'a':1},{'b':2},"", 'Write a function to check whether all dictionaries in a list are empty or not.\n>>> Example: empty_dit([{},{},{}])==True\n>>> Example: empty_dit([{},{},{},{}])==False\n>>> Example: empty_dit([])==True\n>>> Example: empty_dit([])==False\n""""""\n\n\ndef empty_dit', 'Write a function to check whether all dictionaries in a list are empty or not.\n>>> Example: empty_dit([{},{},{}])==True\n>>> Example: empty_dit([{},{},{},{}])==False\n>>> Example: empty_dit([])==True\n>>> Example: empty_dit([])==False\n""""""\n\ndef empty_dit', 'Write a function to check whether all dictionaries in a list are empty or not.\n>>> Example: empty_dit([{},{},{}])==True\n>>> Example: empty_dit([{},{},{},{}])==False\n>>> Example: empty_dit([{},{},{},{},{}])==False\n>>> Example: empty_dit([])']"
116,Write a function to convert a given tuple of positive integers into an integer.,"['assert tuple_to_int((1,2,3))==123', 'assert tuple_to_int((4,5,6))==456', 'assert tuple_to_int((5,6,7))==567']","Write a function to convert a given tuple of positive integers into an integer.
>>> Example: tuple_to_int((1,2,3))==123","def tuple_to_int(nums):
    result = int(''.join(map(str,nums)))
    return result","['Write a function to convert a given tuple of positive integers into an integer.\n>>> Example: tuple_to_int((1,2,3))==123\n>>> tuple_to_int((1,2,3))==123\n>>> tuple_to_int((1,2,3))==123\n>>> tuple_to_int((1,2,3))==123\n>>> tuple_to_int((', 'Write a function to convert a given tuple of positive integers into an integer.\n>>> Example: tuple_to_int((1,2,3))==123\n>>> tuple_to_int((1,2,3,4))==1234\n>>> tuple_to_int((1,2,3,4,5))==12345\n>>> tuple_to_int((1,2,3,4,', 'Write a function to convert a given tuple of positive integers into an integer.\n>>> Example: tuple_to_int((1,2,3))==123\nTrue\n>>> Example: tuple_to_int((1,2,3,4))==1234\nTrue\n>>> Example: tuple_to_int((1,2,3,4,5))==12345\nTrue\n>>> Example: tuple_', 'Write a function to convert a given tuple of positive integers into an integer.\n>>> Example: tuple_to_int((1,2,3))==123\n>>> Example: tuple_to_int((1,2,3,4))==1234\n>>> Example: tuple_to_int((1,2,3,4,5))==12345\n>>> Example: tuple_to_int((1,', 'Write a function to convert a given tuple of positive integers into an integer.\n>>> Example: tuple_to_int((1,2,3))==123\n>>> tuple_to_int((1,2,3))==123\n>>> tuple_to_int((1,2,3,4))==1234\n>>> tuple_to_int((1,2,3,4,5))==12345']"
118,[link text](https:// [link text](https:// [link text](https://)))write a function to convert a string to a list.,"['assert string_to_list(""python programming"")==[\'python\',\'programming\']', 'assert string_to_list(""lists tuples strings"")==[\'lists\',\'tuples\',\'strings\']', 'assert string_to_list(""write a program"")==[\'write\',\'a\',\'program\']']","[link text](https:// [link text](https:// [link text](https://)))write a function to convert a string to a list.
>>> Example: string_to_list(""python programming"")==['python','programming']","def string_to_list(string): 
    lst = list(string.split("" "")) 
    return lst","['[link text](https:// [link text](https:// [link text](https://)))write a function to convert a string to a list.\n>>> Example: string_to_list(""python programming"")==[\'python\',\'programming\']\n>>> Example: string_to_list(""python programming"")==[\'python\',\'programming\']\n>>> Example: string_to_list(""python programming"")==[\'', '[link text](https:// [link text](https:// [link text](https://)))write a function to convert a string to a list.\n>>> Example: string_to_list(""python programming"")==[\'python\',\'programming\']\n>>> Example: string_to_list(""python programming"")==[\'python\', \'programming\']\n>>> Example: string_to_list(""python programming"")==', '[link text](https:// [link text](https:// [link text](https://)))write a function to convert a string to a list.\n>>> Example: string_to_list(""python programming"")==[\'python\',\'programming\']\n\n\'\'\'\n\ndef string_to_list(string):\n    return string.split()\n\nprint(string_to_list(""python programming""))', '[link text](https:// [link text](https:// [link text](https://)))write a function to convert a string to a list.\n>>> Example: string_to_list(""python programming"")==[\'python\',\'programming\']\n\'\'\'\n\ndef string_to_list(string):\n    return string.split()\n\nprint(string_to_list(""python programming""))\n', '[link text](https:// [link text](https:// [link text](https://)))write a function to convert a string to a list.\n>>> Example: string_to_list(""python programming"")==[\'python\',\'programming\']\n\'\'\'\n\ndef string_to_list(string):\n    return string.split()\n\nprint(string_to_list(""python programming""))']"
119,Write a python function to find the element that appears only once in a sorted array.,"['assert search([1,1,2,2,3],5) == 3', 'assert search([1,1,3,3,4,4,5,5,7,7,8],11) == 8', 'assert search([1,2,2,3,3,4,4],7) == 1']","Write a python function to find the element that appears only once in a sorted array.
>>> Example: search([1,1,2,2,3],5) == 3","def search(arr,n) :
    XOR = 0
    for i in range(n) :
        XOR = XOR ^ arr[i]
    return (XOR)","['Write a python function to find the element that appears only once in a sorted array.\n>>> Example: search([1,1,2,2,3],5) == 3\n>>> search([1,1,2,2,3],1) == 1\n>>> search([1,1,2,2,3],2) == 2\n>>> search([1,1,2,2,3],3) == 3\n>>> search([1,1,2,2,3],4) ==', 'Write a python function to find the element that appears only once in a sorted array.\n>>> Example: search([1,1,2,2,3],5) == 3\n>>> search([1,1,2,2,3],1) == 1\n>>> search([1,1,2,2,3],2) == 2\n>>> search([1,1,2,2,3],3) == 2\n>>> search([1,1,2,2,3],4) ==', 'Write a python function to find the element that appears only once in a sorted array.\n>>> Example: search([1,1,2,2,3],5) == 3\n>>> Example: search([1,1,2,2,3],1) == 1\n>>> Example: search([1,1,2,2,3],2) == 2\n>>> Example: search([1,1,2,2,3],3) == 3\n>>> Example: search([1,1,2', 'Write a python function to find the element that appears only once in a sorted array.\n>>> Example: search([1,1,2,2,3],5) == 3\n>>> Example: search([1,1,2,2,3],1) == 1\n>>> Example: search([1,1,2,2,3],2) == 2\n>>> Example: search([1,1,2,2,3],3) == 2\n>>> Example: search([1,1,2', 'Write a python function to find the element that appears only once in a sorted array.\n>>> Example: search([1,1,2,2,3],5) == 3\n>>> search([1,1,2,2,3],1) == 1\n>>> search([1,1,2,2,3],2) == 2\n>>> search([1,1,2,2,3],3) == None\n>>> search([1,1,2,2,3],4) ==']"
120,Write a function to find the maximum product from the pairs of tuples within a given list.,"['assert max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==36', 'assert max_product_tuple([(10,20), (15,2), (5,10)] )==200', 'assert max_product_tuple([(11,44), (10,15), (20,5), (12, 9)] )==484']","Write a function to find the maximum product from the pairs of tuples within a given list.
>>> Example: max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==36","def max_product_tuple(list1):
    result_max = max([abs(x * y) for x, y in list1] )
    return result_max","['Write a function to find the maximum product from the pairs of tuples within a given list.\n>>> Example: max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==36\n>>> max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)])\n36\n>>> max_product_tuple([(2, 7), (2, 6), (1, 8), (4,', 'Write a function to find the maximum product from the pairs of tuples within a given list.\n>>> Example: max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==36\n>>> max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)])==36\n>>> max_product_tuple([(2, 7), (2, 6), (1, 8), (4,', 'Write a function to find the maximum product from the pairs of tuples within a given list.\n>>> Example: max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==36\n>>> max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)])\n36\n>>> max_product_tuple([(2, 7), (2, 7), (1, 8), (4,', 'Write a function to find the maximum product from the pairs of tuples within a given list.\n>>> Example: max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==36\n>>> max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)])\n36\n>>> max_product_tuple([(2, 7), (2, 5), (1, 8), (4,', 'Write a function to find the maximum product from the pairs of tuples within a given list.\n>>> Example: max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==36\n>>> max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)])\n36\n>>> max_product_tuple([(2, 6), (1, 8), (4, 9)])\n36']"
123,Write a function to sum all amicable numbers from 1 to a specified number.,"['assert amicable_numbers_sum(999)==504', 'assert amicable_numbers_sum(9999)==31626', 'assert amicable_numbers_sum(99)==0']","Write a function to sum all amicable numbers from 1 to a specified number.
>>> Example: amicable_numbers_sum(999)==504","def amicable_numbers_sum(limit):
    if not isinstance(limit, int):
        return ""Input is not an integer!""
    if limit < 1:
        return ""Input must be bigger than 0!""
    amicables = set()
    for num in range(2, limit+1):
        if num in amicables:
            continue
        sum_fact = sum([fact for fact in range(1, num) if num % fact == 0])
        sum_fact2 = sum([fact for fact in range(1, sum_fact) if sum_fact % fact == 0])
        if num == sum_fact2 and num != sum_fact:
            amicables.add(num)
            amicables.add(sum_fact2)
    return sum(amicables)","['Write a function to sum all amicable numbers from 1 to a specified number.\n>>> Example: amicable_numbers_sum(999)==504\n""""""\n\n\ndef amicable_numbers_sum(number):\n    amicable_numbers = []\n    for i in range(1, number):\n        if sum(amicable_numbers) == i and sum(amicable_numbers)!= i:\n            amicable_numbers.append(i)\n    return sum(amicable_numbers)\n\n\nprint(amicable_numbers_sum(999))\n', 'Write a function to sum all amicable numbers from 1 to a specified number.\n>>> Example: amicable_numbers_sum(999)==504\n""""""\n\n\ndef amicable_numbers_sum(number):\n    amicable_numbers = []\n    for i in range(1, number):\n        if sum(amicable_numbers) == i:\n            amicable_numbers.append(i)\n            amicable_numbers.append(sum(amicable_numbers))\n    return sum(amicable_numbers)\n\n\nprint(amicable_numbers_sum(999))\n', 'Write a function to sum all amicable numbers from 1 to a specified number.\n>>> Example: amicable_numbers_sum(999)==504\n""""""\n\n\ndef amicable_numbers_sum(number):\n    amicable_numbers = []\n    for i in range(1, number):\n        if sum(amicable_numbers) == i and sum(amicable_numbers)!= i:\n            amicable_numbers.append(i)\n    return sum(amicable_numbers)\n\n\nif __name__ == ""__main__"":\n    print(amicable_numbers_sum(999))\n', 'Write a function to sum all amicable numbers from 1 to a specified number.\n>>> Example: amicable_numbers_sum(999)==504\n""""""\n\n\ndef amicable_numbers_sum(number):\n    amicable_numbers = []\n    for i in range(1, number):\n        if sum(amicable_numbers) == i and sum(amicable_numbers)!= i:\n            amicable_numbers.append(i)\n    return sum(amicable_numbers)\n\n\nif __name__ == \'__main__\':\n    print(amicable_numbers_sum(999))\n', 'Write a function to sum all amicable numbers from 1 to a specified number.\n>>> Example: amicable_numbers_sum(999)==504\n""""""\n\n\ndef amicable_numbers_sum(number):\n    amicable_numbers = []\n    for i in range(1, number):\n        if sum(amicable_numbers) == i:\n            amicable_numbers.append(i)\n    return sum(amicable_numbers)\n\n\nprint(amicable_numbers_sum(999))\n']"
124,Write a function to get the angle of a complex number.,"['assert angle_complex(0,1j)==1.5707963267948966 ', 'assert angle_complex(2,1j)==0.4636476090008061', 'assert angle_complex(0,2j)==1.5707963267948966']","Write a function to get the angle of a complex number.
>>> Example: angle_complex(0,1j)==1.5707963267948966 ","import cmath
def angle_complex(a,b):
  cn=complex(a,b)
  angle=cmath.phase(a+b)
  return angle","['Write a function to get the angle of a complex number.\n>>> Example: angle_complex(0,1j)==1.5707963267948966 \n>>> angle_complex(0,1j)==1.5707963267948966 \n>>> angle_complex(0,1j)==1.5707963267948966 \n>>> angle_complex(0,1j)==1.5707963267948966 \n', 'Write a function to get the angle of a complex number.\n>>> Example: angle_complex(0,1j)==1.5707963267948966 \n>>> angle_complex(0,1j)==1.5707963267948966 \n>>> angle_complex(0,1j)==1.5707963267948966 \n>>> angle_complex(0,-1j)==-1.5707963267948966 ', 'Write a function to get the angle of a complex number.\n>>> Example: angle_complex(0,1j)==1.5707963267948966 \n>>> angle_complex(0,1j)==1.5707963267948966 \n>>> angle_complex(0,1j)==1.5707963267948966 \n>>> angle_complex(0,0)==0\n>>> angle_complex(0,0)==', 'Write a function to get the angle of a complex number.\n>>> Example: angle_complex(0,1j)==1.5707963267948966 ', 'Write a function to get the angle of a complex number.\n>>> Example: angle_complex(0,1j)==1.5707963267948966 \n>>> angle_complex(0,1j)==1.5707963267948966 \n>>> angle_complex(0,1j)==1.5707963267948966 \n>>> angle_complex(0,0)==0 \n>>> angle_complex(0,0)']"
125,Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.,"['assert find_length(""11000010001"", 11) == 6', 'assert find_length(""10111"", 5) == 1', 'assert find_length(""11011101100101"", 14) == 2 ']","Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.
>>> Example: find_length(""11000010001"", 11) == 6","def find_length(string, n): 
	current_sum = 0
	max_sum = 0
	for i in range(n): 
		current_sum += (1 if string[i] == '0' else -1) 
		if current_sum < 0: 
			current_sum = 0
		max_sum = max(current_sum, max_sum) 
	return max_sum if max_sum else 0","['Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n>>> Example: find_length(""11000010001"", 11) == 6\n""""""\n\n\ndef find_length(binary_string, length):\n    count_0 = 0\n    count_1 = 0\n    for i in range(length):\n        if binary_string[i] == \'0\':\n            count_0 += 1\n        else:\n            count_1 += 1\n    return max(count_0, count_1)\n\n\nprint(find_length(""11000010001"", 11))\n', 'Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n>>> Example: find_length(""11000010001"", 11) == 6\n""""""\n\n\ndef find_length(binary_string, length):\n    count_0 = 0\n    count_1 = 0\n    for i in range(length):\n        if binary_string[i] == \'0\':\n            count_0 += 1\n        else:\n            count_1 += 1\n    return max(count_0, count_1)\n\n\nif __name__ == ""__main__"":\n    print(find_length(""11000010001"", 11))\n', 'Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n>>> Example: find_length(""11000010001"", 11) == 6\n""""""\n\n\ndef find_length(binary_string, length):\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == \'0\':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 == length and count_1 == length:\n            return i - length + 1\n    return -1\n\n\nprint(find_length(""11000010001"", 11))\n', 'Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n>>> Example: find_length(""11000010001"", 11) == 6\n""""""\n\n\ndef find_length(binary_string, length):\n    count_0 = 0\n    count_1 = 0\n    for i in range(length):\n        if binary_string[i] == \'0\':\n            count_0 += 1\n        else:\n            count_1 += 1\n    return max(count_0, count_1)\n', 'Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n>>> Example: find_length(""11000010001"", 11) == 6\n""""""\n\n\ndef find_length(binary_string, length):\n    count_0 = 0\n    count_1 = 0\n    for i in range(length):\n        if binary_string[i] == \'0\':\n            count_0 += 1\n        else:\n            count_1 += 1\n    return max(count_0, count_1)\n\n\nif __name__ == ""__main__"":\n    print(find_length(""11000010001"", 11))  # 6\n']"
126,Write a python function to find the sum of common divisors of two given numbers.,"['assert sum(10,15) == 6', 'assert sum(100,150) == 93', 'assert sum(4,6) == 3']","Write a python function to find the sum of common divisors of two given numbers.
>>> Example: sum(10,15) == 6","def sum(a,b): 
    sum = 0
    for i in range (1,min(a,b)): 
        if (a % i == 0 and b % i == 0): 
            sum += i 
    return sum","['Write a python function to find the sum of common divisors of two given numbers.\n>>> Example: sum(10,15) == 6\n""""""\n\ndef sum_of_common_divisors(num1, num2):\n    common_divisors = []\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            common_divisors.append(i)\n    return sum(common_divisors)\n\nprint(sum_of_common_divisors(10, 15))\nprint(sum_of_common_div', 'Write a python function to find the sum of common divisors of two given numbers.\n>>> Example: sum(10,15) == 6\n""""""\n\ndef sum_of_common_divisors(num1, num2):\n    common_divisors = []\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            common_divisors.append(i)\n    return sum(common_divisors)\n\nprint(sum_of_common_divisors(10,15))\nprint(sum_of_common_div', 'Write a python function to find the sum of common divisors of two given numbers.\n>>> Example: sum(10,15) == 6\n""""""\n\ndef sum_of_common_divisors(num1, num2):\n    common_divisors = []\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            common_divisors.append(i)\n    return sum(common_divisors)\n\nprint(sum_of_common_divisors(10,15))\n', 'Write a python function to find the sum of common divisors of two given numbers.\n>>> Example: sum(10,15) == 6\n""""""\n\ndef sum_of_common_divisors(num1, num2):\n    common_divisors = []\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            common_divisors.append(i)\n    return sum(common_divisors)\n\nif __name__ == \'__main__\':\n    num1 = int(input())\n    num2 = int(', 'Write a python function to find the sum of common divisors of two given numbers.\n>>> Example: sum(10,15) == 6\n""""""\n\ndef sum_of_common_divisors(num1, num2):\n    common_divisors = []\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            common_divisors.append(i)\n    return sum(common_divisors)\n\nprint(sum_of_common_divisors(10,15))']"
127,Write a function to multiply two integers without using the * operator in python.,"['assert multiply_int(10,20)==200', 'assert multiply_int(5,10)==50', 'assert multiply_int(4,8)==32']","Write a function to multiply two integers without using the * operator in python.
>>> Example: multiply_int(10,20)==200","def multiply_int(x, y):
    if y < 0:
        return -multiply_int(x, -y)
    elif y == 0:
        return 0
    elif y == 1:
        return x
    else:
        return x + multiply_int(x, y - 1)","['Write a function to multiply two integers without using the * operator in python.\n>>> Example: multiply_int(10,20)==200\n""""""\n\ndef multiply_int(a,b):\n    return a*b\n\nprint(multiply_int(10,20))\n\n""""""\nWrite a function to multiply two integers without using the * operator in python.\n>>> Example: multiply_int(10,20)==200\n""""""\n\ndef multiply_int(a,b):\n    return a*b\n\nprint(multiply_int(10,20))\n\n""""""\nWrite a function to multiply two integers without using the * operator in python.\n>>> Example: multiply_int(10,20)==200\n""""""\n\ndef multiply_int(a,b):\n    return a*b\n\nprint(multiply_int(10,20))', 'Write a function to multiply two integers without using the * operator in python.\n>>> Example: multiply_int(10,20)==200\n""""""\n\ndef multiply_int(a,b):\n    return a*b\n\nprint(multiply_int(10,20))\n', 'Write a function to multiply two integers without using the * operator in python.\n>>> Example: multiply_int(10,20)==200\n""""""\n\ndef multiply_int(a,b):\n    return a*b\n\nprint(multiply_int(10,20))', 'Write a function to multiply two integers without using the * operator in python.\n>>> Example: multiply_int(10,20)==200\n""""""\n\ndef multiply_int(x,y):\n    return x*y\n\nprint(multiply_int(10,20))\n', ""Write a function to multiply two integers without using the * operator in python.\n>>> Example: multiply_int(10,20)==200\n'''\n\ndef multiply_int(a,b):\n    return a*b\n\nprint(multiply_int(10,20))\n""]"
128,Write a function to shortlist words that are longer than n from a given list of words.,"['assert long_words(3,""python is a programming language"")==[\'python\',\'programming\',\'language\']', 'assert long_words(2,""writing a program"")==[\'writing\',\'program\']', 'assert long_words(5,""sorting list"")==[\'sorting\']']","Write a function to shortlist words that are longer than n from a given list of words.
>>> Example: long_words(3,""python is a programming language"")==['python','programming','language']","def long_words(n, str):
    word_len = []
    txt = str.split("" "")
    for x in txt:
        if len(x) > n:
            word_len.append(x)
    return word_len	","['Write a function to shortlist words that are longer than n from a given list of words.\n>>> Example: long_words(3,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(2,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(1,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(0,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(-1,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(-2,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n', 'Write a function to shortlist words that are longer than n from a given list of words.\n>>> Example: long_words(3,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(2,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(1,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(0,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(-1,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(-2,""python is a programming language"")==[]\n>>> Example: long_words(', 'Write a function to shortlist words that are longer than n from a given list of words.\n>>> Example: long_words(3,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(2,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(1,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(0,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(-1,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(5,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n', 'Write a function to shortlist words that are longer than n from a given list of words.\n>>> Example: long_words(3,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(2,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(1,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(0,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(-1,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(-2,""python is a programming language"")==[]\n>>> Example: long_words(-', 'Write a function to shortlist words that are longer than n from a given list of words.\n>>> Example: long_words(3,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(2,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(1,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(0,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(-1,""python is a programming language"")==[\'python\',\'programming\',\'language\']\n>>> Example: long_words(5,""python is a programming language"")==[]\n>>> Example: long_words(']"
